{"version":3,"file":"static/webpack/static/development/pages/_app.js.52c41a7869743e04da94.hot-update.js","sources":["webpack:///./components/Onboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {OnboardNavbar} from './OnboardNavbar'\nimport {Container} from './Container'\nimport {Typography} from 'antd'\nimport {User} from '../model/model'\nimport {myFirebase} from \"../lib/firebase\";\nimport FormPersonalData from './OnboardingFlow/FormPersonalData'\nimport QuizScreen from './OnboardingFlow/QuizScreen'\nimport styled from 'styled-components'\nimport {getUser} from '../lib/server'\n\nconst Title = styled(Typography.Title)`\n    padding-top: 15px;\n    padding-bottom: 35px;\n`\n\nconst TOTAL_STEPS = [\n    {title: \"Employer or Designer\", desc: \"Are you an Employer or Desinger?\"},\n    {title: \"Get Started\", desc: \"Add Personal Data\"},\n    {title: \"Take the Quiz\", desc: \"Finish Up and Get Evaluated\"}\n];\n\nexport const Onboard: React.FC<{}> = props => {\n    const [currentStep, changeStep] = useState(1);\n    const [currentUser, changeUser] = useState<User | undefined>(undefined);\n\n    useEffect(() => {\n        async function isAccountCreated() {\n            const res = await getUser(firebaseUser.uid)\n            return res[\"user_exists\"] !== undefined\n        }\n\n        const firebaseUser = myFirebase.auth().currentUser;\n        if (firebaseUser !== null) {\n            if (isAccountCreated()) {\n                // TODO: Retrieve user and update\n            } else {\n                changeUser({\n                    email: firebaseUser.email,\n                    firebaseId: firebaseUser.uid,\n                    firstName: firebaseUser.displayName.substr(0, firebaseUser.displayName.indexOf(' ')),\n                    lastName: firebaseUser.displayName.substr(firebaseUser.displayName.indexOf(' ')+1),\n                });\n            }\n        }\n    }, [myFirebase.auth().currentUser]);\n\n    var currentForm;\n    var title;\n    switch (currentStep) {\n        case 0:\n            title = TOTAL_STEPS[0].title\n            break;\n        case 1:\n            title = TOTAL_STEPS[1].title\n            currentForm = <FormPersonalData changeStep={(change) => changeStep(currentStep + change)}\n                                    currentUser={currentUser}\n                                    changeCurrentUser={(user) => changeUser(user)}/>;\n            break;\n        case 2:\n            title = TOTAL_STEPS[2].title\n            currentForm = <QuizScreen changeStep={(change) => changeStep(currentStep + change)}\n                                 currentUser={currentUser}\n                                 changeCurrentUser={(user) => changeUser(user)}/>;\n            break;\n    }\n\n    return (\n        <Container>\n            <OnboardNavbar currentStep={currentStep} steps={TOTAL_STEPS}/>\n            <Title>{title}</Title>\n            {currentForm}\n        </Container>\n    );\n}"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAGA;AAfA;AACA;AAiBA;AAEA;AAAA;AAAA;AAKA;;;;A","sourceRoot":""}