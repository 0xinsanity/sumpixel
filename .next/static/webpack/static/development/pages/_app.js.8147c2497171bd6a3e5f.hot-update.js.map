{"version":3,"file":"static/webpack/static/development/pages/_app.js.8147c2497171bd6a3e5f.hot-update.js","sources":["webpack:///./lib/server.tsx"],"sourcesContent":["import { User, Employer, EmployerDecisionHire, DesignerDecisionTalk, CommForDesigner, UserAndGrade, Communication, CommForEmployer } from \"../model/model\";\nimport axios from 'axios';\n\nconst SERVER_BASE = 'https://sumpixel-server.herokuapp.com/'\n\nenum HTTP_Requests {\n    GET = 'GET',\n    POST = 'POST',\n    PUT = 'PUT'\n}\n\nconst request = async (url: string, params, method: HTTP_Requests = HTTP_Requests.GET) => {\n    var response;\n    switch (method) {\n        case HTTP_Requests.GET:\n            response = await axios.get(SERVER_BASE + url, {params: params});\n            break;\n        case HTTP_Requests.POST:\n            response = await axios.post(SERVER_BASE + url, params);\n            break;\n        case HTTP_Requests.PUT:\n            response = await axios.put(SERVER_BASE + url, params);\n            break;\n    }\n\n    if (response.status !== 200) {\n        return generateErrorResponse('The server responded with an unexpected status.');\n    }\n\n    const result = response.data;\n\n    return result;\n\n}\n\nconst generateErrorResponse = (message) => {\n    return {\n        status : 'error',\n        message\n    };\n}\n\nexport const didCompleteQuiz = async (id: string) => {\n    return await request('user-finished-quiz', {id: id})\n}\n\nexport const getUser = async (id: string): Promise<User | {user_exists: boolean}> => {\n    return await request('get-user', {id: id})\n}\n\nexport const setUserCompletedQuiz = async (id: string) => {\n    return await request('user-completed-quiz', {id: id}, HTTP_Requests.PUT)\n}\n\nexport const getEmployer = async (id: string): Promise<Employer | {user_exists: boolean}> => {\n    return await request('get-employer', {id: id})\n}\n\nexport const removeUser = async (id: string) => {\n    return await request('remove-user', {id: id})\n}\n\nexport const removeEmployer = async (id: string) => {\n    return await request('remove-employer', {id: id})\n}\n\nexport const createUser = async (user: User) => {\n    return await request('create-user', user, HTTP_Requests.POST)\n}\n\nexport const modifyUser = async (user: User) => {\n    return await request('modify-user', user, HTTP_Requests.POST)\n}\n\nexport const createEmployer = async (employer: Employer) => {\n    return await request('create-employer', employer, HTTP_Requests.POST)\n}\n\nexport const modifyEmployer = async (employer: Employer) => {\n    return await request('modify-employer', employer, HTTP_Requests.POST)\n}\n\nexport const createCommunication = async (designerId: string, employerId: string): Promise<Communication> => {\n    return await request('create-new-communication', {designerId: designerId, employerId: employerId }, HTTP_Requests.POST)\n}\n\nexport const updateDesignerDecision = async (commId: string, decision: DesignerDecisionTalk) => {\n    return await request('update-designer-decision', {id: commId, designerApprovedTalk: decision }, HTTP_Requests.POST)\n}\n\nexport const updateEmployerDecision = async (commId: string, decision: EmployerDecisionHire) => {\n    return await request('update-employer-decision', {id: commId, decision: decision }, HTTP_Requests.POST)\n}\n\nexport const getDesignCommunicationsList = async (id: string): Promise<CommForDesigner[]> => {\n    return await request('get-all-designer-communications', {id})\n}\n\nexport const getEmployerCommunicationsList = async (id: string): Promise<CommForEmployer[]> => {\n    return await request('get-all-employer-communications', {id})\n}\n\nexport const getGradedDesigners = async (id: string): Promise<UserAndGrade[]> => {\n    return await request('get-graded-designers', {id})\n}"],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AATA;AACA;AAWA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;;;;A","sourceRoot":""}