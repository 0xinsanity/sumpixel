{"version":3,"file":"static/webpack/static/development/pages/index.js.2cf66ece8f878f14e84b.hot-update.js","sources":["webpack:///./components/Onboard.tsx","webpack:///./components/OnboardingFlow/Form2.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {OnboardNavbar} from './OnboardNavbar'\nimport {Container} from './Container'\nimport {Typography} from 'antd'\nimport {User} from '../model/model'\nimport {myFirebase} from \"../lib/firebase\";\nimport {Form1} from './OnboardingFlow/Form1'\nimport {Form2} from './OnboardingFlow/Form2'\nimport styled from 'styled-components'\n\nconst Title = styled(Typography.Title)`\n    padding-top: 15px;\n    padding-bottom: 35px;\n`\n\nconst TOTAL_STEPS = [\n    {title: \"Get Started\", desc: \"Add Personal Data\"},\n    {title: \"Add Socials\", desc: \"Add Social Networks\"},\n    {title: \"Take the Quiz\", desc: \"Finish Up and Get Evaluated\"}\n];\n\nexport const Onboard: React.FC<{}> = props => {\n    const [currentStep, changeStep] = useState(0);\n    const [currentUser, changeUser] = useState<User | undefined>(undefined);\n\n    useEffect(() => {\n        const firebaseUser = myFirebase.auth().currentUser;\n        if (firebaseUser !== null) {\n            console.log(firebaseUser.displayName)\n            changeUser({\n                email: firebaseUser.email,\n                firebaseId: firebaseUser.uid,\n                firstName: firebaseUser.displayName.substr(0, firebaseUser.displayName.indexOf(' ')),\n                lastName: firebaseUser.displayName.substr(firebaseUser.displayName.indexOf(' ')+1),\n            });\n        }\n    }, [myFirebase.auth().currentUser]);\n\n    var currentForm;\n    var title;\n    switch (currentStep) {\n        case 0:\n            title = TOTAL_STEPS[0].title\n            currentForm = <Form1 changeStep={(change) => changeStep(currentStep + change)}\n                                 currentUser={currentUser}\n                                 changeCurrentUser={(user) => changeUser(user)}/>;\n            break;\n        case 1:\n            title = TOTAL_STEPS[1].title\n            currentForm = <Form2 changeStep={(change) => changeStep(currentStep + change)}\n                                 currentUser={currentUser}\n                                 changeCurrentUser={(user) => changeUser(user)}/>;\n            break;\n        case 2:\n            title = TOTAL_STEPS[2].title\n            currentForm = <Form1 changeStep={(change) => changeStep(currentStep + change)}\n                                 currentUser={currentUser}\n                                 changeCurrentUser={(user) => changeUser(user)}/>;\n            break;\n    }\n\n    return (\n        <Container>\n            <OnboardNavbar currentStep={currentStep} steps={TOTAL_STEPS}/>\n            <Title>{title}</Title>\n            {currentForm}\n        </Container>\n    );\n}","import React, {useState} from 'react'\nimport { Form, Input, Button, Checkbox, Row, Col, Select, Upload, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport _ from 'lodash'\nimport {User, VisaStatus} from '../../model/model'\nimport FormProps from './FormProps'\nimport {UploadFile} from 'antd/lib/upload/interface'\nimport {storage_ref} from '../../lib/firebase'\nconst {Option} = Select\n\nexport const Form2: React.FC<FormProps> = (props) => {\n    const {currentUser, changeCurrentUser, changeStep} = props\n    const [fileList, updateFileList] = useState<UploadFile[]>([])\n    const [form] = Form.useForm();\n\n    const goBack = () => {\n        changeStep(-1)\n    }\n\n    const onFinish = (values) => {\n        const res = values.resume.file\n        storage_ref.child('resumes/' + currentUser.firebaseId + '.pdf').put(res[\"originFileObj\"]).then((snapshot) => {\n            console.log(\"Uploaded File\")\n            const newUser = {\n                email: currentUser.email,\n                firebaseId: currentUser.firebaseId,\n                firstName: currentUser.firstName,\n                lastName: currentUser.lastName,\n                phoneNumber: currentUser.phoneNumber,\n                location: currentUser.location,\n                salary: currentUser.salary,\n                portfolio: currentUser.portfolio,\n                visa: currentUser.visa,\n                resume: currentUser.resume,\n                linkedin: values.linkedin,\n                dribbble: values.dribbble,\n            }\n            changeCurrentUser(newUser)\n            changeStep(1)\n        })\n    }\n\n    const onFinishFailed = () => {\n        message.error('There was an error completing your account. Ensure every field is filled out.')\n    }\n\n    return (\n        <Form\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n        >\n            <Form.Item\n                label=\"LinkedIn\"\n                name=\"linkedin\"\n                rules={[{ required: true, message: 'LinkedIn is required' }]}\n            >\n                <Input placeholder=\"\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Dribbble\"\n                name=\"dribbble\"\n                rules={[{ required: true, message: 'Dribbble is required' }]}\n            >\n                <Input placeholder=\"\"/>\n            </Form.Item>\n\n            <Form.Item>\n                <Row justify=\"end\" align=\"middle\">\n                    <Button type=\"primary\" onClick={goBack()}>\n                        Go Back\n                    </Button>\n                </Row>\n                <Row justify=\"end\" align=\"middle\">\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Next Page\n                    </Button>\n                </Row>\n            </Form.Item>\n        </Form>\n    );\n}"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;AAAA;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAGA;AAlBA;AACA;AAoBA;AAEA;AAAA;AAAA;AAKA;;;;;;;;;;;;ACpEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAOA;;;;A","sourceRoot":""}