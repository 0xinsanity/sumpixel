{"version":3,"file":"static/webpack/static/development/pages/index.js.795bdadec6ecb422ae1c.hot-update.js","sources":["webpack:///./components/OnboardingFlow/Form1.tsx"],"sourcesContent":["import React, {useState} from 'react'\nimport { Form, Input, Button, Checkbox, Row, Col, Select, Upload, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport _ from 'lodash'\nimport {User, VisaStatus} from '../../model/model'\nimport FormProps from './FormProps'\nimport {UploadFile} from 'antd/lib/upload/interface'\n\nconst {Option} = Select\n\n\n\nexport const Form1: React.FC<FormProps> = (props) => {\n    const {currentUser, changeCurrentUser, changeStep} = props\n    const [fileList, updateFileList] = useState<UploadFile[]>([])\n    const [form] = Form.useForm();\n\n    if (currentUser == undefined) {\n        return (<></>)\n    }\n\n    const onFinish = (values) => {\n        console.log(values)\n        //changeCurrentUser(currentUser)\n        //changeStep()\n    }\n\n    const onFinishFailed = () => {}\n\n    return (\n        <Form\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n        >\n            <Form.Item\n                label=\"Name\"\n                name=\"firstName\"\n            >\n                <Input.Group>\n                    <Row>\n                        <Col span={11}>\n                            <Input disabled defaultValue={currentUser.firstName}/>\n                        </Col>\n                        <Col span={2}/>\n                        <Col span={11}>\n                            <Input disabled defaultValue={currentUser.lastName}/>\n                        </Col>\n                    </Row>\n                </Input.Group>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Email\"\n                name=\"email\"\n            >\n                <Input disabled defaultValue={currentUser.email}/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Phone Number\"\n                name=\"phoneNumber\"\n                rules={[{ required: true, message: 'Phone Number is required' }]}\n            >\n                <Input placeholder=\"+1 (555) 555-5555\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Location\"\n                name=\"location\"\n                rules={[{ required: true, message: 'Location is required' }]}\n            >\n                <Input placeholder=\"New York City\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Desired Salary\"\n                name=\"salary\"\n                rules={[{ required: true, message: 'Desired Salary is required'}]}\n            >\n                <Input placeholder=\"$100,000-$150,000 per year\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Preferred Role\"\n                name=\"preferred_role\"\n                rules={[{ required: true, message: 'Preferred Role is required' }]}\n            >\n                <Input placeholder=\"UI/UX Designer\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Portfolio\"\n                name=\"portfolio\"\n                rules={[{ required: true, message: 'Portfolio is required' }]}\n            >\n                <Input placeholder=\"https://www.myportfolio.com\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Resume\"\n                name=\"resume\"\n                rules={[{ required: true, message: 'Resume is required' }]}\n            >\n                <Upload \n                    name={'file'} \n                    accept={\".pdf\"} \n                    fileList={fileList}\n                    onChange={(info) => {\n                        let fileList_update = [...info.fileList];\n                        fileList_update = fileList_update.slice(-1);\n\n                        fileList_update = fileList_update.map(file => {\n                            if (file.response) {\n                                file.url = file.response.url;\n                            }\n                            return file;\n                        });\n\n                        if (info.file.status !== 'uploading') {\n                            console.log(info.file, info.fileList);\n                        }\n                        if (info.file.status === 'done') {\n                            message.success(`${info.file.name} file uploaded successfully`);\n                        } else if (info.file.status === 'error') {\n                            message.error(`${info.file.name} file upload failed.`);\n                        }\n\n                        updateFileList(fileList_update)\n                    }}>\n                    <Button>\n                        <UploadOutlined /> Click to Upload\n                    </Button>\n                </Upload>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Visa Status\"\n                name=\"visa_status\"\n                rules={[{ required: true, message: 'Visa Status is required' }]}\n                \n            >\n                <Select placeholder=\"Select an option:\">\n                    {_.map(VisaStatus, (status) => {\n                        return <Option value={status}>{status}</Option>\n                    })}\n                </Select>\n            </Form.Item>\n\n            <Form.Item \n                rules={[{\n                    required: true,\n                    transform: value => (value || undefined),\n                    type: 'boolean',                          \n                    message: 'Please agree to the terms and conditions.',\n                }]}\n                valuePropName={'checked'}\n                >\n                <Checkbox>Agree to Terms and Services</Checkbox>\n            </Form.Item>\n\n            <Form.Item>\n                <Row justify=\"center\" align=\"middle\">\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Next Page\n                    </Button>\n                </Row>\n            </Form.Item>\n        </Form>\n    );\n}"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AAOA;AACA;AAFA;AAMA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAOA;AACA;AAFA;AAIA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBA;AAiCA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAMA;AAAA;AAEA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAPA;AAaA;AAAA;AAAA;AACA;AAAA;AAAA;AAOA;;;;A","sourceRoot":""}