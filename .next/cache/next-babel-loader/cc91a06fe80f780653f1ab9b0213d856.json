{"ast":null,"code":"import React, { useState } from 'react';\nimport { Form, Input, Button, Checkbox, Row, Col, Select, message } from 'antd';\nimport { NavBarStatus } from '../../../model/model';\nimport { storage_ref, myFirebase } from '../../../lib/firebase';\nimport { removeUser } from '../../../lib/server';\nconst {\n  Option\n} = Select;\n\nconst FormBusinessData = props => {\n  const {\n    currentUser,\n    changeCurrentUser,\n    changeStep,\n    changeNavbarStatus\n  } = props;\n  const [fileList, updateFileList] = useState([]);\n\n  const goBack = async () => {\n    await removeUser(currentUser.id);\n    await myFirebase.auth().signOut();\n    changeNavbarStatus(NavBarStatus.Undecided);\n    changeStep(-1);\n  };\n\n  if (currentUser == undefined) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n\n  const onFinish = values => {\n    const res = values.resume.file;\n    storage_ref.child('resumes/' + currentUser.id + '.pdf').put(res[\"originFileObj\"]).then(snapshot => {\n      const newEmployer = {\n        email: currentUser.email,\n        id: currentUser.id,\n        firstName: currentUser.firstName,\n        lastName: currentUser.lastName,\n        phoneNumber: values.phoneNumber,\n        location: values.location\n      };\n      changeCurrentUser(newEmployer);\n      changeStep(1);\n    });\n  };\n\n  const onFinishFailed = () => {\n    message.error('There was an error completing your account. Ensure every field is filled out.');\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    name: \"basic\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    style: {\n      marginBottom: 50\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Name\",\n    name: \"firstName\"\n  }, /*#__PURE__*/React.createElement(Input.Group, null, /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Col, {\n    span: 11\n  }, /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    defaultValue: currentUser.firstName\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 2\n  }), /*#__PURE__*/React.createElement(Col, {\n    span: 11\n  }, /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    defaultValue: currentUser.lastName\n  }))))), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Email\",\n    name: \"email\"\n  }, /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    defaultValue: currentUser.email\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Phone Number\",\n    name: \"phoneNumber\",\n    rules: [{\n      required: true,\n      message: 'Phone Number is required'\n    }]\n  }, /*#__PURE__*/React.createElement(Input, {\n    defaultValue: currentUser.phoneNumber || \"\",\n    placeholder: \"+1 (555) 555-5555\"\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Location\",\n    name: \"location\",\n    rules: [{\n      required: true,\n      message: 'Location is required'\n    }]\n  }, /*#__PURE__*/React.createElement(Input, {\n    defaultValue: currentUser.location || \"\",\n    placeholder: \"New York City\"\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    rules: [{\n      required: true,\n      transform: value => value || undefined,\n      type: 'boolean',\n      message: 'Please agree to the terms and conditions.'\n    }],\n    valuePropName: 'checked'\n  }, /*#__PURE__*/React.createElement(Checkbox, null, \"Agree to The Terms and Services\")), /*#__PURE__*/React.createElement(Form.Item, null, /*#__PURE__*/React.createElement(Row, {\n    justify: \"space-between\",\n    align: \"middle\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"default\",\n    onClick: goBack\n  }, \"Back\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\"\n  }, \"Finish Setup\"))));\n};\n\nexport default FormBusinessData;","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel-client/components/OnboardingFlow/Employers/FormBusinessData.tsx"],"names":["React","useState","Form","Input","Button","Checkbox","Row","Col","Select","message","NavBarStatus","storage_ref","myFirebase","removeUser","Option","FormBusinessData","props","currentUser","changeCurrentUser","changeStep","changeNavbarStatus","fileList","updateFileList","goBack","id","auth","signOut","Undecided","undefined","onFinish","values","res","resume","file","child","put","then","snapshot","newEmployer","email","firstName","lastName","phoneNumber","location","onFinishFailed","error","remember","marginBottom","required","transform","value","type"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { Form, Input, Button, Checkbox, Row, Col, Select, Upload, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport _ from 'lodash'\nimport {User, VisaStatus, NavBarStatus} from '../../../model/model'\nimport FormProps from '../FormProps'\nimport {UploadFile} from 'antd/lib/upload/interface'\nimport {storage_ref, myFirebase} from '../../../lib/firebase'\nimport {removeUser} from '../../../lib/server'\nconst {Option} = Select\n\nconst FormBusinessData: React.FC<FormProps> = (props) => {\n    const {currentUser, changeCurrentUser, changeStep, changeNavbarStatus} = props\n    const [fileList, updateFileList] = useState<UploadFile[]>([])\n\n    const goBack = async () => {\n        await removeUser(currentUser.id)\n        await myFirebase.auth().signOut()\n        changeNavbarStatus(NavBarStatus.Undecided)\n        changeStep(-1)\n        \n    }\n\n    if (currentUser == undefined) {\n        return (<></>)\n    }\n\n    const onFinish = (values) => {\n        const res = values.resume.file\n        storage_ref.child('resumes/' + currentUser.id + '.pdf').put(res[\"originFileObj\"]).then((snapshot) => {\n            const newEmployer = {\n                email: currentUser.email,\n                id: currentUser.id,\n                firstName: currentUser.firstName,\n                lastName: currentUser.lastName,\n                phoneNumber: values.phoneNumber,\n                location: values.location\n            }\n            changeCurrentUser(newEmployer)\n            changeStep(1)\n        })\n    }\n\n    const onFinishFailed = () => {\n        message.error('There was an error completing your account. Ensure every field is filled out.')\n    }\n\n    return (\n        <Form\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            style={{marginBottom: 50}}\n        >\n            <Form.Item\n                label=\"Name\"\n                name=\"firstName\"\n            >\n                <Input.Group>\n                    <Row>\n                        <Col span={11}>\n                            <Input disabled defaultValue={currentUser.firstName}/>\n                        </Col>\n                        <Col span={2}/>\n                        <Col span={11}>\n                            <Input disabled defaultValue={currentUser.lastName}/>\n                        </Col>\n                    </Row>\n                </Input.Group>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Email\"\n                name=\"email\"\n            >\n                <Input disabled defaultValue={currentUser.email}/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Phone Number\"\n                name=\"phoneNumber\"\n                rules={[{ required: true, message: 'Phone Number is required' }]}\n            >\n                <Input defaultValue={currentUser.phoneNumber || \"\"} placeholder=\"+1 (555) 555-5555\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Location\"\n                name=\"location\"\n                rules={[{ required: true, message: 'Location is required' }]}\n            >\n                <Input defaultValue={currentUser.location || \"\"} placeholder=\"New York City\"/>\n            </Form.Item>\n\n            <Form.Item \n                rules={[{\n                    required: true,\n                    transform: value => (value || undefined),\n                    type: 'boolean',                          \n                    message: 'Please agree to the terms and conditions.',\n                }]}\n                valuePropName={'checked'}\n                >\n                    {/* TODO: Requirement Not Working */}\n                    <Checkbox>Agree to The Terms and Services</Checkbox>\n            </Form.Item>\n\n            <Form.Item>\n                <Row justify=\"space-between\" align=\"middle\">\n                    <Button type=\"default\" onClick={goBack}>\n                        Back\n                    </Button>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Finish Setup\n                    </Button>\n                </Row>\n            </Form.Item>\n        </Form>\n    );\n}\n\nexport default FormBusinessData"]},"metadata":{},"sourceType":"module"}