{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport { myFirebase } from '../lib/firebase';\nimport { getUser, getEmployer } from '../lib/server';\nimport Router from 'next/router';\nimport firebase from 'firebase';\nconst AuthConfig = {\n  signInFlow: 'popup',\n  callbacks: {\n    signInSuccessWithAuthResult: () => false\n  },\n  signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID]\n};\n\nconst Index = props => {\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [userEmployer, setUserEmployer] = useState(undefined);\n  useEffect(() => {\n    myFirebase.auth().onAuthStateChanged(user => {\n      if (user != null) {\n        setIsSignedIn(true);\n        setUserEmployer({\n          email: myFirebase.auth().currentUser.email,\n          id: myFirebase.auth().currentUser.uid,\n          firstName: myFirebase.auth().currentUser.displayName.substr(0, user.displayName.indexOf(' ')),\n          lastName: myFirebase.auth().currentUser.displayName.substr(user.displayName.indexOf(' ') + 1)\n        });\n      }\n    });\n  });\n  useEffect(() => {\n    async function findUser() {\n      if (myFirebase.auth().currentUser === null) {\n        return;\n      }\n\n      console.log('hit here');\n      const user = await getUser(myFirebase.auth().currentUser.uid);\n      const employer = await getEmployer(myFirebase.auth().currentUser.uid);\n\n      if (user['user_exists'] == undefined) {\n        Router.replace('/dashboard_user');\n      } else if (employer['employer_exists'] == undefined) {\n        Router.replace('/dashboard_employer');\n      } else {\n        Router.replace('/signup');\n      }\n    }\n\n    findUser();\n  }, [myFirebase.auth().currentUser]);\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"p\", null, \"test\"), /*#__PURE__*/React.createElement(StyledFirebaseAuth, {\n    uiConfig: AuthConfig,\n    firebaseAuth: myFirebase.auth()\n  }));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel-client/pages/index.tsx"],"names":["React","useEffect","useState","StyledFirebaseAuth","myFirebase","getUser","getEmployer","Router","firebase","AuthConfig","signInFlow","callbacks","signInSuccessWithAuthResult","signInOptions","auth","EmailAuthProvider","PROVIDER_ID","Index","props","isSignedIn","setIsSignedIn","userEmployer","setUserEmployer","undefined","onAuthStateChanged","user","email","currentUser","id","uid","firstName","displayName","substr","indexOf","lastName","findUser","console","log","employer","replace"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport {myFirebase} from '../lib/firebase'\nimport {User, Employer} from '../model/model'\nimport {getUser, getEmployer} from '../lib/server'\nimport Router from 'next/router'\nimport firebase from 'firebase'\nconst AuthConfig = {\n    signInFlow: 'popup',\n    callbacks: {\n        signInSuccessWithAuthResult: () => false\n    },\n    signInOptions: [\n        firebase.auth.EmailAuthProvider.PROVIDER_ID\n    ]\n};\n\nconst Index: React.FC = (props) => {\n    const [isSignedIn, setIsSignedIn] = useState(false);\n    const [userEmployer, setUserEmployer] = useState<User | Employer | undefined>(undefined);\n    useEffect(() => {\n        myFirebase.auth().onAuthStateChanged(user => {\n            if (user != null) {\n                setIsSignedIn(true)\n                setUserEmployer({\n                    email: myFirebase.auth().currentUser.email,\n                    id: myFirebase.auth().currentUser.uid,\n                    firstName: myFirebase.auth().currentUser.displayName.substr(0, user.displayName.indexOf(' ')),\n                    lastName: myFirebase.auth().currentUser.displayName.substr(user.displayName.indexOf(' ')+1),\n                });\n            }\n        });\n    });\n\n    useEffect(() => {\n        async function findUser() {\n            if (myFirebase.auth().currentUser === null) {return}\n            console.log('hit here')\n            const user = await getUser(myFirebase.auth().currentUser.uid)\n            const employer = await getEmployer(myFirebase.auth().currentUser.uid)\n\n            if (user['user_exists'] == undefined) {\n                Router.replace('/dashboard_user')\n            } else if (employer['employer_exists'] == undefined) {\n                Router.replace('/dashboard_employer')\n            } else {\n                Router.replace('/signup')\n            }\n        }\n        findUser()\n    }, [myFirebase.auth().currentUser])\n\n    return (\n        <div>\n            <p>test</p>\n            <StyledFirebaseAuth\n                uiConfig={AuthConfig}\n                firebaseAuth={myFirebase.auth()}/>\n        </div>\n    );\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}