{"ast":null,"code":"import React, { useState } from 'react';\nimport { Form, Input, Button, Checkbox, Row, Col, Select, Upload, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport _ from 'lodash';\nimport { VisaStatus, NavBarStatus } from '../../model/model';\nimport { storage_ref, myFirebase } from '../../lib/firebase';\nimport { removeUser } from '../../lib/server';\nconst {\n  Option\n} = Select;\n\nconst FormPersonalData = props => {\n  const {\n    currentUser,\n    changeCurrentUser,\n    changeStep,\n    changeNavbar\n  } = props;\n  const [fileList, updateFileList] = useState([]);\n\n  const goBack = async () => {\n    await removeUser(currentUser.id);\n    await myFirebase.auth().signOut();\n    changeNavbar(NavBarStatus.Undecided);\n    changeStep(-1);\n  };\n\n  if (currentUser == undefined) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n\n  const onFinish = values => {\n    const res = values.resume.file;\n    storage_ref.child('resumes/' + currentUser.id + '.pdf').put(res[\"originFileObj\"]).then(snapshot => {\n      const newUser = {\n        email: currentUser.email,\n        id: currentUser.id,\n        firstName: currentUser.firstName,\n        lastName: currentUser.lastName,\n        phoneNumber: values.phoneNumber,\n        location: values.location,\n        salary: values.salary,\n        portfolio: values.portfolio,\n        preferredRole: values.preferredRole,\n        visa: values.visa_status,\n        resume: currentUser.id + '.pdf'\n      };\n\n      if (values.linkedin) {\n        newUser['linkedin'] = values.linkedin;\n      }\n\n      if (values.dribbble) {\n        newUser['dribbble'] = values.dribbble;\n      }\n\n      changeCurrentUser(newUser);\n      changeStep(1);\n    });\n  };\n\n  const onFinishFailed = () => {\n    message.error('There was an error completing your account. Ensure every field is filled out.');\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    name: \"basic\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    style: {\n      marginBottom: 50\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Name\",\n    name: \"firstName\"\n  }, /*#__PURE__*/React.createElement(Input.Group, null, /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Col, {\n    span: 11\n  }, /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    defaultValue: currentUser.firstName\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 2\n  }), /*#__PURE__*/React.createElement(Col, {\n    span: 11\n  }, /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    defaultValue: currentUser.lastName\n  }))))), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Email\",\n    name: \"email\"\n  }, /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    defaultValue: currentUser.email\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Phone Number\",\n    name: \"phoneNumber\",\n    rules: [{\n      required: true,\n      message: 'Phone Number is required'\n    }]\n  }, /*#__PURE__*/React.createElement(Input, {\n    defaultValue: currentUser.phoneNumber || \"\",\n    placeholder: \"+1 (555) 555-5555\"\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Location\",\n    name: \"location\",\n    rules: [{\n      required: true,\n      message: 'Location is required'\n    }]\n  }, /*#__PURE__*/React.createElement(Input, {\n    defaultValue: currentUser.location || \"\",\n    placeholder: \"New York City\"\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Desired Salary\",\n    name: \"salary\",\n    rules: [{\n      required: true,\n      message: 'Desired Salary is required'\n    }]\n  }, /*#__PURE__*/React.createElement(Input, {\n    defaultValue: currentUser.salary || \"\",\n    placeholder: \"$100,000-$150,000 per year\"\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Preferred Role\",\n    name: \"preferredRole\",\n    rules: [{\n      required: true,\n      message: 'Preferred Role is required'\n    }]\n  }, /*#__PURE__*/React.createElement(Input, {\n    defaultValue: currentUser.preferredRole || \"\",\n    placeholder: \"UI/UX Designer\"\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Portfolio\",\n    name: \"portfolio\",\n    rules: [{\n      required: true,\n      message: 'Portfolio is required'\n    }]\n  }, /*#__PURE__*/React.createElement(Input, {\n    defaultValue: currentUser.portfolio || \"\",\n    placeholder: \"https://www.myportfolio.com\"\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Resume\",\n    name: \"resume\",\n    rules: [{\n      required: true,\n      message: 'Resume is required'\n    }]\n  }, /*#__PURE__*/React.createElement(Upload, {\n    name: 'file',\n    accept: \".pdf\",\n    fileList: fileList,\n    onChange: info => {\n      let fileList_update = [...info.fileList];\n      fileList_update = fileList_update.slice(-1);\n      fileList_update = fileList_update.map(file => {\n        if (file.response) {\n          file.url = file.response.url;\n        }\n\n        return file;\n      });\n\n      if (info.file.status === 'done') {\n        message.success(`${info.file.name} file uploaded successfully`);\n      } else if (info.file.status === 'error') {\n        message.error(`${info.file.name} file upload failed.`);\n      }\n\n      updateFileList(fileList_update);\n    }\n  }, /*#__PURE__*/React.createElement(Button, null, /*#__PURE__*/React.createElement(UploadOutlined, null), \" Click to Upload\"))), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Visa Status\",\n    name: \"visa_status\",\n    rules: [{\n      required: true,\n      message: 'Visa Status is required'\n    }]\n  }, /*#__PURE__*/React.createElement(Select, {\n    defaultValue: currentUser.visa || \"\",\n    placeholder: \"Select an option:\"\n  }, _.map(VisaStatus, status => {\n    return /*#__PURE__*/React.createElement(Option, {\n      value: status\n    }, status);\n  }))), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"LinkedIn\",\n    name: \"linkedin\"\n  }, /*#__PURE__*/React.createElement(Input, {\n    defaultValue: currentUser.linkedin || \"\",\n    placeholder: \"https://www.linkedin.com/in/username\"\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Dribbble\",\n    name: \"dribbble\"\n  }, /*#__PURE__*/React.createElement(Input, {\n    defaultValue: currentUser.dribbble || \"\",\n    placeholder: \"https://dribbble.com/username\"\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    rules: [{\n      required: true,\n      transform: value => value || undefined,\n      type: 'boolean',\n      message: 'Please agree to the terms and conditions.'\n    }],\n    valuePropName: 'checked'\n  }, /*#__PURE__*/React.createElement(Checkbox, null, \"Agree to The Terms and Services\")), /*#__PURE__*/React.createElement(Form.Item, null, /*#__PURE__*/React.createElement(Row, {\n    justify: \"space-between\",\n    align: \"middle\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"default\",\n    onClick: goBack\n  }, \"Back\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\"\n  }, \"Take The Quiz\"))));\n};\n\nexport default FormPersonalData;","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel-client/components/OnboardingFlow/FormPersonalData.tsx"],"names":["React","useState","Form","Input","Button","Checkbox","Row","Col","Select","Upload","message","UploadOutlined","_","VisaStatus","NavBarStatus","storage_ref","myFirebase","removeUser","Option","FormPersonalData","props","currentUser","changeCurrentUser","changeStep","changeNavbar","fileList","updateFileList","goBack","id","auth","signOut","Undecided","undefined","onFinish","values","res","resume","file","child","put","then","snapshot","newUser","email","firstName","lastName","phoneNumber","location","salary","portfolio","preferredRole","visa","visa_status","linkedin","dribbble","onFinishFailed","error","remember","marginBottom","required","info","fileList_update","slice","map","response","url","status","success","name","transform","value","type"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { Form, Input, Button, Checkbox, Row, Col, Select, Upload, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport _ from 'lodash'\nimport {User, VisaStatus, NavBarStatus} from '../../model/model'\nimport FormProps from './FormProps'\nimport {UploadFile} from 'antd/lib/upload/interface'\nimport {storage_ref, myFirebase} from '../../lib/firebase'\nimport {removeUser} from '../../lib/server'\nconst {Option} = Select\n\nconst FormPersonalData: React.FC<FormProps> = (props) => {\n    const {currentUser, changeCurrentUser, changeStep, changeNavbar} = props\n    const [fileList, updateFileList] = useState<UploadFile[]>([])\n\n    const goBack = async () => {\n        await removeUser(currentUser.id)\n        await myFirebase.auth().signOut()\n        changeNavbar(NavBarStatus.Undecided)\n        changeStep(-1)\n        \n    }\n\n    if (currentUser == undefined) {\n        return (<></>)\n    }\n\n    const onFinish = (values) => {\n        const res = values.resume.file\n        storage_ref.child('resumes/' + currentUser.id + '.pdf').put(res[\"originFileObj\"]).then((snapshot) => {\n            const newUser = {\n                email: currentUser.email,\n                id: currentUser.id,\n                firstName: currentUser.firstName,\n                lastName: currentUser.lastName,\n                phoneNumber: values.phoneNumber,\n                location: values.location,\n                salary: values.salary,\n                portfolio: values.portfolio,\n                preferredRole: values.preferredRole,\n                visa: values.visa_status,\n                resume: currentUser.id + '.pdf'\n            }\n            if (values.linkedin) {\n                newUser['linkedin'] = values.linkedin\n            }\n            if (values.dribbble) {\n                newUser['dribbble'] = values.dribbble\n            }\n            changeCurrentUser(newUser)\n            changeStep(1)\n        })\n    }\n\n    const onFinishFailed = () => {\n        message.error('There was an error completing your account. Ensure every field is filled out.')\n    }\n\n    return (\n        <Form\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            style={{marginBottom: 50}}\n        >\n            <Form.Item\n                label=\"Name\"\n                name=\"firstName\"\n            >\n                <Input.Group>\n                    <Row>\n                        <Col span={11}>\n                            <Input disabled defaultValue={currentUser.firstName}/>\n                        </Col>\n                        <Col span={2}/>\n                        <Col span={11}>\n                            <Input disabled defaultValue={currentUser.lastName}/>\n                        </Col>\n                    </Row>\n                </Input.Group>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Email\"\n                name=\"email\"\n            >\n                <Input disabled defaultValue={currentUser.email}/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Phone Number\"\n                name=\"phoneNumber\"\n                rules={[{ required: true, message: 'Phone Number is required' }]}\n            >\n                <Input defaultValue={currentUser.phoneNumber || \"\"} placeholder=\"+1 (555) 555-5555\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Location\"\n                name=\"location\"\n                rules={[{ required: true, message: 'Location is required' }]}\n            >\n                <Input defaultValue={currentUser.location || \"\"} placeholder=\"New York City\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Desired Salary\"\n                name=\"salary\"\n                rules={[{ required: true, message: 'Desired Salary is required'}]}\n            >\n                <Input defaultValue={currentUser.salary || \"\"} placeholder=\"$100,000-$150,000 per year\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Preferred Role\"\n                name=\"preferredRole\"\n                rules={[{ required: true, message: 'Preferred Role is required' }]}\n            >\n                <Input defaultValue={currentUser.preferredRole || \"\"} placeholder=\"UI/UX Designer\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Portfolio\"\n                name=\"portfolio\"\n                rules={[{ required: true, message: 'Portfolio is required' }]}\n            >\n                <Input defaultValue={currentUser.portfolio || \"\"} placeholder=\"https://www.myportfolio.com\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Resume\"\n                name=\"resume\"\n                rules={[{ required: true, message: 'Resume is required' }]}\n            >\n                <Upload \n                    name={'file'} \n                    accept={\".pdf\"} \n                    fileList={fileList}\n                    onChange={(info) => {\n                        let fileList_update = [...info.fileList];\n                        fileList_update = fileList_update.slice(-1);\n\n                        fileList_update = fileList_update.map(file => {\n                            if (file.response) {\n                                file.url = file.response.url;\n                            }\n                            return file;\n                        });\n\n                        if (info.file.status === 'done') {\n                            message.success(`${info.file.name} file uploaded successfully`);\n                        } else if (info.file.status === 'error') {\n                            message.error(`${info.file.name} file upload failed.`);\n                        }\n\n                        updateFileList(fileList_update)\n                    }}>\n                    <Button>\n                        <UploadOutlined /> Click to Upload\n                    </Button>\n                </Upload>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Visa Status\"\n                name=\"visa_status\"\n                rules={[{ required: true, message: 'Visa Status is required' }]}\n                \n            >\n                <Select defaultValue={currentUser.visa || \"\"} placeholder=\"Select an option:\">\n                    {_.map(VisaStatus, (status) => {\n                        return <Option value={status}>{status}</Option>\n                    })}\n                </Select>\n            </Form.Item>\n\n            <Form.Item\n                label=\"LinkedIn\"\n                name=\"linkedin\"\n            >\n                <Input defaultValue={currentUser.linkedin || \"\"} placeholder=\"https://www.linkedin.com/in/username\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Dribbble\"\n                name=\"dribbble\"\n            >\n                <Input defaultValue={currentUser.dribbble || \"\"} placeholder=\"https://dribbble.com/username\"/>\n            </Form.Item>\n\n            <Form.Item \n                rules={[{\n                    required: true,\n                    transform: value => (value || undefined),\n                    type: 'boolean',                          \n                    message: 'Please agree to the terms and conditions.',\n                }]}\n                valuePropName={'checked'}\n                >\n                    {/* TODO: Requirement Not Working */}\n                    <Checkbox>Agree to The Terms and Services</Checkbox>\n            </Form.Item>\n\n            <Form.Item>\n                <Row justify=\"space-between\" align=\"middle\">\n                    <Button type=\"default\" onClick={goBack}>\n                        Back\n                    </Button>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Take The Quiz\n                    </Button>\n                </Row>\n            </Form.Item>\n        </Form>\n    );\n}\n\nexport default FormPersonalData"]},"metadata":{},"sourceType":"module"}