{"ast":null,"code":"import React, { useEffect, useState, useContext } from 'react';\nimport { PopupModal } from '../components/PopupModal';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport { myFirebase } from '../lib/firebase';\nimport { Onboard } from '../components/Onboard';\nimport * as firebase from 'firebase/app';\nimport { UserContext } from '../lib/UserProvider';\nconst AuthConfig = {\n  signInFlow: 'popup',\n  callbacks: {\n    signInSuccessWithAuthResult: () => false\n  },\n  signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID]\n};\n\nconst SignUp = props => {\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const user = useContext(UserContext);\n  useEffect(() => {\n    if (user != null) {\n      setIsSignedIn(true);\n    }\n  }, [user]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PopupModal, {\n    visible: !isSignedIn\n  }, /*#__PURE__*/React.createElement(StyledFirebaseAuth, {\n    uiConfig: AuthConfig,\n    firebaseAuth: myFirebase.auth()\n  })), /*#__PURE__*/React.createElement(Onboard, null));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel-client/pages/signup.tsx"],"names":["React","useEffect","useState","useContext","PopupModal","StyledFirebaseAuth","myFirebase","Onboard","firebase","UserContext","AuthConfig","signInFlow","callbacks","signInSuccessWithAuthResult","signInOptions","auth","EmailAuthProvider","PROVIDER_ID","SignUp","props","isSignedIn","setIsSignedIn","user"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,UAApC,QAAqD,OAArD;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,SAAQC,UAAR,QAAyB,iBAAzB;AACA,SAAQC,OAAR,QAAsB,uBAAtB;AACA,OAAO,KAAKC,QAAZ,MAA0B,cAA1B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,MAAMC,UAAU,GAAG;AACfC,EAAAA,UAAU,EAAE,OADG;AAEfC,EAAAA,SAAS,EAAE;AACPC,IAAAA,2BAA2B,EAAE,MAAM;AAD5B,GAFI;AAKfC,EAAAA,aAAa,EAAE,CACXN,QAAQ,CAACO,IAAT,CAAcC,iBAAd,CAAgCC,WADrB;AALA,CAAnB;;AAUA,MAAMC,MAAgB,GAAIC,KAAD,IAAW;AAChC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAMoB,IAAI,GAAGnB,UAAU,CAACM,WAAD,CAAvB;AACAR,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIqB,IAAI,IAAI,IAAZ,EAAkB;AACdD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ,GAJQ,EAIN,CAACC,IAAD,CAJM,CAAT;AAMA,sBACI,uDACI,oBAAC,UAAD;AACI,IAAA,OAAO,EAAE,CAACF;AADd,kBAGI,oBAAC,kBAAD;AACI,IAAA,QAAQ,EAAEV,UADd;AAEI,IAAA,YAAY,EAAEJ,UAAU,CAACS,IAAX;AAFlB,IAHJ,CADJ,eAQI,oBAAC,OAAD,OARJ,CADJ;AAYH,CArBD;;AAuBA,eAAeG,MAAf","sourcesContent":["import React, {useEffect, useState, useContext} from 'react'\nimport {PopupModal} from '../components/PopupModal';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport {myFirebase} from '../lib/firebase'\nimport {Onboard} from '../components/Onboard'\nimport * as firebase from 'firebase/app'\nimport { UserContext } from '../lib/UserProvider';\n\nconst AuthConfig = {\n    signInFlow: 'popup',\n    callbacks: {\n        signInSuccessWithAuthResult: () => false\n    },\n    signInOptions: [\n        firebase.auth.EmailAuthProvider.PROVIDER_ID\n    ]\n};\n\nconst SignUp: React.FC = (props) => {\n    const [isSignedIn, setIsSignedIn] = useState(false);\n    const user = useContext(UserContext)\n    useEffect(() => {\n        if (user != null) {\n            setIsSignedIn(true)\n        }\n    }, [user]);\n\n    return (\n        <>\n            <PopupModal\n                visible={!isSignedIn}\n            >\n                <StyledFirebaseAuth\n                    uiConfig={AuthConfig}\n                    firebaseAuth={myFirebase.auth()}/>\n            </PopupModal>\n            <Onboard/>\n        </>\n    );\n};\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}