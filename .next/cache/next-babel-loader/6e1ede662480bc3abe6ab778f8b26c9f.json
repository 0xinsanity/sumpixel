{"ast":null,"code":"import React, { useContext } from 'react';\nimport { Tabs } from 'antd';\nimport Loading from '../components/General/Loading';\nimport { Container } from '../components/General/Container';\nimport NavigationBar from '../components/Dashboard/NavigationBar';\nimport FormPersonalData from '../components/OnboardingFlow/Designers/FormPersonalData';\nimport ViewCommunications from '../components/Dashboard/Designer/ViewCommunications';\nimport { UserContext } from '../lib/UserProvider';\nimport { createUser } from '../lib/server';\nconst {\n  TabPane\n} = Tabs;\n\nconst TabWithCeiling = props => {\n  return /*#__PURE__*/React.createElement(TabPane, {\n    tab: props.tab,\n    key: props.key\n  }, /*#__PURE__*/React.createElement(Container, null, props.children));\n};\n\nconst DashboardUser = props => {\n  const {\n    currentUser,\n    changeUser\n  } = useContext(UserContext);\n\n  const updateUser = async updatedUser => {\n    changeUser(updatedUser);\n    await createUser(updatedUser);\n  };\n\n  if (currentUser === null) {\n    return /*#__PURE__*/React.createElement(Loading, null);\n  } // TODO: If user['completed_quiz'] is false, show screen that says, \"Complete quiz first and then come back\"\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavigationBar, {\n    title: `${currentUser.firstName} ${currentUser.lastName}'s Dashboard`,\n    subtitle: \"Modify Profile and View Communications\",\n    footer: /*#__PURE__*/React.createElement(Tabs, {\n      defaultActiveKey: \"1\"\n    }, /*#__PURE__*/React.createElement(TabWithCeiling, {\n      tab: \"View Communications\",\n      key: \"1\"\n    }, /*#__PURE__*/React.createElement(ViewCommunications, null)), /*#__PURE__*/React.createElement(TabWithCeiling, {\n      tab: \"Modify Profile\",\n      key: \"2\"\n    }, /*#__PURE__*/React.createElement(FormPersonalData, {\n      changeCurrentUser: updateUser,\n      modifyProfile: true\n    })))\n  }));\n};\n\nexport default DashboardUser;","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel-client/pages/dashboard_user.tsx"],"names":["React","useContext","Tabs","Loading","Container","NavigationBar","FormPersonalData","ViewCommunications","UserContext","createUser","TabPane","TabWithCeiling","props","tab","key","children","DashboardUser","currentUser","changeUser","updateUser","updatedUser","firstName","lastName"],"mappings":"AAAA,OAAOA,KAAP,IAAoCC,UAApC,QAAqD,OAArD;AACA,SAAQC,IAAR,QAAyB,MAAzB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,SAAQC,SAAR,QAAwB,iCAAxB;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,OAAOC,gBAAP,MAA6B,yDAA7B;AACA,OAAOC,kBAAP,MAA+B,qDAA/B;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AAEA,SAAQC,UAAR,QAAyB,eAAzB;AACA,MAAM;AAACC,EAAAA;AAAD,IAAYR,IAAlB;;AAQA,MAAMS,cAA6C,GAAGC,KAAK,IAAI;AAC3D,sBACI,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,KAAK,CAACC,GAApB;AAAyB,IAAA,GAAG,EAAED,KAAK,CAACE;AAApC,kBACQ,oBAAC,SAAD,QACKF,KAAK,CAACG,QADX,CADR,CADJ;AAOH,CARD;;AAUA,MAAMC,aAAuB,GAAIJ,KAAD,IAAW;AACvC,QAAM;AAACK,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAA6BjB,UAAU,CAACO,WAAD,CAA7C;;AAEA,QAAMW,UAAU,GAAG,MAAOC,WAAP,IAA6B;AAC5CF,IAAAA,UAAU,CAACE,WAAD,CAAV;AACA,UAAMX,UAAU,CAACW,WAAD,CAAhB;AACH,GAHD;;AAMA,MAAIH,WAAW,KAAK,IAApB,EAA0B;AACtB,wBAAQ,oBAAC,OAAD,OAAR;AACH,GAXsC,CAavC;;;AAEA,sBACI,uDAEI,oBAAC,aAAD;AACI,IAAA,KAAK,EAAG,GAAEA,WAAW,CAACI,SAAU,IAAGJ,WAAW,CAACK,QAAS,cAD5D;AAEI,IAAA,QAAQ,EAAC,wCAFb;AAGI,IAAA,MAAM,eACE,oBAAC,IAAD;AAAM,MAAA,gBAAgB,EAAC;AAAvB,oBACI,oBAAC,cAAD;AAAgB,MAAA,GAAG,EAAC,qBAApB;AAA0C,MAAA,GAAG,EAAC;AAA9C,oBACI,oBAAC,kBAAD,OADJ,CADJ,eAII,oBAAC,cAAD;AAAgB,MAAA,GAAG,EAAC,gBAApB;AAAqC,MAAA,GAAG,EAAC;AAAzC,oBACI,oBAAC,gBAAD;AAAkB,MAAA,iBAAiB,EAAEH,UAArC;AAAiD,MAAA,aAAa,EAAE;AAAhE,MADJ,CAJJ;AAJZ,IAFJ,CADJ;AAmBH,CAlCD;;AAoCA,eAAeH,aAAf","sourcesContent":["import React, {useEffect, useState, useContext} from 'react'\nimport {Tabs, Spin} from 'antd'\nimport Loading from '../components/General/Loading'\nimport {Container} from '../components/General/Container'\nimport NavigationBar from '../components/Dashboard/NavigationBar'\nimport FormPersonalData from '../components/OnboardingFlow/Designers/FormPersonalData'\nimport ViewCommunications from '../components/Dashboard/Designer/ViewCommunications'\nimport {UserContext} from '../lib/UserProvider'\nimport {User} from '../model/model'\nimport {createUser} from '../lib/server'\nconst {TabPane} = Tabs\n\ninterface TabWithCeilingProps {\n    tab: string;\n    key: string;\n    children: React.ReactNode\n}\n\nconst TabWithCeiling: React.FC<TabWithCeilingProps> = props => {\n    return (\n        <TabPane tab={props.tab} key={props.key}>\n                <Container >\n                    {props.children}\n                </Container>\n        </TabPane>\n    )\n}\n\nconst DashboardUser: React.FC = (props) => {\n    const {currentUser, changeUser}  = useContext(UserContext)\n\n    const updateUser = async (updatedUser: User) => {\n        changeUser(updatedUser)\n        await createUser(updatedUser)\n    }\n\n\n    if (currentUser === null) {\n        return (<Loading />)\n    }\n\n    // TODO: If user['completed_quiz'] is false, show screen that says, \"Complete quiz first and then come back\"\n\n    return (\n        <>\n            \n            <NavigationBar \n                title={`${currentUser.firstName} ${currentUser.lastName}'s Dashboard`} \n                subtitle=\"Modify Profile and View Communications\" \n                footer={\n                        <Tabs defaultActiveKey=\"1\">\n                            <TabWithCeiling tab=\"View Communications\" key=\"1\">\n                                <ViewCommunications />\n                            </TabWithCeiling>\n                            <TabWithCeiling tab=\"Modify Profile\" key=\"2\">\n                                <FormPersonalData changeCurrentUser={updateUser} modifyProfile={true} />\n                            </TabWithCeiling>\n                        </Tabs>\n                }\n            />\n        </>\n    );\n};\n\nexport default DashboardUser;"]},"metadata":{},"sourceType":"module"}