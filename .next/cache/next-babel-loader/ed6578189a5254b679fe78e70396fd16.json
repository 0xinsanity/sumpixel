{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, createContext } from \"react\";\nimport { myFirebase } from \"./firebase\";\nimport { getEmployer, getUser } from './server';\nimport Router from \"next/router\";\nimport { message } from 'antd';\nexport const UserContext = createContext({\n  currentUser: null,\n  changeUser: () => {}\n});\n\nclass UserProvider extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"changeUser\", newUser => {\n      this.setState({\n        currentUser: newUser\n      });\n    });\n\n    _defineProperty(this, \"state\", {\n      currentUser: null,\n      changeUser: this.changeUser\n    });\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      myFirebase.auth().onAuthStateChanged(async userAuth => {\n        console.log(userAuth);\n\n        if (userAuth === null) {\n          return;\n        }\n\n        var current;\n\n        try {\n          current = await getUser(userAuth.uid);\n        } catch (error) {\n          try {\n            current = await getEmployer(userAuth.uid);\n          } catch (error) {\n            message.error(\"There was an error trying to retrieve your account\");\n          }\n        }\n\n        console.log(employer);\n\n        if (user['user_exists'] == undefined) {\n          this.changeUser(user);\n          Router.replace('/dashboard_user');\n        } else if (employer['employer_exists'] == undefined) {\n          this.changeUser(employer);\n          Router.push('/dashboard_employer');\n        } else {\n          // TODO: Find alternate way to wait until names are updated\n          // Works for both\n          setTimeout(() => {\n            this.changeUser({\n              email: userAuth.email,\n              id: userAuth.uid,\n              firstName: userAuth.displayName.substr(0, userAuth.displayName.indexOf(' ')),\n              lastName: userAuth.displayName.substr(userAuth.displayName.indexOf(' ') + 1)\n            });\n          }, 500);\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(UserContext.Provider, {\n      value: this.state\n    }, this.props.children);\n  }\n\n}\n\nexport default UserProvider;","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel-client/lib/UserProvider.tsx"],"names":["React","Component","createContext","myFirebase","getEmployer","getUser","Router","message","UserContext","currentUser","changeUser","UserProvider","newUser","setState","auth","onAuthStateChanged","userAuth","console","log","current","uid","error","employer","user","undefined","replace","push","setTimeout","email","id","firstName","displayName","substr","indexOf","lastName","render","state","props","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,QAAgD,OAAhD;AACA,SAASC,UAAT,QAA2B,YAA3B;AAEA,SAAQC,WAAR,EAAqBC,OAArB,QAAmC,UAAnC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAAQC,OAAR,QAAsB,MAAtB;AAOA,OAAO,MAAMC,WAAW,GAAGN,aAAa,CAAwB;AAC5DO,EAAAA,WAAW,EAAE,IAD+C;AAE5DC,EAAAA,UAAU,EAAE,MAAM,CAAE;AAFwC,CAAxB,CAAjC;;AAIP,MAAMC,YAAN,SAA2BV,SAA3B,CAAqC;AAAA;AAAA;;AAAA,wCACrBW,OAAD,IAAqC;AAC9C,WAAKC,QAAL,CAAc;AAACJ,QAAAA,WAAW,EAAEG;AAAd,OAAd;AACH,KAHkC;;AAAA,mCAK3B;AACNH,MAAAA,WAAW,EAAE,IADP;AAENC,MAAAA,UAAU,EAAE,KAAKA;AAFX,KAL2B;;AAAA,+CAUf,MAAM;AACxBP,MAAAA,UAAU,CAACW,IAAX,GAAkBC,kBAAlB,CAAqC,MAAOC,QAAP,IAAoB;AACvDC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACE,YAAIA,QAAQ,KAAK,IAAjB,EAAuB;AACnB;AACH;;AACD,YAAIG,OAAJ;;AACA,YAAI;AACFA,UAAAA,OAAO,GAAG,MAAMd,OAAO,CAACW,QAAQ,CAACI,GAAV,CAAvB;AACD,SAFD,CAEE,OAAOC,KAAP,EAAc;AACd,cAAI;AACFF,YAAAA,OAAO,GAAG,MAAMf,WAAW,CAACY,QAAQ,CAACI,GAAV,CAA3B;AACD,WAFD,CAEE,OAAOC,KAAP,EAAc;AACdd,YAAAA,OAAO,CAACc,KAAR,CAAc,oDAAd;AACD;AACF;;AACDJ,QAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;;AACA,YAAIC,IAAI,CAAC,aAAD,CAAJ,IAAuBC,SAA3B,EAAsC;AAClC,eAAKd,UAAL,CAAgBa,IAAhB;AACAjB,UAAAA,MAAM,CAACmB,OAAP,CAAe,iBAAf;AACH,SAHD,MAGO,IAAIH,QAAQ,CAAC,iBAAD,CAAR,IAA+BE,SAAnC,EAA8C;AACjD,eAAKd,UAAL,CAAgBY,QAAhB;AACAhB,UAAAA,MAAM,CAACoB,IAAP,CAAY,qBAAZ;AACH,SAHM,MAGA;AACH;AACA;AACAC,UAAAA,UAAU,CAAC,MAAM;AACb,iBAAKjB,UAAL,CAAgB;AACZkB,cAAAA,KAAK,EAAEZ,QAAQ,CAACY,KADJ;AAEZC,cAAAA,EAAE,EAAEb,QAAQ,CAACI,GAFD;AAGZU,cAAAA,SAAS,EAAEd,QAAQ,CAACe,WAAT,CAAqBC,MAArB,CAA4B,CAA5B,EAA+BhB,QAAQ,CAACe,WAAT,CAAqBE,OAArB,CAA6B,GAA7B,CAA/B,CAHC;AAIZC,cAAAA,QAAQ,EAAElB,QAAQ,CAACe,WAAT,CAAqBC,MAArB,CAA4BhB,QAAQ,CAACe,WAAT,CAAqBE,OAArB,CAA6B,GAA7B,IAAkC,CAA9D;AAJE,aAAhB;AAMH,WAPS,EAOP,GAPO,CAAV;AASH;AACJ,OAnCD;AAoCD,KA/CkC;AAAA;;AAgDnCE,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE,KAAKC;AAAlC,OACG,KAAKC,KAAL,CAAWC,QADd,CADF;AAKD;;AAtDkC;;AAwDrC,eAAe3B,YAAf","sourcesContent":["import React, { Component, createContext } from \"react\";\nimport { myFirebase } from \"./firebase\";\nimport {User, Employer} from '../model/model'\nimport {getEmployer, getUser} from './server'\nimport Router from \"next/router\";\nimport {message} from 'antd'\n\ninterface ContextProps {\n    currentUser: User | Employer | null,\n    changeUser: (newUser: User | Employer | null) => void\n}\n\nexport const UserContext = createContext<Partial<ContextProps>>({\n    currentUser: null,\n    changeUser: () => {}\n});\nclass UserProvider extends Component {\n  changeUser = (newUser: User | Employer | null) => {\n      this.setState({currentUser: newUser})\n  }\n\n  state = {\n    currentUser: null,\n    changeUser: this.changeUser\n  };\n\n  componentDidMount = () => {\n    myFirebase.auth().onAuthStateChanged(async (userAuth) => {\n      console.log(userAuth)\n        if (userAuth === null) {\n            return\n        }\n        var current;\n        try {\n          current = await getUser(userAuth.uid)\n        } catch (error) {\n          try {\n            current = await getEmployer(userAuth.uid)\n          } catch (error) {\n            message.error(\"There was an error trying to retrieve your account\")\n          }\n        }\n        console.log(employer)\n        if (user['user_exists'] == undefined) {\n            this.changeUser(user as User)\n            Router.replace('/dashboard_user')\n        } else if (employer['employer_exists'] == undefined) {\n            this.changeUser(employer as Employer)\n            Router.push('/dashboard_employer')\n        } else {\n            // TODO: Find alternate way to wait until names are updated\n            // Works for both\n            setTimeout(() => {\n                this.changeUser({\n                    email: userAuth.email,\n                    id: userAuth.uid,\n                    firstName: userAuth.displayName.substr(0, userAuth.displayName.indexOf(' ')),\n                    lastName: userAuth.displayName.substr(userAuth.displayName.indexOf(' ')+1),\n                })\n            }, 500)\n            \n        }\n    });\n  };\n  render() {\n    return (\n      <UserContext.Provider value={this.state}>\n        {this.props.children}\n      </UserContext.Provider>\n    );\n  }\n}\nexport default UserProvider;"]},"metadata":{},"sourceType":"module"}