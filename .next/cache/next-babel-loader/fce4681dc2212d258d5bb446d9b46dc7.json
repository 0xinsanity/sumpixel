{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport { OnboardNavbar } from './OnboardNavbar';\nimport { Container } from './Container';\nimport { Typography } from 'antd';\nimport { NavBarStatus } from '../model/model';\nimport { myFirebase } from \"../lib/firebase\";\nimport FormPersonalData from './OnboardingFlow/Designers/FormPersonalData';\nimport FormBusinessData from './OnboardingFlow/Employers/FormBusinessData';\nimport QuizScreen from './OnboardingFlow/Designers/QuizScreen';\nimport EmployerDesigner from './OnboardingFlow/EmployerDesigner';\nimport styled from 'styled-components';\nimport { getUser, createUser } from '../lib/server';\nconst Title = styled(Typography.Title).withConfig({\n  displayName: \"Onboard__Title\",\n  componentId: \"sc-1f8dn92-0\"\n})([\"padding-top:15px;padding-bottom:35px;\"]);\nexport const Onboard = props => {\n  const [currentStep, changeStep] = useState(0);\n  const [navBarStatus, changeNavbarStatus] = useState(NavBarStatus.Undecided);\n  const [currentUser, changeUser] = useState(undefined);\n  useEffect(() => {\n    async function findUser() {\n      const user = await getUser(firebaseUser.uid);\n\n      if (user['user_exists'] === undefined) {\n        changeUser(user);\n        changeStep(2);\n      } else {\n        changeUser({\n          email: firebaseUser.email,\n          id: firebaseUser.uid,\n          firstName: firebaseUser.displayName.substr(0, firebaseUser.displayName.indexOf(' ')),\n          lastName: firebaseUser.displayName.substr(firebaseUser.displayName.indexOf(' ') + 1)\n        });\n      }\n    }\n\n    const firebaseUser = myFirebase.auth().currentUser;\n\n    if (firebaseUser !== null) {\n      findUser();\n    }\n  }, [myFirebase.auth().currentUser]);\n\n  const updateUser = async updatedUser => {\n    changeUser(updatedUser);\n    await createUser(updatedUser);\n  };\n\n  var currentForm;\n  var title;\n\n  switch (currentStep) {\n    case 0:\n      currentForm = /*#__PURE__*/React.createElement(EmployerDesigner, {\n        changeNavbarStatus: newStatus => changeNavbarStatus(newStatus),\n        changeStep: change => changeStep(currentStep + change)\n      });\n      break;\n\n    case 1:\n      if (navBarStatus == NavBarStatus.Designer) {\n        currentForm = /*#__PURE__*/React.createElement(FormPersonalData, {\n          changeNavbarStatus: newStatus => changeNavbarStatus(newStatus),\n          changeStep: change => changeStep(currentStep + change),\n          currentUser: currentUser,\n          changeCurrentUser: async user => await updateUser(user)\n        });\n      } else {\n        currentForm = /*#__PURE__*/React.createElement(FormBusinessData, {\n          changeNavbarStatus: newStatus => changeNavbarStatus(newStatus),\n          changeStep: change => changeStep(currentStep + change),\n          currentUser: currentUser,\n          changeCurrentUser: async user => await updateUser(user)\n        });\n      }\n\n      break;\n\n    case 2:\n      currentForm = /*#__PURE__*/React.createElement(QuizScreen, {\n        changeStep: change => changeStep(currentStep + change),\n        currentUser: currentUser,\n        changeCurrentUser: async user => await updateUser(user)\n      });\n      break;\n  }\n\n  return /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(OnboardNavbar, {\n    status: navBarStatus,\n    currentStep: currentStep\n  }), /*#__PURE__*/React.createElement(Title, null, title), currentForm);\n};","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel-client/components/Onboard.tsx"],"names":["React","useEffect","useState","OnboardNavbar","Container","Typography","NavBarStatus","myFirebase","FormPersonalData","FormBusinessData","QuizScreen","EmployerDesigner","styled","getUser","createUser","Title","Onboard","props","currentStep","changeStep","navBarStatus","changeNavbarStatus","Undecided","currentUser","changeUser","undefined","findUser","user","firebaseUser","uid","email","id","firstName","displayName","substr","indexOf","lastName","auth","updateUser","updatedUser","currentForm","title","newStatus","change","Designer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {OnboardNavbar} from './OnboardNavbar'\nimport {Container} from './Container'\nimport {Typography} from 'antd'\nimport {User, NavBarStatus} from '../model/model'\nimport {myFirebase} from \"../lib/firebase\";\nimport FormPersonalData from './OnboardingFlow/Designers/FormPersonalData'\nimport FormBusinessData from './OnboardingFlow/Employers/FormBusinessData'\nimport QuizScreen from './OnboardingFlow/Designers/QuizScreen'\nimport EmployerDesigner from './OnboardingFlow/EmployerDesigner'\nimport styled from 'styled-components'\nimport {getUser, createUser} from '../lib/server'\n\nconst Title = styled(Typography.Title)`\n    padding-top: 15px;\n    padding-bottom: 35px;\n`\n\nexport const Onboard: React.FC<{}> = props => {\n    const [currentStep, changeStep] = useState(0);\n    const [navBarStatus, changeNavbarStatus] = useState<NavBarStatus>(NavBarStatus.Undecided);\n    const [currentUser, changeUser] = useState<User | undefined>(undefined);\n\n    useEffect(() => {\n        async function findUser() {\n            const user = await getUser(firebaseUser.uid)\n\n            if (user['user_exists'] === undefined) {\n                changeUser(user as User);\n                changeStep(2)\n            } else {\n                changeUser({\n                    email: firebaseUser.email,\n                    id: firebaseUser.uid,\n                    firstName: firebaseUser.displayName.substr(0, firebaseUser.displayName.indexOf(' ')),\n                    lastName: firebaseUser.displayName.substr(firebaseUser.displayName.indexOf(' ')+1),\n                });\n            }\n        }\n\n        const firebaseUser = myFirebase.auth().currentUser;\n        if (firebaseUser !== null) {\n            findUser()\n        }\n    }, [myFirebase.auth().currentUser]);\n\n    const updateUser = async (updatedUser: User) => {\n        changeUser(updatedUser)\n        await createUser(updatedUser)\n    }\n\n    var currentForm;\n    var title;\n    switch (currentStep) {\n        case 0:\n            currentForm = <EmployerDesigner \n                                    changeNavbarStatus={(newStatus) => changeNavbarStatus(newStatus)}\n                                    changeStep={(change) => changeStep(currentStep + change)}/>;\n            break;\n        case 1:\n            if (navBarStatus == NavBarStatus.Designer) {\n                currentForm = <FormPersonalData \n                                    changeNavbarStatus={(newStatus) => changeNavbarStatus(newStatus)}\n                                    changeStep={(change) => changeStep(currentStep + change)}\n                                    currentUser={currentUser}\n                                    changeCurrentUser={async (user) => await updateUser(user)}/>;\n            } else {\n                currentForm = <FormBusinessData \n                                    changeNavbarStatus={(newStatus) => changeNavbarStatus(newStatus)}\n                                    changeStep={(change) => changeStep(currentStep + change)}\n                                    currentUser={currentUser}\n                                    changeCurrentUser={async (user) => await updateUser(user)}/>;\n            }\n            break;\n        case 2:\n            currentForm = <QuizScreen changeStep={(change) => changeStep(currentStep + change)}\n                                 currentUser={currentUser}\n                                 changeCurrentUser={async (user) => await updateUser(user)}/>;\n            break;\n    }\n\n    return (\n        <Container>\n            <OnboardNavbar status={navBarStatus} currentStep={currentStep}/>\n            <Title>{title}</Title>\n            {currentForm}\n        </Container>\n    );\n}"]},"metadata":{},"sourceType":"module"}