{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, createContext } from \"react\";\nimport { myFirebase } from \"./firebase\";\nimport { getEmployer, getUser } from './server';\nimport Router from \"next/router\";\nexport const UserContext = createContext({\n  currentUser: null,\n  changeUser: () => {}\n});\n\nclass UserProvider extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"changeUser\", newUser => {\n      this.setState({\n        currentUser: newUser\n      });\n    });\n\n    _defineProperty(this, \"state\", {\n      currentUser: null,\n      changeUser: this.changeUser\n    });\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      myFirebase.auth().onAuthStateChanged(async userAuth => {\n        if (userAuth === null) {\n          return;\n        } // This is some of the worst code I've ever made\n\n\n        var current;\n\n        try {\n          current = await getUser(userAuth.uid);\n        } catch (error) {\n          try {\n            current = await getEmployer(userAuth.uid);\n            current[\"user_exists\"] = false;\n          } catch (error) {\n            console.log(\"this better be a new user\");\n          }\n        }\n\n        if (current !== undefined && current['user_exists'] === undefined) {\n          this.changeUser(current);\n          window.analytics.identify(current.id, {\n            name: current.name,\n            email: current.email\n          });\n          Router.replace('/dashboard_user');\n        } else if (current !== undefined && current['employer_exists'] === undefined) {\n          window.analytics.identify(current.id, {\n            name: current.name,\n            email: current.email\n          });\n          this.changeUser(current);\n          Router.push('/dashboard_employer');\n        } else {\n          // TODO: Find alternate way to wait until names are updated\n          // Works for both\n          setTimeout(() => {\n            this.changeUser({\n              email: userAuth.email,\n              id: userAuth.uid,\n              firstName: userAuth.displayName.substr(0, userAuth.displayName.indexOf(' ')),\n              lastName: userAuth.displayName.substr(userAuth.displayName.indexOf(' ') + 1)\n            });\n          }, 500);\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(UserContext.Provider, {\n      value: this.state\n    }, this.props.children);\n  }\n\n}\n\nexport default UserProvider;","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel/client/lib/UserProvider.tsx"],"names":["React","Component","createContext","myFirebase","getEmployer","getUser","Router","UserContext","currentUser","changeUser","UserProvider","newUser","setState","auth","onAuthStateChanged","userAuth","current","uid","error","console","log","undefined","window","analytics","identify","id","name","email","replace","push","setTimeout","firstName","displayName","substr","indexOf","lastName","render","state","props","children"],"mappings":"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","sourcesContent":["import React, { Component, createContext } from \"react\";\nimport { myFirebase } from \"./firebase\";\nimport {User, Employer} from '../model/model'\nimport {getEmployer, getUser} from './server'\nimport Router from \"next/router\";\nimport {message} from 'antd'\n\ninterface ContextProps {\n    currentUser: User | Employer | null,\n    changeUser: (newUser: User | Employer | null) => void\n}\n\nexport const UserContext = createContext<Partial<ContextProps>>({\n    currentUser: null,\n    changeUser: () => {}\n});\nclass UserProvider extends Component {\n  changeUser = (newUser: User | Employer | null) => {\n      this.setState({currentUser: newUser})\n  }\n\n  state = {\n    currentUser: null,\n    changeUser: this.changeUser\n  };\n\n  componentDidMount = () => {\n    myFirebase.auth().onAuthStateChanged(async (userAuth) => {\n        if (userAuth === null) {\n            return\n        }\n\n        // This is some of the worst code I've ever made\n        var current;\n        try {\n          current = await getUser(userAuth.uid)\n        } catch (error) {\n          try {\n            current = await getEmployer(userAuth.uid)\n            current[\"user_exists\"] = false\n          } catch (error) {\n            console.log(\"this better be a new user\")\n          }\n        }\n\n        if (current !== undefined && current['user_exists'] === undefined) {\n            this.changeUser(current as User)\n            window.analytics.identify(current.id, {\n              name: current.name,\n              email: current.email\n            });\n            Router.replace('/dashboard_user')\n        } else if (current !== undefined && current['employer_exists'] === undefined) {\n            window.analytics.identify(current.id, {\n              name: current.name,\n              email: current.email\n            });\n            this.changeUser(current as Employer)\n            Router.push('/dashboard_employer')\n        } else {\n            // TODO: Find alternate way to wait until names are updated\n            // Works for both\n            setTimeout(() => {\n                this.changeUser({\n                    email: userAuth.email,\n                    id: userAuth.uid,\n                    firstName: userAuth.displayName.substr(0, userAuth.displayName.indexOf(' ')),\n                    lastName: userAuth.displayName.substr(userAuth.displayName.indexOf(' ')+1),\n                })\n            }, 500)\n            \n        }\n    });\n  };\n  render() {\n    return (\n      <UserContext.Provider value={this.state}>\n        {this.props.children}\n      </UserContext.Provider>\n    );\n  }\n}\nexport default UserProvider;"]},"metadata":{},"sourceType":"module"}