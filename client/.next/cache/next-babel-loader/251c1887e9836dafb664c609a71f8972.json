{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport { OnboardNavbar } from './OnboardNavbar';\nimport { Container } from './Container';\nimport { Typography } from 'antd';\nimport { myFirebase } from \"../lib/firebase\";\nimport FormPersonalData from './OnboardingFlow/FormPersonalData';\nimport QuizScreen from './OnboardingFlow/QuizScreen';\nimport styled from 'styled-components';\nimport { didCompleteQuiz } from '../lib/server';\nconst Title = styled(Typography.Title).withConfig({\n  displayName: \"Onboard__Title\",\n  componentId: \"sc-1f8dn92-0\"\n})([\"padding-top:15px;padding-bottom:35px;\"]);\nconst TOTAL_STEPS = [{\n  title: \"Employer or Designer\",\n  desc: \"Are you an Employer or Desinger?\"\n}, {\n  title: \"Get Started\",\n  desc: \"Add Personal Data\"\n}, {\n  title: \"Take the Quiz\",\n  desc: \"Finish Up and Get Evaluated\"\n}];\nexport const Onboard = props => {\n  const [currentStep, changeStep] = useState(1);\n  const [currentUser, changeUser] = useState(undefined);\n  useEffect(() => {\n    async function isAccountCreated() {\n      const res = await didCompleteQuiz(firebaseUser.uid);\n      console.log(res);\n      return res.status !== 404;\n    }\n\n    const firebaseUser = myFirebase.auth().currentUser;\n\n    if (firebaseUser !== null) {\n      if (isAccountCreated()) {\n        // TODO: Retrieve user and update\n        return;\n      } else {\n        changeUser({\n          email: firebaseUser.email,\n          firebaseId: firebaseUser.uid,\n          firstName: firebaseUser.displayName.substr(0, firebaseUser.displayName.indexOf(' ')),\n          lastName: firebaseUser.displayName.substr(firebaseUser.displayName.indexOf(' ') + 1)\n        });\n      }\n    }\n  }, [myFirebase.auth().currentUser]);\n  var currentForm;\n  var title;\n\n  switch (currentStep) {\n    case 0:\n      title = TOTAL_STEPS[0].title;\n      break;\n\n    case 1:\n      title = TOTAL_STEPS[1].title;\n      currentForm = /*#__PURE__*/React.createElement(FormPersonalData, {\n        changeStep: change => changeStep(currentStep + change),\n        currentUser: currentUser,\n        changeCurrentUser: user => changeUser(user)\n      });\n      break;\n\n    case 2:\n      title = TOTAL_STEPS[2].title;\n      currentForm = /*#__PURE__*/React.createElement(QuizScreen, {\n        changeStep: change => changeStep(currentStep + change),\n        currentUser: currentUser,\n        changeCurrentUser: user => changeUser(user)\n      });\n      break;\n  }\n\n  return /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(OnboardNavbar, {\n    currentStep: currentStep,\n    steps: TOTAL_STEPS\n  }), /*#__PURE__*/React.createElement(Title, null, title), currentForm);\n};","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel-client/components/Onboard.tsx"],"names":["React","useEffect","useState","OnboardNavbar","Container","Typography","myFirebase","FormPersonalData","QuizScreen","styled","didCompleteQuiz","Title","TOTAL_STEPS","title","desc","Onboard","props","currentStep","changeStep","currentUser","changeUser","undefined","isAccountCreated","res","firebaseUser","uid","console","log","status","auth","email","firebaseId","firstName","displayName","substr","indexOf","lastName","currentForm","change","user"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,UAAR,QAAyB,MAAzB;AAEA,SAAQC,UAAR,QAAyB,iBAAzB;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,eAAR,QAA8B,eAA9B;AAEA,MAAMC,KAAK,GAAGF,MAAM,CAACJ,UAAU,CAACM,KAAZ,CAAT;AAAA;AAAA;AAAA,6CAAX;AAKA,MAAMC,WAAW,GAAG,CAChB;AAACC,EAAAA,KAAK,EAAE,sBAAR;AAAgCC,EAAAA,IAAI,EAAE;AAAtC,CADgB,EAEhB;AAACD,EAAAA,KAAK,EAAE,aAAR;AAAuBC,EAAAA,IAAI,EAAE;AAA7B,CAFgB,EAGhB;AAACD,EAAAA,KAAK,EAAE,eAAR;AAAyBC,EAAAA,IAAI,EAAE;AAA/B,CAHgB,CAApB;AAMA,OAAO,MAAMC,OAAqB,GAAGC,KAAK,IAAI;AAC1C,QAAM,CAACC,WAAD,EAAcC,UAAd,IAA4BhB,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACiB,WAAD,EAAcC,UAAd,IAA4BlB,QAAQ,CAAmBmB,SAAnB,CAA1C;AAEApB,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeqB,gBAAf,GAAkC;AAC9B,YAAMC,GAAG,GAAG,MAAMb,eAAe,CAACc,YAAY,CAACC,GAAd,CAAjC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACA,aAAOA,GAAG,CAACK,MAAJ,KAAe,GAAtB;AACH;;AAED,UAAMJ,YAAY,GAAGlB,UAAU,CAACuB,IAAX,GAAkBV,WAAvC;;AACA,QAAIK,YAAY,KAAK,IAArB,EAA2B;AACvB,UAAIF,gBAAgB,EAApB,EAAwB;AACpB;AACA;AACH,OAHD,MAGO;AACHF,QAAAA,UAAU,CAAC;AACPU,UAAAA,KAAK,EAAEN,YAAY,CAACM,KADb;AAEPC,UAAAA,UAAU,EAAEP,YAAY,CAACC,GAFlB;AAGPO,UAAAA,SAAS,EAAER,YAAY,CAACS,WAAb,CAAyBC,MAAzB,CAAgC,CAAhC,EAAmCV,YAAY,CAACS,WAAb,CAAyBE,OAAzB,CAAiC,GAAjC,CAAnC,CAHJ;AAIPC,UAAAA,QAAQ,EAAEZ,YAAY,CAACS,WAAb,CAAyBC,MAAzB,CAAgCV,YAAY,CAACS,WAAb,CAAyBE,OAAzB,CAAiC,GAAjC,IAAsC,CAAtE;AAJH,SAAD,CAAV;AAMH;AACJ;AACJ,GArBQ,EAqBN,CAAC7B,UAAU,CAACuB,IAAX,GAAkBV,WAAnB,CArBM,CAAT;AAuBA,MAAIkB,WAAJ;AACA,MAAIxB,KAAJ;;AACA,UAAQI,WAAR;AACI,SAAK,CAAL;AACIJ,MAAAA,KAAK,GAAGD,WAAW,CAAC,CAAD,CAAX,CAAeC,KAAvB;AACA;;AACJ,SAAK,CAAL;AACIA,MAAAA,KAAK,GAAGD,WAAW,CAAC,CAAD,CAAX,CAAeC,KAAvB;AACAwB,MAAAA,WAAW,gBAAG,oBAAC,gBAAD;AAAkB,QAAA,UAAU,EAAGC,MAAD,IAAYpB,UAAU,CAACD,WAAW,GAAGqB,MAAf,CAApD;AACU,QAAA,WAAW,EAAEnB,WADvB;AAEU,QAAA,iBAAiB,EAAGoB,IAAD,IAAUnB,UAAU,CAACmB,IAAD;AAFjD,QAAd;AAGA;;AACJ,SAAK,CAAL;AACI1B,MAAAA,KAAK,GAAGD,WAAW,CAAC,CAAD,CAAX,CAAeC,KAAvB;AACAwB,MAAAA,WAAW,gBAAG,oBAAC,UAAD;AAAY,QAAA,UAAU,EAAGC,MAAD,IAAYpB,UAAU,CAACD,WAAW,GAAGqB,MAAf,CAA9C;AACO,QAAA,WAAW,EAAEnB,WADpB;AAEO,QAAA,iBAAiB,EAAGoB,IAAD,IAAUnB,UAAU,CAACmB,IAAD;AAF9C,QAAd;AAGA;AAfR;;AAkBA,sBACI,oBAAC,SAAD,qBACI,oBAAC,aAAD;AAAe,IAAA,WAAW,EAAEtB,WAA5B;AAAyC,IAAA,KAAK,EAAEL;AAAhD,IADJ,eAEI,oBAAC,KAAD,QAAQC,KAAR,CAFJ,EAGKwB,WAHL,CADJ;AAOH,CAtDM","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {OnboardNavbar} from './OnboardNavbar'\nimport {Container} from './Container'\nimport {Typography} from 'antd'\nimport {User} from '../model/model'\nimport {myFirebase} from \"../lib/firebase\";\nimport FormPersonalData from './OnboardingFlow/FormPersonalData'\nimport QuizScreen from './OnboardingFlow/QuizScreen'\nimport styled from 'styled-components'\nimport {didCompleteQuiz} from '../lib/server'\n\nconst Title = styled(Typography.Title)`\n    padding-top: 15px;\n    padding-bottom: 35px;\n`\n\nconst TOTAL_STEPS = [\n    {title: \"Employer or Designer\", desc: \"Are you an Employer or Desinger?\"},\n    {title: \"Get Started\", desc: \"Add Personal Data\"},\n    {title: \"Take the Quiz\", desc: \"Finish Up and Get Evaluated\"}\n];\n\nexport const Onboard: React.FC<{}> = props => {\n    const [currentStep, changeStep] = useState(1);\n    const [currentUser, changeUser] = useState<User | undefined>(undefined);\n\n    useEffect(() => {\n        async function isAccountCreated() {\n            const res = await didCompleteQuiz(firebaseUser.uid)\n            console.log(res)\n            return res.status !== 404\n        }\n\n        const firebaseUser = myFirebase.auth().currentUser;\n        if (firebaseUser !== null) {\n            if (isAccountCreated()) {\n                // TODO: Retrieve user and update\n                return;\n            } else {\n                changeUser({\n                    email: firebaseUser.email,\n                    firebaseId: firebaseUser.uid,\n                    firstName: firebaseUser.displayName.substr(0, firebaseUser.displayName.indexOf(' ')),\n                    lastName: firebaseUser.displayName.substr(firebaseUser.displayName.indexOf(' ')+1),\n                });\n            }\n        }\n    }, [myFirebase.auth().currentUser]);\n\n    var currentForm;\n    var title;\n    switch (currentStep) {\n        case 0:\n            title = TOTAL_STEPS[0].title\n            break;\n        case 1:\n            title = TOTAL_STEPS[1].title\n            currentForm = <FormPersonalData changeStep={(change) => changeStep(currentStep + change)}\n                                    currentUser={currentUser}\n                                    changeCurrentUser={(user) => changeUser(user)}/>;\n            break;\n        case 2:\n            title = TOTAL_STEPS[2].title\n            currentForm = <QuizScreen changeStep={(change) => changeStep(currentStep + change)}\n                                 currentUser={currentUser}\n                                 changeCurrentUser={(user) => changeUser(user)}/>;\n            break;\n    }\n\n    return (\n        <Container>\n            <OnboardNavbar currentStep={currentStep} steps={TOTAL_STEPS}/>\n            <Title>{title}</Title>\n            {currentForm}\n        </Container>\n    );\n}"]},"metadata":{},"sourceType":"module"}