{"ast":null,"code":"import React, { useContext } from 'react';\nimport { UserContext } from '../../../lib/UserProvider';\nimport QuizScreen from '../../OnboardingFlow/Designers/QuizScreen';\nimport { createUser } from '../../../lib/server';\nimport { Typography } from 'antd';\n\nconst ViewCommunications = props => {\n  const {\n    currentUser,\n    changeUser\n  } = useContext(UserContext);\n\n  const updateUser = async updatedUser => {\n    changeUser(updatedUser);\n    await createUser(updatedUser);\n  };\n\n  if (!currentUser.completedQuiz) {\n    return /*#__PURE__*/React.createElement(QuizScreen, {\n      isDashboard: true,\n      changeCurrentUser: updateUser\n    });\n  }\n\n  if (!currentUser.graded) {\n    return /*#__PURE__*/React.createElement(Typography, null, \"It looks you have not been reviewed by our staff yet. Check back later!\");\n  } else {\n    if (currentUser.communications === null || currentUser.communications === []) {\n      return /*#__PURE__*/React.createElement(Typography, null, \"Our employers are currently taking a look at your profile and will reach out if they express interest in you.\");\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    }\n  }\n};\n\nexport default ViewCommunications;","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel-client/components/Dashboard/Designer/ViewCommunications.tsx"],"names":["React","useContext","UserContext","QuizScreen","createUser","Typography","ViewCommunications","props","currentUser","changeUser","updateUser","updatedUser","completedQuiz","graded","communications"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,WAAR,QAA0B,2BAA1B;AACA,OAAOC,UAAP,MAAuB,2CAAvB;AACA,SAAQC,UAAR,QAAyB,qBAAzB;AAEA,SAAQC,UAAR,QAAyB,MAAzB;;AAEA,MAAMC,kBAA4B,GAAIC,KAAD,IAAW;AAC5C,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAA6BR,UAAU,CAACC,WAAD,CAA7C;;AAEA,QAAMQ,UAAU,GAAG,MAAOC,WAAP,IAA6B;AAC5CF,IAAAA,UAAU,CAACE,WAAD,CAAV;AACA,UAAMP,UAAU,CAACO,WAAD,CAAhB;AACH,GAHD;;AAKA,MAAI,CAAEH,WAAD,CAAsBI,aAA3B,EAA0C;AACtC,wBAAQ,oBAAC,UAAD;AAAY,MAAA,WAAW,EAAE,IAAzB;AAA+B,MAAA,iBAAiB,EAAEF;AAAlD,MAAR;AACH;;AAED,MAAI,CAAEF,WAAD,CAAsBK,MAA3B,EAAmC;AAC/B,wBAAQ,oBAAC,UAAD,kFAAR;AACH,GAFD,MAEO;AACH,QAAKL,WAAD,CAAsBM,cAAtB,KAAyC,IAAzC,IAAkDN,WAAD,CAAsBM,cAAtB,KAAyC,EAA9F,EAAkG;AAC9F,0BAAQ,oBAAC,UAAD,wHAAR;AACH,KAFD,MAEO;AACH,0BAAQ,yCAAR;AACH;AACJ;AACJ,CArBD;;AAuBA,eAAeR,kBAAf","sourcesContent":["import React, {useContext} from 'react'\nimport {UserContext} from '../../../lib/UserProvider'\nimport QuizScreen from '../../OnboardingFlow/Designers/QuizScreen'\nimport {createUser} from '../../../lib/server'\nimport {User} from '../../../model/model'\nimport {Typography} from 'antd'\n\nconst ViewCommunications: React.FC = (props) => {\n    const {currentUser, changeUser}  = useContext(UserContext)\n\n    const updateUser = async (updatedUser: User) => {\n        changeUser(updatedUser)\n        await createUser(updatedUser)\n    }\n\n    if (!(currentUser as User).completedQuiz) {\n        return (<QuizScreen isDashboard={true} changeCurrentUser={updateUser}/>)\n    }\n\n    if (!(currentUser as User).graded) {\n        return (<Typography>It looks you have not been reviewed by our staff yet. Check back later!</Typography>)\n    } else {\n        if ((currentUser as User).communications === null || (currentUser as User).communications === []) {\n            return (<Typography>Our employers are currently taking a look at your profile and will reach out if they express interest in you.</Typography>)\n        } else {\n            return (<></>)\n        }\n    }\n}\n\nexport default ViewCommunications"]},"metadata":{},"sourceType":"module"}