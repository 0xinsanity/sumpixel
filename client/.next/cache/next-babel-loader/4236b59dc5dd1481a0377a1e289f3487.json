{"ast":null,"code":"import React from 'react';\nimport { Steps } from 'antd';\nconst {\n  Step\n} = Steps;\nimport _ from 'lodash';\nexport let NavBarStatus;\n\n(function (NavBarStatus) {\n  NavBarStatus[NavBarStatus[\"Undecided\"] = 0] = \"Undecided\";\n  NavBarStatus[NavBarStatus[\"Employer\"] = 1] = \"Employer\";\n  NavBarStatus[NavBarStatus[\"Decided\"] = 2] = \"Decided\";\n})(NavBarStatus || (NavBarStatus = {}));\n\nexport const OnboardNavbar = props => {\n  return /*#__PURE__*/React.createElement(Steps, {\n    style: {\n      paddingBottom: 20\n    },\n    current: props.currentStep\n  }, _.map(props.steps, ({\n    title,\n    desc\n  }) => {\n    return /*#__PURE__*/React.createElement(Step, {\n      title: title,\n      description: desc\n    });\n  }));\n};","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel-client/components/OnboardNavbar.tsx"],"names":["React","Steps","Step","_","NavBarStatus","OnboardNavbar","props","paddingBottom","currentStep","map","steps","title","desc"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,MAAM;AAACC,EAAAA;AAAD,IAASD,KAAf;AACA,OAAOE,CAAP,MAAc,QAAd;AAEA,WAAYC,YAAZ;;WAAYA,Y;AAAAA,EAAAA,Y,CAAAA,Y;AAAAA,EAAAA,Y,CAAAA,Y;AAAAA,EAAAA,Y,CAAAA,Y;GAAAA,Y,KAAAA,Y;;AAYZ,OAAO,MAAMC,aAA2C,GAAIC,KAAD,IAAW;AAClE,sBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAACC,MAAAA,aAAa,EAAE;AAAhB,KAAd;AAAmC,IAAA,OAAO,EAAED,KAAK,CAACE;AAAlD,KACKL,CAAC,CAACM,GAAF,CAAMH,KAAK,CAACI,KAAZ,EAAmB,CAAC;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAD,KAAmB;AACnC,wBAAQ,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAED,KAAb;AAAoB,MAAA,WAAW,EAAEC;AAAjC,MAAR;AACH,GAFA,CADL,CADJ;AAOH,CARM","sourcesContent":["import React from 'react'\nimport { Steps } from 'antd';\nconst {Step} = Steps;\nimport _ from 'lodash'\n\nexport enum NavBarStatus {\n    Undecided,\n    Employer,\n    Decided\n}\n\ninterface OnboardNavbarProps {\n    currentStep: number;\n    steps: {title: string, desc: string}[];\n    status: NavBarStatus\n}\n\nexport const OnboardNavbar: React.FC<OnboardNavbarProps> = (props) => {\n    return (\n        <Steps style={{paddingBottom: 20}} current={props.currentStep}>\n            {_.map(props.steps, ({title, desc}) => {\n                return (<Step title={title} description={desc}/>)\n            })}\n        </Steps>\n    );\n}"]},"metadata":{},"sourceType":"module"}