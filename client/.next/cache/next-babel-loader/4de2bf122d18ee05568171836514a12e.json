{"ast":null,"code":"import React, { useContext } from 'react';\nimport { Tabs } from 'antd';\nimport { Container } from '../components/General/Container';\nimport NavigationBar from '../components/Dashboard/NavigationBar';\nimport FormPersonalData from '../components/OnboardingFlow/Designers/FormPersonalData';\nimport ViewCommunications from '../components/Dashboard/Designer/ViewCommunications';\nimport { UserContext } from '../lib/UserProvider';\nimport { createUser } from '../lib/server';\nconst {\n  TabPane\n} = Tabs;\n\nconst DashboardUser = props => {\n  const {\n    currentUser,\n    changeUser\n  } = useContext(UserContext);\n\n  const updateUser = async updatedUser => {\n    changeUser(updatedUser);\n    await createUser(updatedUser);\n  }; // TODO: If user['completed_quiz'] is false, show screen that says, \"Complete quiz first and then come back\"\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavigationBar, {\n    title: `${currentUser.firstName} ${currentUser.lastName}'s Dashboard`,\n    subtitle: \"Modify Profile and View Communications\",\n    footer: /*#__PURE__*/React.createElement(Tabs, {\n      defaultActiveKey: \"1\",\n      style: {\n        border: '1px solid rgb(235, 237, 240)'\n      }\n    }, /*#__PURE__*/React.createElement(TabPane, {\n      tab: \"View Communications\",\n      key: \"1\"\n    }, /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(ViewCommunications, null))), /*#__PURE__*/React.createElement(TabPane, {\n      tab: \"Modify Profile\",\n      key: \"2\"\n    }, /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(FormPersonalData, {\n      changeCurrentUser: updateUser,\n      modifyProfile: true\n    }))))\n  }));\n};\n\nexport default DashboardUser;","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel-client/pages/dashboard_user.tsx"],"names":["React","useContext","Tabs","Container","NavigationBar","FormPersonalData","ViewCommunications","UserContext","createUser","TabPane","DashboardUser","props","currentUser","changeUser","updateUser","updatedUser","firstName","lastName","border"],"mappings":"AAAA,OAAOA,KAAP,IAAoCC,UAApC,QAAqD,OAArD;AACA,SAAQC,IAAR,QAAmB,MAAnB;AACA,SAAQC,SAAR,QAAwB,iCAAxB;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,OAAOC,gBAAP,MAA6B,yDAA7B;AACA,OAAOC,kBAAP,MAA+B,qDAA/B;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AAEA,SAAQC,UAAR,QAAyB,eAAzB;AACA,MAAM;AAACC,EAAAA;AAAD,IAAYP,IAAlB;;AAEA,MAAMQ,aAAuB,GAAIC,KAAD,IAAW;AACvC,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAA6BZ,UAAU,CAACM,WAAD,CAA7C;;AAEA,QAAMO,UAAU,GAAG,MAAOC,WAAP,IAA6B;AAC5CF,IAAAA,UAAU,CAACE,WAAD,CAAV;AACA,UAAMP,UAAU,CAACO,WAAD,CAAhB;AACH,GAHD,CAHuC,CAQvC;;;AAEA,sBACI,uDACI,oBAAC,aAAD;AACI,IAAA,KAAK,EAAG,GAAEH,WAAW,CAACI,SAAU,IAAGJ,WAAW,CAACK,QAAS,cAD5D;AAEI,IAAA,QAAQ,EAAC,wCAFb;AAGI,IAAA,MAAM,eACE,oBAAC,IAAD;AAAM,MAAA,gBAAgB,EAAC,GAAvB;AAA2B,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE;AAAT;AAAlC,oBACI,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAC,qBAAb;AAAmC,MAAA,GAAG,EAAC;AAAvC,oBACI,oBAAC,SAAD,qBACI,oBAAC,kBAAD,OADJ,CADJ,CADJ,eAMI,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAC,gBAAb;AAA8B,MAAA,GAAG,EAAC;AAAlC,oBACI,oBAAC,SAAD,qBACI,oBAAC,gBAAD;AAAkB,MAAA,iBAAiB,EAAEJ,UAArC;AAAiD,MAAA,aAAa,EAAE;AAAhE,MADJ,CADJ,CANJ;AAJZ,IADJ,CADJ;AAsBH,CAhCD;;AAkCA,eAAeJ,aAAf","sourcesContent":["import React, {useEffect, useState, useContext} from 'react'\nimport {Tabs} from 'antd'\nimport {Container} from '../components/General/Container'\nimport NavigationBar from '../components/Dashboard/NavigationBar'\nimport FormPersonalData from '../components/OnboardingFlow/Designers/FormPersonalData'\nimport ViewCommunications from '../components/Dashboard/Designer/ViewCommunications'\nimport {UserContext} from '../lib/UserProvider'\nimport {User} from '../model/model'\nimport {createUser} from '../lib/server'\nconst {TabPane} = Tabs\n\nconst DashboardUser: React.FC = (props) => {\n    const {currentUser, changeUser}  = useContext(UserContext)\n\n    const updateUser = async (updatedUser: User) => {\n        changeUser(updatedUser)\n        await createUser(updatedUser)\n    }\n\n    // TODO: If user['completed_quiz'] is false, show screen that says, \"Complete quiz first and then come back\"\n\n    return (\n        <>\n            <NavigationBar \n                title={`${currentUser.firstName} ${currentUser.lastName}'s Dashboard`} \n                subtitle=\"Modify Profile and View Communications\" \n                footer={\n                        <Tabs defaultActiveKey=\"1\" style={{border: '1px solid rgb(235, 237, 240)'}}>\n                            <TabPane tab=\"View Communications\" key=\"1\">\n                                <Container>\n                                    <ViewCommunications />\n                                </Container>\n                            </TabPane>\n                            <TabPane tab=\"Modify Profile\" key=\"2\">\n                                <Container>\n                                    <FormPersonalData changeCurrentUser={updateUser} modifyProfile={true} />\n                                </Container>\n                            </TabPane>\n                        </Tabs>\n                }\n            />\n        </>\n    );\n};\n\nexport default DashboardUser;"]},"metadata":{},"sourceType":"module"}