{"ast":null,"code":"import React from 'react';\nimport { List, Radio } from 'antd';\n\nconst DesignerList = props => {\n  const {\n    designerList\n  } = props;\n  return /*#__PURE__*/React.createElement(List, {\n    style: {\n      width: '100%'\n    },\n    dataSource: designerList,\n    bordered: true,\n    renderItem: ({\n      communicationId,\n      companyName,\n      designerApprovedTalk,\n      decision\n    }) => /*#__PURE__*/React.createElement(List.Item, null, /*#__PURE__*/React.createElement(List.Item.Meta, {\n      title: companyName,\n      description: decisionToText(companyName, decision)\n    }), /*#__PURE__*/React.createElement(Radio.Group, {\n      onChange: e => updateDesignerText(communicationId, e.target.value),\n      value: designerApprovedTalk\n    }, /*#__PURE__*/React.createElement(Radio.Button, {\n      value: DesignerDecisionTalk.UNDECIDED\n    }, \"Undecided\"), /*#__PURE__*/React.createElement(Radio.Button, {\n      value: DesignerDecisionTalk.WILL_TALK\n    }, \"Will Talk\"), /*#__PURE__*/React.createElement(Radio.Button, {\n      value: DesignerDecisionTalk.WILL_NOT_TALK\n    }, \"Will Not Talk\")))\n  });\n};\n\nexport default DesignerList;","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel-client/components/Dashboard/Employer/DesignerList.tsx"],"names":["React","List","Radio","DesignerList","props","designerList","width","communicationId","companyName","designerApprovedTalk","decision","decisionToText","e","updateDesignerText","target","value","DesignerDecisionTalk","UNDECIDED","WILL_TALK","WILL_NOT_TALK"],"mappings":"AAAA,OAAOA,KAAP,MAAqD,OAArD;AAKA,SAAQC,IAAR,EAAcC,KAAd,QAA0B,MAA1B;;AAMA,MAAMC,YAAyC,GAAIC,KAAD,IAAW;AACzD,QAAM;AAACC,IAAAA;AAAD,MAAiBD,KAAvB;AAGA,sBACI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE;AAACE,MAAAA,KAAK,EAAE;AAAR,KADX;AAEI,IAAA,UAAU,EAAED,YAFhB;AAGI,IAAA,QAAQ,MAHZ;AAII,IAAA,UAAU,EAAE,CAAC;AAACE,MAAAA,eAAD;AAAkBC,MAAAA,WAAlB;AAA+BC,MAAAA,oBAA/B;AAAqDC,MAAAA;AAArD,KAAD,kBACR,oBAAC,IAAD,CAAM,IAAN,qBACI,oBAAC,IAAD,CAAM,IAAN,CAAW,IAAX;AAAgB,MAAA,KAAK,EAAEF,WAAvB;AAAoC,MAAA,WAAW,EAAEG,cAAc,CAACH,WAAD,EAAcE,QAAd;AAA/D,MADJ,eAEI,oBAAC,KAAD,CAAO,KAAP;AAAa,MAAA,QAAQ,EAAGE,CAAD,IAAOC,kBAAkB,CAACN,eAAD,EAAkBK,CAAC,CAACE,MAAF,CAASC,KAA3B,CAAhD;AAAmF,MAAA,KAAK,EAAEN;AAA1F,oBACI,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,KAAK,EAAEO,oBAAoB,CAACC;AAA1C,mBADJ,eAEI,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,KAAK,EAAED,oBAAoB,CAACE;AAA1C,mBAFJ,eAGI,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,KAAK,EAAEF,oBAAoB,CAACG;AAA1C,uBAHJ,CAFJ;AALR,IADJ;AAgBH,CApBD;;AAsBA,eAAehB,YAAf","sourcesContent":["import React, {useEffect, useContext, useState} from 'react'\nimport { getGradedDesigners } from '../../../lib/server'\nimport { UserAndGrade } from '../../../model/model'\nimport {UserContext} from '../../../lib/UserProvider'\nimport Loading from '../../General/Loading'\nimport {List, Radio} from 'antd'\n\ninterface DesignerListProps {\n    designerList: UserAndGrade[]\n}\n\nconst DesignerList: React.FC<DesignerListProps> = (props) => {\n    const {designerList} = props\n    \n\n    return (\n        <List\n            style={{width: '100%'}}\n            dataSource={designerList}\n            bordered\n            renderItem={({communicationId, companyName, designerApprovedTalk, decision}) => (\n                <List.Item>\n                    <List.Item.Meta title={companyName} description={decisionToText(companyName, decision)}/>\n                    <Radio.Group onChange={(e) => updateDesignerText(communicationId, e.target.value)} value={designerApprovedTalk}>\n                        <Radio.Button value={DesignerDecisionTalk.UNDECIDED}>Undecided</Radio.Button>\n                        <Radio.Button value={DesignerDecisionTalk.WILL_TALK}>Will Talk</Radio.Button>\n                        <Radio.Button value={DesignerDecisionTalk.WILL_NOT_TALK}>Will Not Talk</Radio.Button>\n                    </Radio.Group>\n                </List.Item>\n            )}\n        />)\n}\n\nexport default DesignerList"]},"metadata":{},"sourceType":"module"}