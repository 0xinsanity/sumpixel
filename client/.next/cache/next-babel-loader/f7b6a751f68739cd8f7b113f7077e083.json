{"ast":null,"code":"import React, { useState } from 'react';\nimport { DesignerDecisionTalk, EmployerDecisionHire } from '../../../model/model';\nimport DesignerInfoModal from './DesignerInfoModal';\nimport { Radio, Popconfirm, Table } from 'antd';\nimport { RequestCallButton } from './DesignerList';\nconst {\n  Column\n} = Table;\n\nconst EmployerCommList = props => {\n  const {\n    communicationList,\n    updateDecision\n  } = props;\n  const [showModal, setModalVisibility] = useState(false);\n  const [currentDesigner, setCurrentDesigner] = useState(undefined);\n\n  const decisionToText = dec => {\n    switch (dec) {\n      case DesignerDecisionTalk.UNDECIDED:\n        return 'Reviewing Your Request';\n\n      case DesignerDecisionTalk.WILL_TALK:\n        return `Accepts to Talk`;\n\n      case DesignerDecisionTalk.WILL_NOT_TALK:\n        return `Declines to Talk`;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DesignerInfoModal, {\n    setInvisible: () => setModalVisibility(false),\n    visible: showModal,\n    designer: currentDesigner\n  }), /*#__PURE__*/React.createElement(Table, {\n    style: {\n      paddingBottom: 10,\n      width: '100%',\n      fontFamily: 'Mark Pro Bold',\n      fontWeight: 'normal'\n    },\n    size: \"large\",\n    dataSource: communicationList,\n    bordered: false\n  }, /*#__PURE__*/React.createElement(Column, {\n    width: '35%',\n    title: \"Name\",\n    dataIndex: \"fullName\",\n    key: \"fullName\"\n  }), /*#__PURE__*/React.createElement(Column, {\n    title: \"Designer's Status\",\n    dataIndex: \"designerApprovedTalk\",\n    key: \"designerApprovedTalk\"\n  }), /*#__PURE__*/React.createElement(Column, {\n    align: 'center',\n    title: \"Decision\",\n    dataIndex: \"decision\",\n    key: \"decision\",\n    render: (text, record, index) => /*#__PURE__*/React.createElement(Popconfirm, {\n      title: \"Are you sure?\"\n    }, /*#__PURE__*/React.createElement(Radio.Group, {\n      onChange: e => updateDecision(communicationList[index].communicationId, e.target.value),\n      value: text\n    }, /*#__PURE__*/React.createElement(Radio.Button, {\n      value: EmployerDecisionHire.UNDECIDED\n    }, \"Still In Talks\"), /*#__PURE__*/React.createElement(Radio.Button, {\n      value: EmployerDecisionHire.REJECT\n    }, \"Reject\"), /*#__PURE__*/React.createElement(Radio.Button, {\n      value: EmployerDecisionHire.HIRE\n    }, \"Hire\")))\n  }), /*#__PURE__*/React.createElement(Column, {\n    align: 'center',\n    title: \"Contact\",\n    dataIndex: \"contact\",\n    key: \"contact\",\n    render: contact => /*#__PURE__*/React.createElement(RequestCallButton, {\n      onClick: () => onMoreInfo(contact)\n    }, \"More Info\")\n  }), \"/>\"));\n};\n\nexport default EmployerCommList;","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel/client/components/Dashboard/Employer/EmployerCommList.tsx"],"names":["React","useState","DesignerDecisionTalk","EmployerDecisionHire","DesignerInfoModal","Radio","Popconfirm","Table","RequestCallButton","Column","EmployerCommList","props","communicationList","updateDecision","showModal","setModalVisibility","currentDesigner","setCurrentDesigner","undefined","decisionToText","dec","UNDECIDED","WILL_TALK","WILL_NOT_TALK","paddingBottom","width","fontFamily","fontWeight","text","record","index","e","communicationId","target","value","REJECT","HIRE","contact","onMoreInfo"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {UserContext} from '../../../lib/UserProvider'\nimport QuizScreen from '../../OnboardingFlow/Designers/QuizScreen'\nimport {createUser} from '../../../lib/server'\nimport {User, DesignerDecisionTalk, EmployerDecisionHire, CommForEmployer} from '../../../model/model'\nimport DesignerInfoModal from './DesignerInfoModal'\nimport {Typography, List, Radio, Popconfirm, Table} from 'antd'\nimport {RequestCallButton} from './DesignerList'\nconst {Column} = Table\n\ninterface CommunicationsListProps {\n    communicationList: CommForEmployer[]\n    updateDecision: (commId: string, update: EmployerDecisionHire) => void\n}\n\nconst EmployerCommList: React.FC<CommunicationsListProps> = (props) => {\n    const {communicationList, updateDecision} = props\n    const [showModal, setModalVisibility] = useState(false) \n    const [currentDesigner, setCurrentDesigner] = useState<User>(undefined) \n\n    const decisionToText = (dec: DesignerDecisionTalk): string => {\n        switch (dec) {\n            case DesignerDecisionTalk.UNDECIDED:\n                return 'Reviewing Your Request'\n            case DesignerDecisionTalk.WILL_TALK:\n                return `Accepts to Talk`\n            case DesignerDecisionTalk.WILL_NOT_TALK:\n                return `Declines to Talk`\n        }\n    }\n\n    return (\n        <>\n        <DesignerInfoModal setInvisible={() => setModalVisibility(false)}\n                                visible={showModal}\n                               designer={currentDesigner}/>\n        <Table\n                style={{paddingBottom: 10, width: '100%', fontFamily: 'Mark Pro Bold', fontWeight: 'normal'}}\n                size={\"large\"}\n                dataSource={communicationList}\n                bordered={false}\n            >\n                <Column width={'35%'} title=\"Name\" dataIndex=\"fullName\" key=\"fullName\" />\n                <Column title=\"Designer's Status\" dataIndex=\"designerApprovedTalk\" key=\"designerApprovedTalk\" />\n                <Column align={'center'} title=\"Decision\" dataIndex=\"decision\" key=\"decision\" render={(text, record, index) => (\n                    <Popconfirm title={\"Are you sure?\"}>\n                        <Radio.Group onChange={(e) => updateDecision(communicationList[index].communicationId, e.target.value)} value={text}>\n                            <Radio.Button value={EmployerDecisionHire.UNDECIDED}>Still In Talks</Radio.Button>\n                            <Radio.Button value={EmployerDecisionHire.REJECT}>Reject</Radio.Button>\n                            <Radio.Button value={EmployerDecisionHire.HIRE}>Hire</Radio.Button>\n                        </Radio.Group>\n                    </Popconfirm> \n                )} />\n                <Column align={'center'} title=\"Contact\" dataIndex=\"contact\" key=\"contact\" render={(contact) => (\n                    <RequestCallButton onClick={() => onMoreInfo(contact)}>\n                        More Info\n                    </RequestCallButton>\n                )} />\n                 />\n            </Table>\n            </>\n    )\n}\n\nexport default EmployerCommList"]},"metadata":{},"sourceType":"module"}