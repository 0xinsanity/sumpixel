{"ast":null,"code":"import React from 'react';\nimport { DesignerDecisionTalk, EmployerDecisionHire } from '../../../model/model';\nimport { Radio, Popconfirm, Table } from 'antd';\nconst {\n  Column\n} = Table;\n\nconst EmployerCommList = props => {\n  const {\n    communicationList,\n    updateDecision\n  } = props;\n\n  const decisionToText = dec => {\n    switch (dec) {\n      case DesignerDecisionTalk.UNDECIDED:\n        return '';\n\n      case DesignerDecisionTalk.WILL_TALK:\n        return `You will soon be in contact with them.`;\n\n      case DesignerDecisionTalk.WILL_NOT_TALK:\n        return `They are not interested in your offer`;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Table, {\n    style: {\n      paddingBottom: 10,\n      width: '100%',\n      fontFamily: 'Mark Pro Bold',\n      fontWeight: 'normal'\n    },\n    size: \"large\",\n    dataSource: communicationList,\n    bordered: false\n  }, /*#__PURE__*/React.createElement(Column, {\n    width: '35%',\n    title: \"Name\",\n    dataIndex: \"fullName\",\n    key: \"fullName\"\n  }), /*#__PURE__*/React.createElement(Column, {\n    title: \"Designer's Status\",\n    dataIndex: \"designerApprovedTalk\",\n    key: \"designerApprovedTalk\"\n  }), /*#__PURE__*/React.createElement(Column, {\n    align: 'center',\n    title: \"Decision\",\n    dataIndex: \"decision\",\n    key: \"decision\",\n    render: (text, record, index) => /*#__PURE__*/React.createElement(Popconfirm, {\n      title: \"Are you sure?\"\n    }, /*#__PURE__*/React.createElement(Radio.Group, {\n      onChange: e => updateDecision(communicationList[index].communicationId, e.target.value),\n      value: text\n    }, /*#__PURE__*/React.createElement(Radio.Button, {\n      value: EmployerDecisionHire.UNDECIDED\n    }, \"Still In Talks\"), /*#__PURE__*/React.createElement(Radio.Button, {\n      value: EmployerDecisionHire.REJECT\n    }, \"Reject\"), /*#__PURE__*/React.createElement(Radio.Button, {\n      value: EmployerDecisionHire.HIRE\n    }, \"Hire\")))\n  }), \"/>\");\n};\n\nexport default EmployerCommList;","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel/client/components/Dashboard/Employer/EmployerCommList.tsx"],"names":["React","DesignerDecisionTalk","EmployerDecisionHire","Radio","Popconfirm","Table","Column","EmployerCommList","props","communicationList","updateDecision","decisionToText","dec","UNDECIDED","WILL_TALK","WILL_NOT_TALK","paddingBottom","width","fontFamily","fontWeight","text","record","index","e","communicationId","target","value","REJECT","HIRE"],"mappings":"AAAA,OAAOA,KAAP,MAAgC,OAAhC;AAIA,SAAcC,oBAAd,EAAoCC,oBAApC,QAAgF,sBAAhF;AACA,SAA0BC,KAA1B,EAAiCC,UAAjC,EAA6CC,KAA7C,QAAyD,MAAzD;AACA,MAAM;AAACC,EAAAA;AAAD,IAAWD,KAAjB;;AAOA,MAAME,gBAAmD,GAAIC,KAAD,IAAW;AACnE,QAAM;AAACC,IAAAA,iBAAD;AAAoBC,IAAAA;AAApB,MAAsCF,KAA5C;;AAEA,QAAMG,cAAc,GAAIC,GAAD,IAAuC;AAC1D,YAAQA,GAAR;AACI,WAAKX,oBAAoB,CAACY,SAA1B;AACI,eAAO,EAAP;;AACJ,WAAKZ,oBAAoB,CAACa,SAA1B;AACI,eAAQ,wCAAR;;AACJ,WAAKb,oBAAoB,CAACc,aAA1B;AACI,eAAQ,uCAAR;AANR;AAQH,GATD;;AAWA,sBACI,oBAAC,KAAD;AACQ,IAAA,KAAK,EAAE;AAACC,MAAAA,aAAa,EAAE,EAAhB;AAAoBC,MAAAA,KAAK,EAAE,MAA3B;AAAmCC,MAAAA,UAAU,EAAE,eAA/C;AAAgEC,MAAAA,UAAU,EAAE;AAA5E,KADf;AAEQ,IAAA,IAAI,EAAE,OAFd;AAGQ,IAAA,UAAU,EAAEV,iBAHpB;AAIQ,IAAA,QAAQ,EAAE;AAJlB,kBAMQ,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,KAAf;AAAsB,IAAA,KAAK,EAAC,MAA5B;AAAmC,IAAA,SAAS,EAAC,UAA7C;AAAwD,IAAA,GAAG,EAAC;AAA5D,IANR,eAOQ,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,mBAAd;AAAkC,IAAA,SAAS,EAAC,sBAA5C;AAAmE,IAAA,GAAG,EAAC;AAAvE,IAPR,eAQQ,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,QAAf;AAAyB,IAAA,KAAK,EAAC,UAA/B;AAA0C,IAAA,SAAS,EAAC,UAApD;AAA+D,IAAA,GAAG,EAAC,UAAnE;AAA8E,IAAA,MAAM,EAAE,CAACW,IAAD,EAAOC,MAAP,EAAeC,KAAf,kBAClF,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAAnB,oBACI,oBAAC,KAAD,CAAO,KAAP;AAAa,MAAA,QAAQ,EAAGC,CAAD,IAAOb,cAAc,CAACD,iBAAiB,CAACa,KAAD,CAAjB,CAAyBE,eAA1B,EAA2CD,CAAC,CAACE,MAAF,CAASC,KAApD,CAA5C;AAAwG,MAAA,KAAK,EAAEN;AAA/G,oBACI,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,KAAK,EAAElB,oBAAoB,CAACW;AAA1C,wBADJ,eAEI,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,KAAK,EAAEX,oBAAoB,CAACyB;AAA1C,gBAFJ,eAGI,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,KAAK,EAAEzB,oBAAoB,CAAC0B;AAA1C,cAHJ,CADJ;AADJ,IARR,OADJ;AAqBH,CAnCD;;AAqCA,eAAerB,gBAAf","sourcesContent":["import React, {useContext} from 'react'\nimport {UserContext} from '../../../lib/UserProvider'\nimport QuizScreen from '../../OnboardingFlow/Designers/QuizScreen'\nimport {createUser} from '../../../lib/server'\nimport {User, DesignerDecisionTalk, EmployerDecisionHire, CommForEmployer} from '../../../model/model'\nimport {Typography, List, Radio, Popconfirm, Table} from 'antd'\nconst {Column} = Table\n\ninterface CommunicationsListProps {\n    communicationList: CommForEmployer[]\n    updateDecision: (commId: string, update: EmployerDecisionHire) => void\n}\n\nconst EmployerCommList: React.FC<CommunicationsListProps> = (props) => {\n    const {communicationList, updateDecision} = props\n\n    const decisionToText = (dec: DesignerDecisionTalk): string => {\n        switch (dec) {\n            case DesignerDecisionTalk.UNDECIDED:\n                return ''\n            case DesignerDecisionTalk.WILL_TALK:\n                return `You will soon be in contact with them.`\n            case DesignerDecisionTalk.WILL_NOT_TALK:\n                return `They are not interested in your offer`\n        }\n    }\n\n    return (\n        <Table\n                style={{paddingBottom: 10, width: '100%', fontFamily: 'Mark Pro Bold', fontWeight: 'normal'}}\n                size={\"large\"}\n                dataSource={communicationList}\n                bordered={false}\n            >\n                <Column width={'35%'} title=\"Name\" dataIndex=\"fullName\" key=\"fullName\" />\n                <Column title=\"Designer's Status\" dataIndex=\"designerApprovedTalk\" key=\"designerApprovedTalk\" />\n                <Column align={'center'} title=\"Decision\" dataIndex=\"decision\" key=\"decision\" render={(text, record, index) => (\n                    <Popconfirm title={\"Are you sure?\"}>\n                        <Radio.Group onChange={(e) => updateDecision(communicationList[index].communicationId, e.target.value)} value={text}>\n                            <Radio.Button value={EmployerDecisionHire.UNDECIDED}>Still In Talks</Radio.Button>\n                            <Radio.Button value={EmployerDecisionHire.REJECT}>Reject</Radio.Button>\n                            <Radio.Button value={EmployerDecisionHire.HIRE}>Hire</Radio.Button>\n                        </Radio.Group>\n                    </Popconfirm> \n                )} />\n                 />\n            </Table>\n    )\n}\n\nexport default EmployerCommList"]},"metadata":{},"sourceType":"module"}