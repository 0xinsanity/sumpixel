{"ast":null,"code":"import React, { useContext, useState } from 'react';\nimport { createCommunication } from '../../../lib/server';\nimport { UserContext } from '../../../lib/UserProvider';\nimport { List, Button } from 'antd';\nimport DesignerInfoModal from './DesignerInfoModal';\n\nconst DesignerList = props => {\n  const {\n    currentUser,\n    changeUser\n  } = useContext(UserContext);\n  const {\n    designerList\n  } = props;\n  const [showModal, setModalVisibility] = useState(false);\n  const [currentDesigner, setCurrentDesigner] = useState(undefined);\n\n  const onMoreInfo = userAndGrade => {\n    setCurrentDesigner(userAndGrade);\n    setModalVisibility(true);\n  };\n\n  const onConnect = async designerId => {\n    const comm = await createCommunication(designerId, currentUser.id);\n    setModalVisibility(false);\n    const newUser = { ...currentUser,\n      communications: [...currentUser.communications, comm.id]\n    };\n    changeUser(newUser);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DesignerInfoModal, {\n    visible: showModal,\n    info: currentDesigner,\n    onConnect: onConnect\n  }), /*#__PURE__*/React.createElement(List, {\n    style: {\n      width: '100%'\n    },\n    dataSource: designerList,\n    bordered: true,\n    renderItem: userAndGrade => {\n      console.log(userAndGrade);\n      const {\n        designer,\n        grade\n      } = userAndGrade;\n      return /*#__PURE__*/React.createElement(List.Item, null, /*#__PURE__*/React.createElement(List.Item.Meta, {\n        title: designer.firstName + \" \" + designer.lastName,\n        description: \"Score: \" + grade.score\n      }), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => onMoreInfo(userAndGrade)\n      }, \"More Info\"));\n    }\n  }));\n};\n\nexport default DesignerList;","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel-client/components/Dashboard/Employer/DesignerList.tsx"],"names":["React","useContext","useState","createCommunication","UserContext","List","Button","DesignerInfoModal","DesignerList","props","currentUser","changeUser","designerList","showModal","setModalVisibility","currentDesigner","setCurrentDesigner","undefined","onMoreInfo","userAndGrade","onConnect","designerId","comm","id","newUser","communications","width","console","log","designer","grade","firstName","lastName","score"],"mappings":"AAAA,OAAOA,KAAP,IAA0BC,UAA1B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,SAASC,mBAAT,QAAoC,qBAApC;AAEA,SAAQC,WAAR,QAA0B,2BAA1B;AAGA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,MAA3B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAMA,MAAMC,YAAyC,GAAIC,KAAD,IAAW;AACzD,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAA6BV,UAAU,CAACG,WAAD,CAA7C;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAiBH,KAAvB;AACA,QAAM,CAACI,SAAD,EAAYC,kBAAZ,IAAkCZ,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACa,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,CAAee,SAAf,CAAtD;;AAEA,QAAMC,UAAU,GAAIC,YAAD,IAAgC;AAC/CH,IAAAA,kBAAkB,CAACG,YAAD,CAAlB;AACAL,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,GAHD;;AAKA,QAAMM,SAAS,GAAG,MAAOC,UAAP,IAA8B;AAC5C,UAAMC,IAAI,GAAG,MAAMnB,mBAAmB,CAACkB,UAAD,EAAaX,WAAW,CAACa,EAAzB,CAAtC;AACAT,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACA,UAAMU,OAAO,GAAG,EAAC,GAAGd,WAAJ;AAAiBe,MAAAA,cAAc,EAAE,CAAC,GAAGf,WAAW,CAACe,cAAhB,EAAgCH,IAAI,CAACC,EAArC;AAAjC,KAAhB;AACAZ,IAAAA,UAAU,CAACa,OAAD,CAAV;AACH,GALD;;AAOA,sBACI,uDACI,oBAAC,iBAAD;AAAmB,IAAA,OAAO,EAAEX,SAA5B;AACmB,IAAA,IAAI,EAAEE,eADzB;AAEmB,IAAA,SAAS,EAAEK;AAF9B,IADJ,eAII,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE;AAACM,MAAAA,KAAK,EAAE;AAAR,KADX;AAEI,IAAA,UAAU,EAAEd,YAFhB;AAGI,IAAA,QAAQ,MAHZ;AAII,IAAA,UAAU,EAAGO,YAAD,IAAkB;AAC1BQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,YAAZ;AACA,YAAM;AAACU,QAAAA,QAAD;AAAWC,QAAAA;AAAX,UAAoBX,YAA1B;AACA,0BACI,oBAAC,IAAD,CAAM,IAAN,qBACI,oBAAC,IAAD,CAAM,IAAN,CAAW,IAAX;AAAgB,QAAA,KAAK,EAAEU,QAAQ,CAACE,SAAT,GAAqB,GAArB,GAA2BF,QAAQ,CAACG,QAA3D;AAAqE,QAAA,WAAW,EAAE,YAAYF,KAAK,CAACG;AAApG,QADJ,eAEI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAMf,UAAU,CAACC,YAAD;AAAjC,qBAFJ,CADJ;AAQH;AAfL,IAJJ,CADJ;AAuBH,CAzCD;;AA2CA,eAAeX,YAAf","sourcesContent":["import React, {useEffect, useContext, useState} from 'react'\nimport { createCommunication } from '../../../lib/server'\nimport { UserAndGrade, Employer } from '../../../model/model'\nimport {UserContext} from '../../../lib/UserProvider'\nimport {Container} from '../../General/Container'\nimport Loading from '../../General/Loading'\nimport {List, Button} from 'antd'\nimport DesignerInfoModal from './DesignerInfoModal'\n\ninterface DesignerListProps {\n    designerList: UserAndGrade[]\n}\n\nconst DesignerList: React.FC<DesignerListProps> = (props) => {\n    const {currentUser, changeUser}  = useContext(UserContext)\n    const {designerList} = props\n    const [showModal, setModalVisibility] = useState(false) \n    const [currentDesigner, setCurrentDesigner] = useState<UserAndGrade>(undefined) \n\n    const onMoreInfo = (userAndGrade: UserAndGrade) => {\n        setCurrentDesigner(userAndGrade)\n        setModalVisibility(true)\n    }\n\n    const onConnect = async (designerId: string) => {\n        const comm = await createCommunication(designerId, currentUser.id)\n        setModalVisibility(false)\n        const newUser = {...currentUser, communications: [...currentUser.communications, comm.id]}\n        changeUser(newUser)\n    }\n\n    return (\n        <>\n            <DesignerInfoModal visible={showModal}\n                               info={currentDesigner}\n                               onConnect={onConnect}/>\n            <List\n                style={{width: '100%'}}\n                dataSource={designerList}\n                bordered\n                renderItem={(userAndGrade) => {\n                    console.log(userAndGrade)\n                    const {designer, grade} = userAndGrade\n                    return (\n                        <List.Item>\n                            <List.Item.Meta title={designer.firstName + \" \" + designer.lastName} description={\"Score: \" + grade.score}/>\n                            <Button onClick={() => onMoreInfo(userAndGrade)}>\n                                More Info\n                            </Button>\n                        </List.Item>\n                    )\n                }}\n            />\n        </>)\n}\n\nexport default DesignerList"]},"metadata":{},"sourceType":"module"}