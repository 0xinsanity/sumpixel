{"ast":null,"code":"const SERVER_BASE = 'https://sumpixel-server.herokuapp.com/';\n\nasync function request(url, params, method = 'GET') {\n  const options = {\n    method,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  if (params) {\n    if (method === 'GET') {\n      url += '?' + objectToQueryString(params);\n    } else {\n      options[\"body\"] = JSON.stringify(params);\n    }\n  }\n\n  const response = await fetch(SERVER_BASE + url, options);\n\n  if (response.status !== 200) {\n    return generateErrorResponse('The server responded with an unexpected status.');\n  }\n\n  const result = await response.json();\n  return result;\n}\n\nfunction objectToQueryString(obj) {\n  return Object.keys(obj).map(key => key + '=' + obj[key]).join('&');\n}\n\nfunction generateErrorResponse(message) {\n  return {\n    status: 'error',\n    message\n  };\n}\n\nexport const didCompleteQuiz = async id => {\n  return await request('user-finished-quiz', {\n    id: id\n  });\n};","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel-client/lib/server.tsx"],"names":["SERVER_BASE","request","url","params","method","options","headers","objectToQueryString","JSON","stringify","response","fetch","status","generateErrorResponse","result","json","obj","Object","keys","map","key","join","message","didCompleteQuiz","id"],"mappings":"AAAA,MAAMA,WAAW,GAAG,wCAApB;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,MAA5B,EAAoCC,MAAM,GAAG,KAA7C,EAAoD;AAElD,QAAMC,OAAO,GAAG;AACdD,IAAAA,MADc;AAEdE,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAFK,GAAhB;;AAOA,MAAIH,MAAJ,EAAY;AACV,QAAIC,MAAM,KAAK,KAAf,EAAsB;AACpBF,MAAAA,GAAG,IAAI,MAAMK,mBAAmB,CAACJ,MAAD,CAAhC;AACD,KAFD,MAEO;AACLE,MAAAA,OAAO,CAAC,MAAD,CAAP,GAAkBG,IAAI,CAACC,SAAL,CAAeN,MAAf,CAAlB;AACD;AACF;;AAED,QAAMO,QAAQ,GAAG,MAAMC,KAAK,CAACX,WAAW,GAAGE,GAAf,EAAoBG,OAApB,CAA5B;;AAEA,MAAIK,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,WAAOC,qBAAqB,CAAC,iDAAD,CAA5B;AACD;;AAED,QAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAArB;AAEA,SAAOD,MAAP;AAED;;AAED,SAASP,mBAAT,CAA6BS,GAA7B,EAAkC;AAChC,SAAOC,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBG,GAAjB,CAAqBC,GAAG,IAAIA,GAAG,GAAG,GAAN,GAAYJ,GAAG,CAACI,GAAD,CAA3C,EAAkDC,IAAlD,CAAuD,GAAvD,CAAP;AACD;;AAED,SAASR,qBAAT,CAA+BS,OAA/B,EAAwC;AACtC,SAAO;AACLV,IAAAA,MAAM,EAAG,OADJ;AAELU,IAAAA;AAFK,GAAP;AAID;;AAED,OAAO,MAAMC,eAAe,GAAG,MAAOC,EAAP,IAAsB;AACjD,SAAO,MAAMvB,OAAO,CAAC,oBAAD,EAAuB;AAACuB,IAAAA,EAAE,EAAEA;AAAL,GAAvB,CAApB;AACH,CAFM","sourcesContent":["const SERVER_BASE = 'https://sumpixel-server.herokuapp.com/'\n\nasync function request(url, params, method = 'GET') {\n\n  const options = {\n    method,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  if (params) {\n    if (method === 'GET') {\n      url += '?' + objectToQueryString(params);\n    } else {\n      options[\"body\"] = JSON.stringify(params);\n    }\n  }\n\n  const response = await fetch(SERVER_BASE + url, options);\n\n  if (response.status !== 200) {\n    return generateErrorResponse('The server responded with an unexpected status.');\n  }\n\n  const result = await response.json();\n\n  return result;\n\n}\n\nfunction objectToQueryString(obj) {\n  return Object.keys(obj).map(key => key + '=' + obj[key]).join('&');\n}\n\nfunction generateErrorResponse(message) {\n  return {\n    status : 'error',\n    message\n  };\n}\n\nexport const didCompleteQuiz = async (id: string) => {\n    return await request('user-finished-quiz', {id: id})\n}"]},"metadata":{},"sourceType":"module"}