{"ast":null,"code":"import React, { useEffect, useContext } from 'react';\nimport { message } from 'antd';\nimport { myFirebase } from '../lib/firebase';\nimport { UserContext } from '../lib/UserProvider';\nimport Head from 'next/head';\nimport LoginComponent from '../components/Login/LoginComponent';\nimport { LoginBackground } from '../components/Login/LoginFlowContainer';\nimport OpenPage from '../components/General/OpenPage';\nimport firebase from 'firebase';\n\nconst SignUp = props => {\n  const {\n    currentUser,\n    changeUser,\n    loading,\n    setLoading\n  } = useContext(UserContext);\n  useEffect(() => {\n    myFirebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL);\n\n    if (currentUser !== undefined && currentUser !== null) {\n      OpenPage(setLoading, '/onboarding');\n    }\n  }, [currentUser]);\n  useEffect(() => {\n    window.analytics.page('Signup');\n  }, []);\n\n  const onFinish = values => {\n    setLoading(true);\n    myFirebase.auth().createUserWithEmailAndPassword(values.email, values.password).then(() => {\n      myFirebase.auth().currentUser.updateProfile({\n        displayName: `${values.firstName} ${values.lastName}`\n      }).then(() => {\n        window.analytics.track('Firebase Auth Signup');\n        OpenPage(setLoading, '/onboarding');\n      });\n    }).catch(error => {\n      setLoading(false);\n      message.error(error.message);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Head, null, /*#__PURE__*/React.createElement(\"title\", null, \"Sign Up\")), /*#__PURE__*/React.createElement(LoginBackground, null, /*#__PURE__*/React.createElement(LoginComponent, {\n    isSignUp: true,\n    title: \"Sign Up\",\n    onFinish: onFinish\n  })));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel/client/pages/signup.tsx"],"names":["React","useEffect","useContext","message","myFirebase","UserContext","Head","LoginComponent","LoginBackground","OpenPage","firebase","SignUp","props","currentUser","changeUser","loading","setLoading","auth","setPersistence","Auth","Persistence","LOCAL","undefined","window","analytics","page","onFinish","values","createUserWithEmailAndPassword","email","password","then","updateProfile","displayName","firstName","lastName","track","catch","error"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAoCC,UAApC,QAAqD,OAArD;AACA,SAAQC,OAAR,QAAsB,MAAtB;AAEA,SAAQC,UAAR,QAAyB,iBAAzB;AAEA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,eAAT,QAAgC,wCAAhC;AACA,OAAOC,QAAP,MAAqB,gCAArB;AAEA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,MAAgB,GAAIC,KAAD,IAAW;AAChC,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA,UAAd;AAA0BC,IAAAA,OAA1B;AAAmCC,IAAAA;AAAnC,MAAiDd,UAAU,CAACG,WAAD,CAAjE;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,UAAU,CAACa,IAAX,GAAkBC,cAAlB,CAAiCR,QAAQ,CAACO,IAAT,CAAcE,IAAd,CAAmBC,WAAnB,CAA+BC,KAAhE;;AACA,QAAIR,WAAW,KAAKS,SAAhB,IAA6BT,WAAW,KAAK,IAAjD,EAAuD;AACnDJ,MAAAA,QAAQ,CAACO,UAAD,EAAa,aAAb,CAAR;AACH;AACJ,GALQ,EAKN,CAACH,WAAD,CALM,CAAT;AAOAZ,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,MAAM,CAACC,SAAP,CAAiBC,IAAjB,CAAsB,QAAtB;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,QAAQ,GAAIC,MAAD,IAAY;AACzBX,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAZ,IAAAA,UAAU,CAACa,IAAX,GAAkBW,8BAAlB,CAAiDD,MAAM,CAACE,KAAxD,EAA+DF,MAAM,CAACG,QAAtE,EAAgFC,IAAhF,CAAqF,MAAM;AACvF3B,MAAAA,UAAU,CAACa,IAAX,GAAkBJ,WAAlB,CAA8BmB,aAA9B,CAA4C;AACxCC,QAAAA,WAAW,EAAG,GAAEN,MAAM,CAACO,SAAU,IAAGP,MAAM,CAACQ,QAAS;AADZ,OAA5C,EAEGJ,IAFH,CAEQ,MAAM;AACVR,QAAAA,MAAM,CAACC,SAAP,CAAiBY,KAAjB,CAAuB,sBAAvB;AACA3B,QAAAA,QAAQ,CAACO,UAAD,EAAa,aAAb,CAAR;AACH,OALD;AAMH,KAPD,EAOGqB,KAPH,CAOUC,KAAD,IAAW;AAChBtB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAb,MAAAA,OAAO,CAACmC,KAAR,CAAcA,KAAK,CAACnC,OAApB;AACH,KAVD;AAWH,GAbD;;AAeA,sBACI,uDACI,oBAAC,IAAD,qBACI,6CADJ,CADJ,eAII,oBAAC,eAAD,qBACI,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAE,IAA1B;AAAgC,IAAA,KAAK,EAAC,SAAtC;AAAgD,IAAA,QAAQ,EAAEuB;AAA1D,IADJ,CAJJ,CADJ;AAUH,CAtCD;;AAwCA,eAAef,MAAf","sourcesContent":["import React, {useEffect, useState, useContext} from 'react'\nimport {message} from 'antd'\nimport {PopupModal} from '../components/General/PopupModal';\nimport {myFirebase} from '../lib/firebase'\nimport {Onboard} from '../components/OnboardingFlow/Onboard'\nimport { UserContext } from '../lib/UserProvider';\nimport Head from 'next/head'\nimport LoginComponent from '../components/Login/LoginComponent'\nimport { LoginBackground } from '../components/Login/LoginFlowContainer'\nimport OpenPage from '../components/General/OpenPage'\nimport Router from 'next/router'\nimport firebase from 'firebase'\n\nconst SignUp: React.FC = (props) => {\n    const {currentUser, changeUser, loading, setLoading} = useContext(UserContext)\n    useEffect(() => {\n        myFirebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL)\n        if (currentUser !== undefined && currentUser !== null) {\n            OpenPage(setLoading, '/onboarding')\n        }\n    }, [currentUser])\n\n    useEffect(() => {\n        window.analytics.page('Signup')\n    }, [])\n\n    const onFinish = (values) => {\n        setLoading(true)\n        myFirebase.auth().createUserWithEmailAndPassword(values.email, values.password).then(() => {\n            myFirebase.auth().currentUser.updateProfile({\n                displayName: `${values.firstName} ${values.lastName}`\n            }).then(() => {\n                window.analytics.track('Firebase Auth Signup');\n                OpenPage(setLoading, '/onboarding')\n            })\n        }).catch((error) => {\n            setLoading(false)\n            message.error(error.message)\n        })\n    }\n\n    return (\n        <>\n            <Head>\n                <title>Sign Up</title>\n            </Head>\n            <LoginBackground>\n                <LoginComponent isSignUp={true} title=\"Sign Up\" onFinish={onFinish}/>\n            </LoginBackground>\n        </>\n    );\n};\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}