{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, createContext } from \"react\";\nimport { myFirebase } from \"./firebase\";\nimport { getEmployer, getUser } from './server';\nimport Router from \"next/router\";\nimport Loading from '../components/General/Loading';\nexport const UserContext = createContext({\n  currentUser: null,\n  changeUser: () => {}\n});\n\nclass UserProvider extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"changeUser\", newUser => {\n      this.setState({\n        currentUser: newUser,\n        loading: false\n      });\n    });\n\n    _defineProperty(this, \"state\", {\n      loading: false,\n      currentUser: null,\n      changeUser: this.changeUser\n    });\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      myFirebase.auth().onAuthStateChanged(async userAuth => {\n        this.setState({\n          loading: true\n        });\n\n        if (userAuth === null) {\n          this.setState({\n            loading: false\n          });\n          return;\n        }\n\n        if (userAuth.isAnonymous) {\n          console.log('userauth:' + userAuth);\n          this.changeUser({\n            firstName: '',\n            lastName: '',\n            email: '',\n            id: userAuth.uid,\n            isAnonymous: true\n          });\n          return;\n        } // This is some of the worst code I've ever made\n\n\n        var current;\n\n        try {\n          current = await getUser(userAuth.uid);\n        } catch (error) {\n          try {\n            current = await getEmployer(userAuth.uid);\n            current[\"user_exists\"] = false;\n          } catch (error) {\n            console.log(\"this better be a new user\");\n          }\n        }\n\n        if (current !== undefined && current['user_exists'] === undefined) {\n          this.changeUser(current);\n          window.analytics.identify(current.id, {\n            name: current.name,\n            email: current.email\n          });\n          Router.replace('/dashboard_user');\n        } else if (current !== undefined && current['employer_exists'] === undefined) {\n          window.analytics.identify(current.id, {\n            name: current.name,\n            email: current.email\n          });\n          this.changeUser(current);\n          Router.push('/dashboard_employer');\n        } else {\n          // TODO: Find alternate way to wait until names are updated\n          // Works for both\n          setTimeout(() => {\n            if (userAuth.email === undefined && userAuth.isAnonymous === false) {\n              // something's wrong\n              this.changeUser(undefined);\n              return;\n            }\n\n            this.changeUser({\n              email: userAuth.email,\n              id: userAuth.uid,\n              firstName: userAuth.displayName.substr(0, userAuth.displayName.indexOf(' ')),\n              lastName: userAuth.displayName.substr(userAuth.displayName.indexOf(' ') + 1)\n            });\n          }, 500);\n        }\n      });\n    });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/React.createElement(Loading, null);\n    }\n\n    return /*#__PURE__*/React.createElement(UserContext.Provider, {\n      value: this.state\n    }, this.props.children);\n  }\n\n}\n\nexport default UserProvider;","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel/client/lib/UserProvider.tsx"],"names":["React","Component","createContext","myFirebase","getEmployer","getUser","Router","Loading","UserContext","currentUser","changeUser","UserProvider","newUser","setState","loading","auth","onAuthStateChanged","userAuth","isAnonymous","console","log","firstName","lastName","email","id","uid","current","error","undefined","window","analytics","identify","name","replace","push","setTimeout","displayName","substr","indexOf","render","state","props","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,QAAgD,OAAhD;AACA,SAASC,UAAT,QAA2B,YAA3B;AAEA,SAAQC,WAAR,EAAqBC,OAArB,QAAmC,UAAnC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAOC,OAAP,MAAoB,+BAApB;AAOA,OAAO,MAAMC,WAAW,GAAGN,aAAa,CAAwB;AAC5DO,EAAAA,WAAW,EAAE,IAD+C;AAE5DC,EAAAA,UAAU,EAAE,MAAM,CAAE;AAFwC,CAAxB,CAAjC;;AAIP,MAAMC,YAAN,SAA2BV,SAA3B,CAAqC;AAAA;AAAA;;AAAA,wCACrBW,OAAD,IAAqC;AAC9C,WAAKC,QAAL,CAAc;AAACJ,QAAAA,WAAW,EAAEG,OAAd;AAAuBE,QAAAA,OAAO,EAAE;AAAhC,OAAd;AACH,KAHkC;;AAAA,mCAK3B;AACNA,MAAAA,OAAO,EAAE,KADH;AAENL,MAAAA,WAAW,EAAE,IAFP;AAGNC,MAAAA,UAAU,EAAE,KAAKA;AAHX,KAL2B;;AAAA,+CAWf,MAAM;AACxBP,MAAAA,UAAU,CAACY,IAAX,GAAkBC,kBAAlB,CAAqC,MAAOC,QAAP,IAAoB;AACrD,aAAKJ,QAAL,CAAc;AAACC,UAAAA,OAAO,EAAE;AAAV,SAAd;;AACA,YAAIG,QAAQ,KAAK,IAAjB,EAAuB;AACnB,eAAKJ,QAAL,CAAc;AAACC,YAAAA,OAAO,EAAE;AAAV,WAAd;AACA;AACH;;AAED,YAAIG,QAAQ,CAACC,WAAb,EAA0B;AACxBC,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAcH,QAA1B;AACA,eAAKP,UAAL,CAAgB;AACdW,YAAAA,SAAS,EAAE,EADG;AAEdC,YAAAA,QAAQ,EAAE,EAFI;AAGdC,YAAAA,KAAK,EAAE,EAHO;AAIdC,YAAAA,EAAE,EAAEP,QAAQ,CAACQ,GAJC;AAKdP,YAAAA,WAAW,EAAE;AALC,WAAhB;AAOA;AACD,SAjBoD,CAmBrD;;;AACA,YAAIQ,OAAJ;;AACA,YAAI;AACFA,UAAAA,OAAO,GAAG,MAAMrB,OAAO,CAACY,QAAQ,CAACQ,GAAV,CAAvB;AACD,SAFD,CAEE,OAAOE,KAAP,EAAc;AACd,cAAI;AACFD,YAAAA,OAAO,GAAG,MAAMtB,WAAW,CAACa,QAAQ,CAACQ,GAAV,CAA3B;AACAC,YAAAA,OAAO,CAAC,aAAD,CAAP,GAAyB,KAAzB;AACD,WAHD,CAGE,OAAOC,KAAP,EAAc;AACdR,YAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD;AACF;;AAED,YAAIM,OAAO,KAAKE,SAAZ,IAAyBF,OAAO,CAAC,aAAD,CAAP,KAA2BE,SAAxD,EAAmE;AAC/D,eAAKlB,UAAL,CAAgBgB,OAAhB;AACAG,UAAAA,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BL,OAAO,CAACF,EAAlC,EAAsC;AACpCQ,YAAAA,IAAI,EAAEN,OAAO,CAACM,IADsB;AAEpCT,YAAAA,KAAK,EAAEG,OAAO,CAACH;AAFqB,WAAtC;AAIAjB,UAAAA,MAAM,CAAC2B,OAAP,CAAe,iBAAf;AACH,SAPD,MAOO,IAAIP,OAAO,KAAKE,SAAZ,IAAyBF,OAAO,CAAC,iBAAD,CAAP,KAA+BE,SAA5D,EAAuE;AAC1EC,UAAAA,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BL,OAAO,CAACF,EAAlC,EAAsC;AACpCQ,YAAAA,IAAI,EAAEN,OAAO,CAACM,IADsB;AAEpCT,YAAAA,KAAK,EAAEG,OAAO,CAACH;AAFqB,WAAtC;AAIA,eAAKb,UAAL,CAAgBgB,OAAhB;AACApB,UAAAA,MAAM,CAAC4B,IAAP,CAAY,qBAAZ;AACH,SAPM,MAOA;AACH;AACA;AACAC,UAAAA,UAAU,CAAC,MAAM;AACf,gBAAIlB,QAAQ,CAACM,KAAT,KAAmBK,SAAnB,IAAgCX,QAAQ,CAACC,WAAT,KAAyB,KAA7D,EAAoE;AAClE;AACA,mBAAKR,UAAL,CAAgBkB,SAAhB;AACA;AACD;;AACD,iBAAKlB,UAAL,CAAgB;AACZa,cAAAA,KAAK,EAAEN,QAAQ,CAACM,KADJ;AAEZC,cAAAA,EAAE,EAAEP,QAAQ,CAACQ,GAFD;AAGZJ,cAAAA,SAAS,EAAEJ,QAAQ,CAACmB,WAAT,CAAqBC,MAArB,CAA4B,CAA5B,EAA+BpB,QAAQ,CAACmB,WAAT,CAAqBE,OAArB,CAA6B,GAA7B,CAA/B,CAHC;AAIZhB,cAAAA,QAAQ,EAAEL,QAAQ,CAACmB,WAAT,CAAqBC,MAArB,CAA4BpB,QAAQ,CAACmB,WAAT,CAAqBE,OAArB,CAA6B,GAA7B,IAAkC,CAA9D;AAJE,aAAhB;AAMD,WAZS,EAYP,GAZO,CAAV;AAcH;AACJ,OAhED;AAiED,KA7EkC;AAAA;;AA8EnCC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKC,KAAL,CAAW1B,OAAf,EAAwB;AACtB,0BAAQ,oBAAC,OAAD,OAAR;AACD;;AAED,wBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE,KAAK0B;AAAlC,OACG,KAAKC,KAAL,CAAWC,QADd,CADF;AAKD;;AAxFkC;;AA0FrC,eAAe/B,YAAf","sourcesContent":["import React, { Component, createContext } from \"react\";\nimport { myFirebase } from \"./firebase\";\nimport {User, Employer} from '../model/model'\nimport {getEmployer, getUser} from './server'\nimport Router from \"next/router\";\nimport {message} from 'antd'\nimport Loading from '../components/General/Loading'\n\ninterface ContextProps {\n    currentUser: User | Employer | null,\n    changeUser: (newUser: User | Employer | null) => void\n}\n\nexport const UserContext = createContext<Partial<ContextProps>>({\n    currentUser: null,\n    changeUser: () => {}\n});\nclass UserProvider extends Component {\n  changeUser = (newUser: User | Employer | null) => {\n      this.setState({currentUser: newUser, loading: false})\n  }\n\n  state = {\n    loading: false,\n    currentUser: null,\n    changeUser: this.changeUser\n  };\n\n  componentDidMount = () => {\n    myFirebase.auth().onAuthStateChanged(async (userAuth) => {\n        this.setState({loading: true})\n        if (userAuth === null) {\n            this.setState({loading: false})\n            return\n        }\n\n        if (userAuth.isAnonymous) {\n          console.log('userauth:' + userAuth)\n          this.changeUser({\n            firstName: '',\n            lastName: '',\n            email: '',\n            id: userAuth.uid,\n            isAnonymous: true\n          } as Employer)\n          return\n        }\n\n        // This is some of the worst code I've ever made\n        var current;\n        try {\n          current = await getUser(userAuth.uid)\n        } catch (error) {\n          try {\n            current = await getEmployer(userAuth.uid)\n            current[\"user_exists\"] = false\n          } catch (error) {\n            console.log(\"this better be a new user\")\n          }\n        }\n\n        if (current !== undefined && current['user_exists'] === undefined) {\n            this.changeUser(current as User)\n            window.analytics.identify(current.id, {\n              name: current.name,\n              email: current.email\n            });\n            Router.replace('/dashboard_user')\n        } else if (current !== undefined && current['employer_exists'] === undefined) {\n            window.analytics.identify(current.id, {\n              name: current.name,\n              email: current.email\n            });\n            this.changeUser(current as Employer)\n            Router.push('/dashboard_employer')\n        } else {\n            // TODO: Find alternate way to wait until names are updated\n            // Works for both\n            setTimeout(() => {\n              if (userAuth.email === undefined && userAuth.isAnonymous === false) {\n                // something's wrong\n                this.changeUser(undefined)\n                return\n              }\n              this.changeUser({\n                  email: userAuth.email,\n                  id: userAuth.uid,\n                  firstName: userAuth.displayName.substr(0, userAuth.displayName.indexOf(' ')),\n                  lastName: userAuth.displayName.substr(userAuth.displayName.indexOf(' ')+1),\n              })\n            }, 500)\n            \n        }\n    });\n  };\n  render() {\n    if (this.state.loading) {\n      return (<Loading/>)\n    }\n\n    return (\n      <UserContext.Provider value={this.state}>\n        {this.props.children}\n      </UserContext.Provider>\n    );\n  }\n}\nexport default UserProvider;"]},"metadata":{},"sourceType":"module"}