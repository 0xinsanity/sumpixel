{"ast":null,"code":"import React from 'react';\nimport { DesignerDecisionTalk, EmployerDecisionHire } from '../../../model/model';\nimport { Popconfirm, Typography, Table, Radio } from 'antd';\nconst {\n  Column\n} = Table;\n\nconst CommunicationsList = props => {\n  const {\n    communicationList,\n    updateDesignerText\n  } = props;\n\n  const decisionToText = dec => {\n    switch (dec) {\n      case EmployerDecisionHire.UNDECIDED:\n        return `Reviewing your profile`;\n\n      case EmployerDecisionHire.HIRE:\n        return `Wants to hire you`;\n\n      case EmployerDecisionHire.REJECT:\n        return `Rejected your profile`;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Table, {\n    style: {\n      paddingBottom: 10,\n      width: '100%',\n      fontFamily: 'Mark Pro Bold',\n      fontWeight: 'normal'\n    },\n    size: \"large\",\n    dataSource: communicationList,\n    bordered: false,\n    pagination: {\n      defaultPageSize: 10\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    width: '35%',\n    title: \"Company Name\",\n    dataIndex: \"companyName\",\n    key: \"companyName\"\n  }), /*#__PURE__*/React.createElement(Column, {\n    title: \"Company Status\",\n    dataIndex: \"decision\",\n    key: \"decision\",\n    render: text => /*#__PURE__*/React.createElement(Typography.Text, {\n      style: {\n        color: '#000'\n      }\n    }, decisionToText(text))\n  }), /*#__PURE__*/React.createElement(Column, {\n    align: 'right',\n    title: \"Decision\",\n    dataIndex: \"designerApprovedTalk\",\n    key: \"designerApprovedTalk\",\n    render: (text, record, index) => /*#__PURE__*/React.createElement(Popconfirm, {\n      title: \"Are you sure?\"\n    }, /*#__PURE__*/React.createElement(Radio.Group, {\n      onChange: e => updateDesignerText(communicationList[index].communicationId, e.target.value),\n      value: text\n    }, /*#__PURE__*/React.createElement(Radio.Button, {\n      value: DesignerDecisionTalk.UNDECIDED\n    }, \"Undecided\"), /*#__PURE__*/React.createElement(Radio.Button, {\n      value: DesignerDecisionTalk.WILL_TALK\n    }, \"Will Talk\"), /*#__PURE__*/React.createElement(Radio.Button, {\n      value: DesignerDecisionTalk.WILL_NOT_TALK\n    }, \"Will Not Talk\")))\n  }));\n};\n\nexport default CommunicationsList;","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel/client/components/Dashboard/Designer/CommunicationsList.tsx"],"names":["React","DesignerDecisionTalk","EmployerDecisionHire","Popconfirm","Typography","Table","Radio","Column","CommunicationsList","props","communicationList","updateDesignerText","decisionToText","dec","UNDECIDED","HIRE","REJECT","paddingBottom","width","fontFamily","fontWeight","defaultPageSize","text","color","record","index","e","communicationId","target","value","WILL_TALK","WILL_NOT_TALK"],"mappings":"AAAA,OAAOA,KAAP,MAAgC,OAAhC;AAIA,SAAcC,oBAAd,EAAoCC,oBAApC,QAAgF,sBAAhF;AACA,SAAQC,UAAR,EAAoBC,UAApB,EAAgCC,KAAhC,EAAuCC,KAAvC,QAAmD,MAAnD;AACA,MAAM;AAACC,EAAAA;AAAD,IAAWF,KAAjB;;AAOA,MAAMG,kBAAqD,GAAIC,KAAD,IAAW;AACrE,QAAM;AAACC,IAAAA,iBAAD;AAAoBC,IAAAA;AAApB,MAA0CF,KAAhD;;AAEA,QAAMG,cAAc,GAAIC,GAAD,IAAuC;AAC1D,YAAQA,GAAR;AACI,WAAKX,oBAAoB,CAACY,SAA1B;AACI,eAAQ,wBAAR;;AACJ,WAAKZ,oBAAoB,CAACa,IAA1B;AACI,eAAQ,mBAAR;;AACJ,WAAKb,oBAAoB,CAACc,MAA1B;AACI,eAAQ,uBAAR;AANR;AAQH,GATD;;AAWA,sBACI,oBAAC,KAAD;AACI,IAAA,KAAK,EAAE;AAACC,MAAAA,aAAa,EAAE,EAAhB;AAAoBC,MAAAA,KAAK,EAAE,MAA3B;AAAmCC,MAAAA,UAAU,EAAE,eAA/C;AAAgEC,MAAAA,UAAU,EAAE;AAA5E,KADX;AAEI,IAAA,IAAI,EAAE,OAFV;AAGI,IAAA,UAAU,EAAEV,iBAHhB;AAII,IAAA,QAAQ,EAAE,KAJd;AAKI,IAAA,UAAU,EAAE;AAACW,MAAAA,eAAe,EAAE;AAAlB;AALhB,kBAOI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,KAAf;AAAsB,IAAA,KAAK,EAAC,cAA5B;AAA2C,IAAA,SAAS,EAAC,aAArD;AAAmE,IAAA,GAAG,EAAC;AAAvE,IAPJ,eAQI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,gBAAd;AAA+B,IAAA,SAAS,EAAC,UAAzC;AAAoD,IAAA,GAAG,EAAC,UAAxD;AAAmE,IAAA,MAAM,EAAGC,IAAD,iBACvE,oBAAC,UAAD,CAAY,IAAZ;AAAiB,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR;AAAxB,OAA0CX,cAAc,CAACU,IAAD,CAAxD;AADJ,IARJ,eAWI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,OAAf;AAAwB,IAAA,KAAK,EAAC,UAA9B;AAAyC,IAAA,SAAS,EAAC,sBAAnD;AAA0E,IAAA,GAAG,EAAC,sBAA9E;AAAqG,IAAA,MAAM,EAAE,CAACA,IAAD,EAAOE,MAAP,EAAeC,KAAf,kBACzG,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAAnB,oBACI,oBAAC,KAAD,CAAO,KAAP;AAAa,MAAA,QAAQ,EAAGC,CAAD,IAAOf,kBAAkB,CAACD,iBAAiB,CAACe,KAAD,CAAjB,CAAyBE,eAA1B,EAA2CD,CAAC,CAACE,MAAF,CAASC,KAApD,CAAhD;AAA4G,MAAA,KAAK,EAAEP;AAAnH,oBACI,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,KAAK,EAAErB,oBAAoB,CAACa;AAA1C,mBADJ,eAEI,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,KAAK,EAAEb,oBAAoB,CAAC6B;AAA1C,mBAFJ,eAGI,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,KAAK,EAAE7B,oBAAoB,CAAC8B;AAA1C,uBAHJ,CADJ;AADJ,IAXJ,CADJ;AAuBH,CArCD;;AAuCA,eAAevB,kBAAf","sourcesContent":["import React, {useContext} from 'react'\nimport {UserContext} from '../../../lib/UserProvider'\nimport QuizScreen from '../../OnboardingFlow/Designers/QuizScreen'\nimport {createUser} from '../../../lib/server'\nimport {User, DesignerDecisionTalk, EmployerDecisionHire, CommForDesigner} from '../../../model/model'\nimport {Popconfirm, Typography, Table, Radio} from 'antd'\nconst {Column} = Table\n\ninterface CommunicationsListProps {\n    communicationList: CommForDesigner[]\n    updateDesignerText: (commId: string, update: DesignerDecisionTalk) => void\n}\n\nconst CommunicationsList: React.FC<CommunicationsListProps> = (props) => {\n    const {communicationList, updateDesignerText} = props\n\n    const decisionToText = (dec: EmployerDecisionHire): string => {\n        switch (dec) {\n            case EmployerDecisionHire.UNDECIDED:\n                return `Reviewing your profile`\n            case EmployerDecisionHire.HIRE:\n                return `Wants to hire you`\n            case EmployerDecisionHire.REJECT:\n                return `Rejected your profile`\n        }\n    }\n\n    return (\n        <Table\n            style={{paddingBottom: 10, width: '100%', fontFamily: 'Mark Pro Bold', fontWeight: 'normal'}}\n            size={\"large\"}\n            dataSource={communicationList}\n            bordered={false}\n            pagination={{defaultPageSize: 10}}\n        >\n            <Column width={'35%'} title=\"Company Name\" dataIndex=\"companyName\" key=\"companyName\" />\n            <Column title=\"Company Status\" dataIndex=\"decision\" key=\"decision\" render={(text) => (\n                <Typography.Text style={{color: '#000'}}>{decisionToText(text)}</Typography.Text>\n            )}/>\n            <Column align={'right'} title=\"Decision\" dataIndex=\"designerApprovedTalk\" key=\"designerApprovedTalk\" render={(text, record, index) => (\n                <Popconfirm title={\"Are you sure?\"}>\n                    <Radio.Group onChange={(e) => updateDesignerText(communicationList[index].communicationId, e.target.value)} value={text}>\n                        <Radio.Button value={DesignerDecisionTalk.UNDECIDED}>Undecided</Radio.Button>\n                        <Radio.Button value={DesignerDecisionTalk.WILL_TALK}>Will Talk</Radio.Button>\n                        <Radio.Button value={DesignerDecisionTalk.WILL_NOT_TALK}>Will Not Talk</Radio.Button>\n                    </Radio.Group>\n                </Popconfirm> \n            )} />\n        </Table>\n    )\n}\n\nexport default CommunicationsList"]},"metadata":{},"sourceType":"module"}