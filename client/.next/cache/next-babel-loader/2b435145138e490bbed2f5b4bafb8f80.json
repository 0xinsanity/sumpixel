{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport { OnboardNavbar, NavBarStatus } from './OnboardNavbar';\nimport { Container } from './Container';\nimport { Typography } from 'antd';\nimport { myFirebase } from \"../lib/firebase\";\nimport FormPersonalData from './OnboardingFlow/FormPersonalData';\nimport QuizScreen from './OnboardingFlow/QuizScreen';\nimport EmployerDesigner from './OnboardingFlow/EmployerDesigner';\nimport styled from 'styled-components';\nimport { getUser, createUser } from '../lib/server';\nconst Title = styled(Typography.Title).withConfig({\n  displayName: \"Onboard__Title\",\n  componentId: \"sc-1f8dn92-0\"\n})([\"padding-top:15px;padding-bottom:35px;\"]);\nexport const Onboard = props => {\n  const [currentStep, changeStep] = useState(0);\n  const [navBarStatus, changeNavbarStatus] = useState(NavBarStatus.Undecided);\n  const [currentUser, changeUser] = useState(undefined);\n  useEffect(() => {\n    async function findUser() {\n      const user = await getUser(firebaseUser.uid);\n\n      if (user['user_exists'] === undefined) {\n        changeUser(user);\n        changeStep(2);\n      } else {\n        changeUser({\n          email: firebaseUser.email,\n          id: firebaseUser.uid,\n          firstName: firebaseUser.displayName.substr(0, firebaseUser.displayName.indexOf(' ')),\n          lastName: firebaseUser.displayName.substr(firebaseUser.displayName.indexOf(' ') + 1)\n        });\n      }\n    }\n\n    const firebaseUser = myFirebase.auth().currentUser;\n\n    if (firebaseUser !== null) {\n      findUser();\n    }\n  }, [myFirebase.auth().currentUser]);\n\n  const updateUser = async updatedUser => {\n    changeUser(updatedUser);\n    await createUser(updatedUser);\n  };\n\n  var currentForm;\n  var title;\n\n  switch (currentStep) {\n    case 0:\n      currentForm = /*#__PURE__*/React.createElement(EmployerDesigner, {\n        changeNavbarStatus: newStatus => changeNavbarStatus(newStatus),\n        changeStep: change => changeStep(currentStep + change),\n        currentUser: currentUser,\n        changeCurrentUser: async user => await updateUser(user)\n      });\n      break;\n\n    case 1:\n      currentForm = /*#__PURE__*/React.createElement(FormPersonalData, {\n        changeNavbarStatus: newStatus => changeNavbarStatus(newStatus),\n        changeStep: change => changeStep(currentStep + change),\n        currentUser: currentUser,\n        changeCurrentUser: async user => await updateUser(user)\n      });\n      break;\n\n    case 2:\n      currentForm = /*#__PURE__*/React.createElement(QuizScreen, {\n        changeStep: change => changeStep(currentStep + change),\n        currentUser: currentUser,\n        changeCurrentUser: async user => await updateUser(user)\n      });\n      break;\n  }\n\n  return /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(OnboardNavbar, {\n    currentStep: currentStep,\n    steps: TOTAL_STEPS\n  }), /*#__PURE__*/React.createElement(Title, null, title), currentForm);\n};","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel-client/components/Onboard.tsx"],"names":["React","useEffect","useState","OnboardNavbar","NavBarStatus","Container","Typography","myFirebase","FormPersonalData","QuizScreen","EmployerDesigner","styled","getUser","createUser","Title","Onboard","props","currentStep","changeStep","navBarStatus","changeNavbarStatus","Undecided","currentUser","changeUser","undefined","findUser","user","firebaseUser","uid","email","id","firstName","displayName","substr","indexOf","lastName","auth","updateUser","updatedUser","currentForm","title","newStatus","change","TOTAL_STEPS"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {OnboardNavbar, NavBarStatus} from './OnboardNavbar'\nimport {Container} from './Container'\nimport {Typography} from 'antd'\nimport {User} from '../model/model'\nimport {myFirebase} from \"../lib/firebase\";\nimport FormPersonalData from './OnboardingFlow/FormPersonalData'\nimport QuizScreen from './OnboardingFlow/QuizScreen'\nimport EmployerDesigner from './OnboardingFlow/EmployerDesigner'\nimport styled from 'styled-components'\nimport {getUser, createUser} from '../lib/server'\n\nconst Title = styled(Typography.Title)`\n    padding-top: 15px;\n    padding-bottom: 35px;\n`\n\nexport const Onboard: React.FC<{}> = props => {\n    const [currentStep, changeStep] = useState(0);\n    const [navBarStatus, changeNavbarStatus] = useState<NavBarStatus>(NavBarStatus.Undecided);\n    const [currentUser, changeUser] = useState<User | undefined>(undefined);\n\n    useEffect(() => {\n        async function findUser() {\n            const user = await getUser(firebaseUser.uid)\n\n            if (user['user_exists'] === undefined) {\n                changeUser(user as User);\n                changeStep(2)\n            } else {\n                changeUser({\n                    email: firebaseUser.email,\n                    id: firebaseUser.uid,\n                    firstName: firebaseUser.displayName.substr(0, firebaseUser.displayName.indexOf(' ')),\n                    lastName: firebaseUser.displayName.substr(firebaseUser.displayName.indexOf(' ')+1),\n                });\n            }\n        }\n\n        const firebaseUser = myFirebase.auth().currentUser;\n        if (firebaseUser !== null) {\n            findUser()\n        }\n    }, [myFirebase.auth().currentUser]);\n\n    const updateUser = async (updatedUser: User) => {\n        changeUser(updatedUser)\n        await createUser(updatedUser)\n    }\n\n    var currentForm;\n    var title;\n    switch (currentStep) {\n        case 0:\n            currentForm = <EmployerDesigner \n                                    changeNavbarStatus={(newStatus) => changeNavbarStatus(newStatus)}\n                                    changeStep={(change) => changeStep(currentStep + change)}\n                                    currentUser={currentUser}\n                                    changeCurrentUser={async (user) => await updateUser(user)}/>;\n            break;\n        case 1:\n            currentForm = <FormPersonalData \n                                    changeNavbarStatus={(newStatus) => changeNavbarStatus(newStatus)}\n                                    changeStep={(change) => changeStep(currentStep + change)}\n                                    currentUser={currentUser}\n                                    changeCurrentUser={async (user) => await updateUser(user)}/>;\n            break;\n        case 2:\n            currentForm = <QuizScreen changeStep={(change) => changeStep(currentStep + change)}\n                                 currentUser={currentUser}\n                                 changeCurrentUser={async (user) => await updateUser(user)}/>;\n            break;\n    }\n\n    return (\n        <Container>\n            <OnboardNavbar  currentStep={currentStep} steps={TOTAL_STEPS}/>\n            <Title>{title}</Title>\n            {currentForm}\n        </Container>\n    );\n}"]},"metadata":{},"sourceType":"module"}