{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport { myFirebase } from '../lib/firebase';\nimport { AuthConfig } from '../model/model';\nimport { getUser, getEmployer } from '../lib/server';\n\nconst Index = props => {\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [userEmployer, setUserEmployer] = useState(undefined);\n  useEffect(() => {\n    myFirebase.auth().onAuthStateChanged(user => {\n      if (user != null) {\n        setIsSignedIn(true);\n        setUserEmployer({\n          email: user.email,\n          id: user.uid,\n          firstName: user.displayName.substr(0, user.displayName.indexOf(' ')),\n          lastName: user.displayName.substr(user.displayName.indexOf(' ') + 1)\n        });\n      }\n    });\n  });\n  useEffect(() => {\n    async function findUser() {\n      const user = await getUser(userEmployer.id);\n      const employer = await getEmployer(userEmployer.uid);\n\n      if (user['user_exists'] == undefined) {} else if (employer['employer_exists'] == undefined) {} else {}\n    }\n  }, [isSignedIn]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StyledFirebaseAuth, {\n    uiConfig: AuthConfig,\n    firebaseAuth: myFirebase.auth()\n  }));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel-client/pages/index.tsx"],"names":["React","useEffect","useState","StyledFirebaseAuth","myFirebase","AuthConfig","getUser","getEmployer","Index","props","isSignedIn","setIsSignedIn","userEmployer","setUserEmployer","undefined","auth","onAuthStateChanged","user","email","id","uid","firstName","displayName","substr","indexOf","lastName","findUser","employer"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,SAAQC,UAAR,QAAyB,iBAAzB;AACA,SAAQC,UAAR,QAAyC,gBAAzC;AACA,SAAQC,OAAR,EAAiBC,WAAjB,QAAmC,eAAnC;;AAEA,MAAMC,KAAe,GAAIC,KAAD,IAAW;AAC/B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAA8BY,SAA9B,CAAhD;AACAb,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,UAAU,CAACW,IAAX,GAAkBC,kBAAlB,CAAqCC,IAAI,IAAI;AACzC,UAAIA,IAAI,IAAI,IAAZ,EAAkB;AACdN,QAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,QAAAA,eAAe,CAAC;AACZK,UAAAA,KAAK,EAAED,IAAI,CAACC,KADA;AAEZC,UAAAA,EAAE,EAAEF,IAAI,CAACG,GAFG;AAGZC,UAAAA,SAAS,EAAEJ,IAAI,CAACK,WAAL,CAAiBC,MAAjB,CAAwB,CAAxB,EAA2BN,IAAI,CAACK,WAAL,CAAiBE,OAAjB,CAAyB,GAAzB,CAA3B,CAHC;AAIZC,UAAAA,QAAQ,EAAER,IAAI,CAACK,WAAL,CAAiBC,MAAjB,CAAwBN,IAAI,CAACK,WAAL,CAAiBE,OAAjB,CAAyB,GAAzB,IAA8B,CAAtD;AAJE,SAAD,CAAf;AAMH;AACJ,KAVD;AAWH,GAZQ,CAAT;AAcAvB,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeyB,QAAf,GAA0B;AACtB,YAAMT,IAAI,GAAG,MAAMX,OAAO,CAACM,YAAY,CAACO,EAAd,CAA1B;AACA,YAAMQ,QAAQ,GAAG,MAAMpB,WAAW,CAACK,YAAY,CAACQ,GAAd,CAAlC;;AAEA,UAAIH,IAAI,CAAC,aAAD,CAAJ,IAAuBH,SAA3B,EAAsC,CAErC,CAFD,MAEO,IAAIa,QAAQ,CAAC,iBAAD,CAAR,IAA+Bb,SAAnC,EAA8C,CAEpD,CAFM,MAEA,CAEN;AACJ;AACJ,GAbQ,EAaN,CAACJ,UAAD,CAbM,CAAT;AAeA,sBACI,uDACI,oBAAC,kBAAD;AACI,IAAA,QAAQ,EAAEL,UADd;AAEI,IAAA,YAAY,EAAED,UAAU,CAACW,IAAX;AAFlB,IADJ,CADJ;AAOH,CAvCD;;AAyCA,eAAeP,KAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport {myFirebase} from '../lib/firebase'\nimport {AuthConfig, User, Employer} from '../model/model'\nimport {getUser, getEmployer} from '../lib/server'\n\nconst Index: React.FC = (props) => {\n    const [isSignedIn, setIsSignedIn] = useState(false);\n    const [userEmployer, setUserEmployer] = useState<User | Employer | undefined>(undefined);\n    useEffect(() => {\n        myFirebase.auth().onAuthStateChanged(user => {\n            if (user != null) {\n                setIsSignedIn(true)\n                setUserEmployer({\n                    email: user.email,\n                    id: user.uid,\n                    firstName: user.displayName.substr(0, user.displayName.indexOf(' ')),\n                    lastName: user.displayName.substr(user.displayName.indexOf(' ')+1),\n                });\n            }\n        });\n    });\n\n    useEffect(() => {\n        async function findUser() {\n            const user = await getUser(userEmployer.id)\n            const employer = await getEmployer(userEmployer.uid)\n\n            if (user['user_exists'] == undefined) {\n\n            } else if (employer['employer_exists'] == undefined) {\n\n            } else {\n                \n            }\n        }\n    }, [isSignedIn])\n\n    return (\n        <>\n            <StyledFirebaseAuth\n                uiConfig={AuthConfig}\n                firebaseAuth={myFirebase.auth()}/>\n        </>\n    );\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}