{"ast":null,"code":"import React, { useState, useContext } from 'react';\nimport { UserContext } from '../../../lib/UserProvider';\nimport { getDesignerFromCommunication } from '../../../lib/server';\nimport { DesignerDecisionTalk, EmployerDecisionHire } from '../../../model/model';\nimport { Typography, Radio, Popconfirm, Table } from 'antd';\nimport { BigBlackButton } from '../../General/BigBlackButton';\nimport OpenPage from '../../General/OpenPage';\nconst {\n  Column\n} = Table;\n\nconst EmployerCommList = props => {\n  const {\n    communicationList,\n    updateDecision\n  } = props;\n  const [showModal, setModalVisibility] = useState(false);\n  const [currentDesigner, setCurrentDesigner] = useState(undefined);\n  const context = useContext(UserContext);\n\n  const decisionToText = dec => {\n    switch (dec) {\n      case DesignerDecisionTalk.UNDECIDED:\n        return 'Reviewing Your Request';\n\n      case DesignerDecisionTalk.WILL_TALK:\n        return `Willing to Talk`;\n\n      case DesignerDecisionTalk.WILL_NOT_TALK:\n        return `Declines to Talk`;\n    }\n  };\n\n  const onMoreInfo = async commId => {\n    const user = await getDesignerFromCommunication(commId);\n    OpenPage(context.setLoading, '/profile/' + user.id);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Table, {\n    style: {\n      paddingBottom: 10,\n      width: '100%',\n      fontFamily: 'Mark Pro Bold',\n      fontWeight: 'normal'\n    },\n    size: \"large\",\n    dataSource: communicationList,\n    bordered: false,\n    pagination: {\n      defaultPageSize: 10\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    width: '35%',\n    title: \"Name\",\n    dataIndex: \"fullName\",\n    key: \"fullName\"\n  }), /*#__PURE__*/React.createElement(Column, {\n    title: \"Designer's Status\",\n    dataIndex: \"designerApprovedTalk\",\n    key: \"designerApprovedTalk\",\n    render: text => /*#__PURE__*/React.createElement(Typography.Text, {\n      style: {\n        color: '#000'\n      }\n    }, decisionToText(text))\n  }), /*#__PURE__*/React.createElement(Column, {\n    align: 'center',\n    title: \"Decision\",\n    dataIndex: \"decision\",\n    key: \"decision\",\n    render: (text, record, index) => /*#__PURE__*/React.createElement(Popconfirm, {\n      title: \"Are you sure?\"\n    }, /*#__PURE__*/React.createElement(Radio.Group, {\n      onChange: e => updateDecision(communicationList[index].communicationId, e.target.value),\n      value: text\n    }, /*#__PURE__*/React.createElement(Radio.Button, {\n      value: EmployerDecisionHire.UNDECIDED\n    }, \"Reviewing\"), /*#__PURE__*/React.createElement(Radio.Button, {\n      value: EmployerDecisionHire.REJECT\n    }, \"Reject\"), /*#__PURE__*/React.createElement(Radio.Button, {\n      value: EmployerDecisionHire.HIRE\n    }, \"Hire\")))\n  }), /*#__PURE__*/React.createElement(Column, {\n    align: 'center',\n    title: \"Info\",\n    dataIndex: \"communicationId\",\n    key: \"communicationId\",\n    render: communicationId => /*#__PURE__*/React.createElement(BigBlackButton, {\n      onClick: () => onMoreInfo(communicationId)\n    }, \"View Profile\")\n  }), \"/>\"));\n};\n\nexport default EmployerCommList;","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel/client/components/Dashboard/Employer/EmployerCommList.tsx"],"names":["React","useState","useContext","UserContext","getDesignerFromCommunication","DesignerDecisionTalk","EmployerDecisionHire","Typography","Radio","Popconfirm","Table","BigBlackButton","OpenPage","Column","EmployerCommList","props","communicationList","updateDecision","showModal","setModalVisibility","currentDesigner","setCurrentDesigner","undefined","context","decisionToText","dec","UNDECIDED","WILL_TALK","WILL_NOT_TALK","onMoreInfo","commId","user","setLoading","id","paddingBottom","width","fontFamily","fontWeight","defaultPageSize","text","color","record","index","e","communicationId","target","value","REJECT","HIRE"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react'\nimport {UserContext} from '../../../lib/UserProvider'\nimport QuizScreen from '../../OnboardingFlow/Designers/QuizScreen'\nimport {getDesignerFromCommunication} from '../../../lib/server'\nimport {User, DesignerDecisionTalk, EmployerDecisionHire, CommForEmployer} from '../../../model/model'\nimport {Typography, List, Radio, Popconfirm, Table} from 'antd'\nimport {BigBlackButton} from '../../General/BigBlackButton'\nimport Router from 'next/router'\nimport OpenPage from '../../General/OpenPage'\nconst {Column} = Table\n\ninterface CommunicationsListProps {\n    communicationList: CommForEmployer[]\n    updateDecision: (commId: string, update: EmployerDecisionHire) => void\n}\n\nconst EmployerCommList: React.FC<CommunicationsListProps> = (props) => {\n    const {communicationList, updateDecision} = props\n    const [showModal, setModalVisibility] = useState(false) \n    const [currentDesigner, setCurrentDesigner] = useState<User>(undefined) \n    const context = useContext(UserContext)\n\n    const decisionToText = (dec: DesignerDecisionTalk): string => {\n        switch (dec) {\n            case DesignerDecisionTalk.UNDECIDED:\n                return 'Reviewing Your Request'\n            case DesignerDecisionTalk.WILL_TALK:\n                return `Willing to Talk`\n            case DesignerDecisionTalk.WILL_NOT_TALK:\n                return `Declines to Talk`\n        }\n    }\n\n    const onMoreInfo = async (commId: string) => {\n        const user = await getDesignerFromCommunication(commId)\n        OpenPage(context.setLoading, '/profile/' + user.id)\n    }\n\n    return (\n        <>\n            <Table\n                style={{paddingBottom: 10, width: '100%', fontFamily: 'Mark Pro Bold', fontWeight: 'normal'}}\n                size={\"large\"}\n                dataSource={communicationList}\n                bordered={false}\n                pagination={{defaultPageSize: 10}}\n            >\n                <Column width={'35%'} title=\"Name\" dataIndex=\"fullName\" key=\"fullName\" />\n                <Column title=\"Designer's Status\" dataIndex=\"designerApprovedTalk\" key=\"designerApprovedTalk\" render={(text) => (\n                    <Typography.Text style={{color: '#000'}}>{decisionToText(text)}</Typography.Text>\n                )}/>\n                <Column align={'center'} title=\"Decision\" dataIndex=\"decision\" key=\"decision\" render={(text, record, index) => (\n                    <Popconfirm title={\"Are you sure?\"}>\n                        <Radio.Group onChange={(e) => updateDecision(communicationList[index].communicationId, e.target.value)} value={text}>\n                            <Radio.Button value={EmployerDecisionHire.UNDECIDED}>Reviewing</Radio.Button>\n                            <Radio.Button value={EmployerDecisionHire.REJECT}>Reject</Radio.Button>\n                            <Radio.Button value={EmployerDecisionHire.HIRE}>Hire</Radio.Button>\n                        </Radio.Group>\n                    </Popconfirm> \n                )} />\n                <Column align={'center'} title=\"Info\" dataIndex=\"communicationId\" key=\"communicationId\" render={(communicationId) => (\n                    <BigBlackButton onClick={() => onMoreInfo(communicationId)}>\n                        View Profile\n                    </BigBlackButton>\n                )} />\n                 />\n            </Table>\n        </>\n    )\n}\n\nexport default EmployerCommList"]},"metadata":{},"sourceType":"module"}