{"ast":null,"code":"import React, { useState } from 'react';\nimport { Form, Input, Button, Checkbox, Row, Col, Select, Upload, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport _ from 'lodash';\nimport { VisaStatus } from '../../model/model';\nconst {\n  Option\n} = Select;\nexport const Form1 = props => {\n  const {\n    currentUser,\n    changeCurrentUser,\n    changeStep\n  } = props;\n  const [fileObj, updateFileObj] = useState({\n    uid: '-1',\n    type: '.pdf',\n    size: 10,\n    name: 'fake.pdf',\n    status: 'done',\n    url: ''\n  });\n\n  if (currentUser == undefined) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n\n  const onFinish = () => {\n    changeCurrentUser(currentUser);\n    changeStep();\n  };\n\n  const onFinishFailed = () => {};\n\n  return /*#__PURE__*/React.createElement(Form, {\n    name: \"basic\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Name\",\n    name: \"firstName\"\n  }, /*#__PURE__*/React.createElement(Input.Group, null, /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Col, {\n    span: 11\n  }, /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    defaultValue: currentUser.firstName\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 2\n  }), /*#__PURE__*/React.createElement(Col, {\n    span: 11\n  }, /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    defaultValue: currentUser.lastName\n  }))))), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Email\",\n    name: \"email\"\n  }, /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    defaultValue: currentUser.email\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Phone Number\",\n    name: \"Phone Number\",\n    rules: [{\n      required: true\n    }]\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"+1 (555) 555-5555\"\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Location\",\n    name: \"Location\",\n    rules: [{\n      required: true\n    }]\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"New York City\"\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Desired Salary\",\n    name: \"Desired Salary\",\n    rules: [{\n      required: true\n    }]\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"$100,000-$150,000 per year\"\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Preferred Role\",\n    name: \"Preferred Role\",\n    rules: [{\n      required: true\n    }]\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"UI/UX Designer\"\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Portfolio\",\n    name: \"Portfolio\",\n    rules: [{\n      required: true\n    }]\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"https://www.myportfolio.com\"\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Resume\",\n    name: \"Resume\",\n    rules: [{\n      required: true\n    }]\n  }, /*#__PURE__*/React.createElement(Upload, {\n    name: 'file',\n    accept: \".pdf\",\n    fileList: [fileObj],\n    onChange: info => {\n      if (info.file.status !== 'uploading') {\n        console.log(info.file, info.fileList);\n      }\n\n      if (info.file.status === 'done') {\n        message.success(`${info.file.name} file uploaded successfully`);\n      } else if (info.file.status === 'error') {\n        message.error(`${info.file.name} file upload failed.`);\n      }\n\n      updateFileObj(info.fileList[0]);\n    }\n  }, /*#__PURE__*/React.createElement(Button, null, /*#__PURE__*/React.createElement(UploadOutlined, null), \" Click to Upload\"))), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Visa Status\",\n    name: \"Visa Status\",\n    rules: [{\n      required: true\n    }]\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Select an option:\"\n  }, _.map(VisaStatus, status => {\n    return /*#__PURE__*/React.createElement(Option, {\n      value: status\n    }, status);\n  }))), /*#__PURE__*/React.createElement(Form.Item, {\n    rules: [{\n      required: true\n    }],\n    name: \"remember\",\n    valuePropName: \"unchecked\"\n  }, /*#__PURE__*/React.createElement(Checkbox, null, \"Agree to Terms and Services\")), /*#__PURE__*/React.createElement(Form.Item, null, /*#__PURE__*/React.createElement(Row, {\n    justify: \"center\",\n    align: \"middle\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\"\n  }, \"Next Page\"))));\n};","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel-onboarding/components/OnboardingFlow/Form1.tsx"],"names":["React","useState","Form","Input","Button","Checkbox","Row","Col","Select","Upload","message","UploadOutlined","_","VisaStatus","Option","Form1","props","currentUser","changeCurrentUser","changeStep","fileObj","updateFileObj","uid","type","size","name","status","url","undefined","onFinish","onFinishFailed","remember","firstName","lastName","email","required","info","file","console","log","fileList","success","error","map"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { Form, Input, Button, Checkbox, Row, Col, Select, Upload, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport _ from 'lodash'\nimport {User, VisaStatus} from '../../model/model'\nimport FormProps from './FormProps'\nimport {UploadFile} from 'antd/lib/upload/interface'\n\nconst {Option} = Select\n\n\n\nexport const Form1: React.FC<FormProps> = (props) => {\n    const {currentUser, changeCurrentUser, changeStep} = props\n    const [fileObj, updateFileObj] = useState<UploadFile>({\n        uid: '-1',\n        type: '.pdf',\n        size: 10,\n        name: 'fake.pdf',\n        status: 'done',\n        url: ''\n    })\n\n    if (currentUser == undefined) {\n        return (<></>)\n    }\n\n    const onFinish = () => {\n        changeCurrentUser(currentUser)\n        changeStep()\n    }\n\n    const onFinishFailed = () => {}\n\n    return (\n        <Form\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n        >\n            <Form.Item\n                label=\"Name\"\n                name=\"firstName\"\n            >\n                <Input.Group>\n                    <Row>\n                        <Col span={11}>\n                            <Input disabled defaultValue={currentUser.firstName}/>\n                        </Col>\n                        <Col span={2}/>\n                        <Col span={11}>\n                            <Input disabled defaultValue={currentUser.lastName}/>\n                        </Col>\n                    </Row>\n                </Input.Group>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Email\"\n                name=\"email\"\n            >\n                <Input disabled defaultValue={currentUser.email}/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Phone Number\"\n                name=\"Phone Number\"\n                rules={[{ required: true }]}\n            >\n                <Input placeholder=\"+1 (555) 555-5555\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Location\"\n                name=\"Location\"\n                rules={[{ required: true }]}\n            >\n                <Input placeholder=\"New York City\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Desired Salary\"\n                name=\"Desired Salary\"\n                rules={[{ required: true }]}\n            >\n                <Input placeholder=\"$100,000-$150,000 per year\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Preferred Role\"\n                name=\"Preferred Role\"\n                rules={[{ required: true }]}\n            >\n                <Input placeholder=\"UI/UX Designer\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Portfolio\"\n                name=\"Portfolio\"\n                rules={[{ required: true }]}\n            >\n                <Input placeholder=\"https://www.myportfolio.com\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Resume\"\n                name=\"Resume\"\n                rules={[{ required: true }]}\n            >\n                <Upload \n                    name={'file'} \n                    accept={\".pdf\"} \n                    fileList={[fileObj]}\n                    onChange={(info) => {\n\n                        if (info.file.status !== 'uploading') {\n                            console.log(info.file, info.fileList);\n                        }\n                        if (info.file.status === 'done') {\n                            message.success(`${info.file.name} file uploaded successfully`);\n                        } else if (info.file.status === 'error') {\n                            message.error(`${info.file.name} file upload failed.`);\n                        }\n\n                        updateFileObj(info.fileList[0])\n                    }}>\n                    <Button>\n                        <UploadOutlined /> Click to Upload\n                    </Button>\n                </Upload>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Visa Status\"\n                name=\"Visa Status\"\n                rules={[{ required: true }]}\n            >\n                <Select placeholder=\"Select an option:\">\n                    {_.map(VisaStatus, (status) => {\n                        return <Option value={status}>{status}</Option>\n                    })}\n                </Select>\n            </Form.Item>\n\n            <Form.Item \n                rules={[{ required: true }]}\n                name=\"remember\" \n                valuePropName=\"unchecked\">\n                <Checkbox>Agree to Terms and Services</Checkbox>\n            </Form.Item>\n\n            <Form.Item>\n                <Row justify=\"center\" align=\"middle\">\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Next Page\n                    </Button>\n                </Row>\n            </Form.Item>\n        </Form>\n    );\n}"]},"metadata":{},"sourceType":"module"}