{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { Button, Col, Typography } from 'antd';\nimport _ from 'lodash';\nimport { removeUser, didCompleteQuiz } from '../../lib/server';\nimport Router from 'next/router';\n\nconst QuizScreen = props => {\n  const {\n    currentUser,\n    changeCurrentUser,\n    changeStep\n  } = props;\n  const designerTypes = [{\n    name: \"UI\",\n    link: \"https://sumpixelbiz.typeform.com/to/riENWs\"\n  }, {\n    name: \"UX\",\n    link: \"https://sumpixelbiz.typeform.com/to/TqV8Jo\"\n  }, {\n    name: \"Brand\",\n    link: \"https://sumpixelbiz.typeform.com/to/BOBhxP\"\n  }, {\n    name: \"Product\",\n    link: \"https://sumpixelbiz.typeform.com/to/irGM8E\"\n  }];\n  useEffect(() => {\n    async function findUser() {\n      const user = await didCompleteQuiz(currentUser.id);\n\n      if (user['completed_quiz']) {\n        Router.replace('/dashboard_user');\n      }\n    }\n\n    findUser();\n  }, []);\n\n  const goBack = async () => {\n    await removeUser(currentUser.id);\n    changeStep(-1);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography.Title, {\n    style: {\n      textAlign: 'center'\n    },\n    level: 4\n  }, \"Click one of the following categories to be redirected to your quiz. When you complete your quiz, return here and refresh the page!\"), /*#__PURE__*/React.createElement(Col, null, _.map(designerTypes, type => {\n    return /*#__PURE__*/React.createElement(Button, {\n      target: \"_blank\",\n      href: type.link\n    }, type.name);\n  })), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: 20\n    },\n    type: \"default\",\n    onClick: goBack\n  }, \"Back\"));\n};\n\nexport default QuizScreen;","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel-client/components/OnboardingFlow/QuizScreen.tsx"],"names":["React","useEffect","Button","Col","Typography","_","removeUser","didCompleteQuiz","Router","QuizScreen","props","currentUser","changeCurrentUser","changeStep","designerTypes","name","link","findUser","user","id","replace","goBack","textAlign","map","type","marginTop"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAsBC,MAAtB,EAA6CC,GAA7C,EAA2EC,UAA3E,QAA6F,MAA7F;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,SAAQC,UAAR,EAAoBC,eAApB,QAA0C,kBAA1C;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,UAA+B,GAAIC,KAAD,IAAW;AAC/C,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA,iBAAd;AAAiCC,IAAAA;AAAjC,MAA+CH,KAArD;AAEA,QAAMI,aAAa,GAAG,CAAC;AAACC,IAAAA,IAAI,EAAE,IAAP;AAAaC,IAAAA,IAAI,EAAE;AAAnB,GAAD,EACE;AAACD,IAAAA,IAAI,EAAE,IAAP;AAAaC,IAAAA,IAAI,EAAE;AAAnB,GADF,EAEE;AAACD,IAAAA,IAAI,EAAE,OAAP;AAAgBC,IAAAA,IAAI,EAAE;AAAtB,GAFF,EAGE;AAACD,IAAAA,IAAI,EAAE,SAAP;AAAkBC,IAAAA,IAAI,EAAE;AAAxB,GAHF,CAAtB;AAKAf,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAegB,QAAf,GAA0B;AACtB,YAAMC,IAAI,GAAG,MAAMX,eAAe,CAACI,WAAW,CAACQ,EAAb,CAAlC;;AAEA,UAAID,IAAI,CAAC,gBAAD,CAAR,EAA4B;AACxBV,QAAAA,MAAM,CAACY,OAAP,CAAe,iBAAf;AACH;AACJ;;AACDH,IAAAA,QAAQ;AACX,GATQ,EASN,EATM,CAAT;;AAWA,QAAMI,MAAM,GAAG,YAAY;AACvB,UAAMf,UAAU,CAACK,WAAW,CAACQ,EAAb,CAAhB;AACAN,IAAAA,UAAU,CAAC,CAAC,CAAF,CAAV;AACH,GAHD;;AAIA,sBACI,uDACI,oBAAC,UAAD,CAAY,KAAZ;AAAkB,IAAA,KAAK,EAAE;AAACS,MAAAA,SAAS,EAAE;AAAZ,KAAzB;AAAgD,IAAA,KAAK,EAAE;AAAvD,2IADJ,eAII,oBAAC,GAAD,QACKjB,CAAC,CAACkB,GAAF,CAAMT,aAAN,EAAsBU,IAAD,IAAwC;AAC1D,wBAAO,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAC,QAAf;AAAwB,MAAA,IAAI,EAAEA,IAAI,CAACR;AAAnC,OAA0CQ,IAAI,CAACT,IAA/C,CAAP;AACH,GAFA,CADL,CAJJ,eASI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAACU,MAAAA,SAAS,EAAE;AAAZ,KAAf;AAAgC,IAAA,IAAI,EAAC,SAArC;AAA+C,IAAA,OAAO,EAAEJ;AAAxD,YATJ,CADJ;AAeH,CAtCD;;AAwCA,eAAeZ,UAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport { Form, Input, Button, Checkbox, Row, Col, Select, Upload, message, Typography } from 'antd';\nimport _ from 'lodash'\nimport FormProps from './FormProps'\nimport {removeUser, didCompleteQuiz} from '../../lib/server'\nimport Router from 'next/router'\n\nconst QuizScreen: React.FC<FormProps> = (props) => {\n    const {currentUser, changeCurrentUser, changeStep} = props\n\n    const designerTypes = [{name: \"UI\", link: \"https://sumpixelbiz.typeform.com/to/riENWs\"}, \n                            {name: \"UX\", link: \"https://sumpixelbiz.typeform.com/to/TqV8Jo\"}, \n                            {name: \"Brand\", link: \"https://sumpixelbiz.typeform.com/to/BOBhxP\"}, \n                            {name: \"Product\", link: \"https://sumpixelbiz.typeform.com/to/irGM8E\"}]\n\n    useEffect(() => {\n        async function findUser() {\n            const user = await didCompleteQuiz(currentUser.id)\n\n            if (user['completed_quiz']) {\n                Router.replace('/dashboard_user')\n            }\n        }\n        findUser()\n    }, []);\n\n    const goBack = async () => {\n        await removeUser(currentUser.id)\n        changeStep(-1)\n    }\n    return (\n        <>\n            <Typography.Title style={{textAlign: 'center'}} level={4}>\n                Click one of the following categories to be redirected to your quiz. When you complete your quiz, return here and refresh the page!\n            </Typography.Title>\n            <Col>\n                {_.map(designerTypes, (type: {name: string, link: string}) => {\n                    return <Button target=\"_blank\" href={type.link}>{type.name}</Button>\n                })}\n            </Col>\n            <Button style={{marginTop: 20}} type=\"default\" onClick={goBack}>\n                Back\n            </Button>\n        </>\n    );\n}\n\nexport default QuizScreen"]},"metadata":{},"sourceType":"module"}