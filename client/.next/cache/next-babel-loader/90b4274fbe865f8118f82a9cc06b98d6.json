{"ast":null,"code":"import React, { useContext, useState, useEffect } from 'react';\nimport { UserContext } from '../../../lib/UserProvider';\nimport { getEmployerCommunicationsList } from '../../../lib/server';\nimport { message } from 'antd';\nimport EmployerCommList from './EmployerCommList';\n\nconst ManageCommunications = props => {\n  const {\n    currentUser,\n    changeUser\n  } = useContext(UserContext);\n  const [commList, setCommList] = useState(undefined);\n\n  const updateEmployerDecision = async (commId, update) => {\n    await updateEmployerDecision(commId, update);\n    message.success(\"Updated Decision\");\n    setCommList((await getEmployerCommunicationsList(currentUser.id)));\n  };\n\n  useEffect(() => {\n    getEmployerCommunicationsList(currentUser.id).then(commList => {\n      setCommList(commList);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(EmployerCommList, {\n    communicationList: commList,\n    updateEmployerDecision: updateEmployerDecision\n  });\n};\n\nexport default ManageCommunications;","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel-client/components/Dashboard/Employer/ManageCommunications.tsx"],"names":["React","useContext","useState","useEffect","UserContext","getEmployerCommunicationsList","message","EmployerCommList","ManageCommunications","props","currentUser","changeUser","commList","setCommList","undefined","updateEmployerDecision","commId","update","success","id","then"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,EAAqCC,SAArC,QAAqD,OAArD;AACA,SAAQC,WAAR,QAA0B,2BAA1B;AAEA,SAAyBC,6BAAzB,QAA8D,qBAA9D;AACA,SAAQC,OAAR,QAAsB,MAAtB;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,MAAMC,oBAA8B,GAAIC,KAAD,IAAW;AAC9C,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAA6BV,UAAU,CAACG,WAAD,CAA7C;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAgCY,SAAhC,CAAxC;;AAEA,QAAMC,sBAAsB,GAAG,OAAOC,MAAP,EAAuBC,MAAvB,KAAwD;AACnF,UAAMF,sBAAsB,CAACC,MAAD,EAASC,MAAT,CAA5B;AACAX,IAAAA,OAAO,CAACY,OAAR,CAAgB,kBAAhB;AACAL,IAAAA,WAAW,EAAC,MAAMR,6BAA6B,CAACK,WAAW,CAACS,EAAb,CAApC,EAAX;AACH,GAJD;;AAMAhB,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,6BAA6B,CAACK,WAAW,CAACS,EAAb,CAA7B,CAA8CC,IAA9C,CAAoDR,QAAD,IAAiC;AAChFC,MAAAA,WAAW,CAACD,QAAD,CAAX;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMA,sBAAQ,oBAAC,gBAAD;AAAkB,IAAA,iBAAiB,EAAEA,QAArC;AAA+C,IAAA,sBAAsB,EAAEG;AAAvE,IAAR;AACH,CAjBD;;AAmBA,eAAeP,oBAAf","sourcesContent":["import React, {useContext, useState, useEffect} from 'react'\nimport {UserContext} from '../../../lib/UserProvider'\nimport { CommForEmployer, EmployerDecisionHire } from '../../../model/model'\nimport { modifyEmployer, getEmployerCommunicationsList } from '../../../lib/server'\nimport {message} from 'antd'\nimport {Employer} from '../../../model/model'\nimport EmployerCommList from './EmployerCommList'\n\nconst ManageCommunications: React.FC = (props) => {\n    const {currentUser, changeUser}  = useContext(UserContext)\n    const [commList, setCommList] = useState<CommForEmployer[] | undefined>(undefined)\n\n    const updateEmployerDecision = async (commId: string, update: EmployerDecisionHire) => {\n        await updateEmployerDecision(commId, update)\n        message.success(\"Updated Decision\")\n        setCommList(await getEmployerCommunicationsList(currentUser.id))\n    }\n\n    useEffect(() => {\n        getEmployerCommunicationsList(currentUser.id).then((commList: CommForEmployer[]) => {\n            setCommList(commList)\n        })\n    }, [])\n\n    return (<EmployerCommList communicationList={commList} updateEmployerDecision={updateEmployerDecision}/>)\n}\n\nexport default ManageCommunications"]},"metadata":{},"sourceType":"module"}