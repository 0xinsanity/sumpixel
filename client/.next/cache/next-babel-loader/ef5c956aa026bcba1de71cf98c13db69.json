{"ast":null,"code":"import React, { useState, useContext } from 'react';\nimport { Form, Input, Button, Checkbox, Row, Col, Select, Upload, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport _ from 'lodash';\nimport { VisaStatus, NavBarStatus, UNIVERSAL_COLOR } from '../../../model/model';\nimport { storage_ref } from '../../../lib/firebase';\nimport { UserContext } from '../../../lib/UserProvider';\nimport Loading from '../../General/Loading';\nimport { BigBlackButton } from '../../General/BigBlackButton';\nimport OpenPage from '../../General/OpenPage';\nconst {\n  Option\n} = Select;\n\nconst FormPersonalData = props => {\n  const {\n    changeCurrentUser,\n    changeStep,\n    changeNavbarStatus,\n    modifyProfile\n  } = props;\n  const isModifyProfilePage = modifyProfile !== undefined;\n  const {\n    currentUser,\n    changeUser,\n    loading,\n    setLoading\n  } = useContext(UserContext);\n  const [checked, changeChecked] = useState(false);\n  const [fileList, updateFileList] = useState([]);\n\n  const goBack = async () => {\n    changeNavbarStatus(NavBarStatus.Undecided);\n    changeStep(-1);\n  };\n\n  if (currentUser == undefined) {\n    return /*#__PURE__*/React.createElement(Loading, null);\n  }\n\n  const getRules = name => {\n    return [{\n      required: !isModifyProfilePage,\n      message: !isModifyProfilePage ? `${name} is required` : ''\n    }];\n  };\n\n  const updateUser = values => {\n    const newUser = {\n      email: currentUser.email,\n      id: currentUser.id,\n      firstName: currentUser.firstName,\n      lastName: currentUser.lastName,\n      phoneNumber: values.phoneNumber,\n      location: values.location,\n      salary: values.salary,\n      portfolio: values.portfolio,\n      preferredRole: values.preferredRole,\n      visa: values.visa_status,\n      resume: currentUser.id + '.pdf',\n      linkedin: values.linkedin,\n      dribbble: values.dribbble\n    };\n    console.table(_.pickBy(newUser, _.identity));\n    changeCurrentUser(_.pickBy(newUser, _.identity));\n\n    if (isModifyProfilePage) {\n      message.success(\"Profile Updated\");\n    } else {\n      changeStep(1);\n    }\n  };\n\n  const onFinish = values => {\n    if (!isModifyProfilePage && !checked) {\n      message.error('Please agree to the Terms of Service');\n      return;\n    }\n\n    const res = values.resume;\n    console.log(res);\n\n    if (res === undefined) {\n      updateUser(values);\n    } else {\n      storage_ref.child('resumes/' + currentUser.id + '.pdf').put(res.file[\"originFileObj\"]).then(snapshot => {\n        updateUser(values);\n      });\n    }\n  };\n\n  const viewProfile = () => {\n    OpenPage(setLoading, '/profile/' + currentUser.id);\n  };\n\n  const onFinishFailed = values => {\n    console.table(values);\n    message.error('There was an error completing your account. Ensure every field is filled out.');\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    name: \"basic\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    style: {\n      marginBottom: 50\n    }\n  }, !isModifyProfilePage ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input.Group, null, /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Col, {\n    span: 11\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"First Name\",\n    name: \"firstName\"\n  }, /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    placeholder: \"First Name\",\n    defaultValue: currentUser.firstName\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 2\n  }), /*#__PURE__*/React.createElement(Col, {\n    span: 11\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Last Name\",\n    name: \"lastName\"\n  }, /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    placeholder: \"Last Name\",\n    defaultValue: currentUser.lastName\n  }))))), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Email\",\n    name: \"email\"\n  }, /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    defaultValue: currentUser.email\n  }))) : null, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Phone Number\",\n    name: \"phoneNumber\",\n    rules: getRules(\"Phone Number\")\n  }, /*#__PURE__*/React.createElement(Input, {\n    defaultValue: isModifyProfilePage ? '' : currentUser.phoneNumber || \"\",\n    placeholder: \"+1 (555) 555-5555\"\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Location\",\n    name: \"location\",\n    rules: getRules(\"Location\")\n  }, /*#__PURE__*/React.createElement(Input, {\n    defaultValue: isModifyProfilePage ? '' : currentUser.location || \"\",\n    placeholder: \"New York City\"\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Desired Salary\",\n    name: \"salary\",\n    rules: getRules(\"Desired Salary\")\n  }, /*#__PURE__*/React.createElement(Input, {\n    defaultValue: isModifyProfilePage ? '' : currentUser.salary || \"\",\n    placeholder: \"$100,000-$150,000 per year\"\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Preferred Role\",\n    name: \"preferredRole\",\n    rules: getRules(\"Preferred Role\")\n  }, /*#__PURE__*/React.createElement(Input, {\n    defaultValue: isModifyProfilePage ? '' : currentUser.preferredRole || \"\",\n    placeholder: \"UI/UX Designer\"\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Portfolio\",\n    name: \"portfolio\",\n    rules: getRules(\"Portfolio\")\n  }, /*#__PURE__*/React.createElement(Input, {\n    defaultValue: isModifyProfilePage ? '' : currentUser.portfolio || \"\",\n    placeholder: \"https://www.myportfolio.com\"\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Resume\",\n    name: \"resume\",\n    rules: getRules(\"Resume\")\n  }, /*#__PURE__*/React.createElement(Upload, {\n    name: 'file',\n    accept: \".pdf\",\n    fileList: fileList,\n    onChange: info => {\n      let fileList_update = [...info.fileList];\n      fileList_update = fileList_update.slice(-1);\n      fileList_update = fileList_update.map(file => {\n        if (file.response) {\n          file.url = file.response.url;\n        }\n\n        if (file.status === 'error') {\n          // TODO: Find better way of handling this\n          file.status = 'done';\n        }\n\n        return file;\n      });\n\n      if (info.file.status === 'done') {\n        message.success(`${info.file.name} file uploaded successfully`);\n      } else if (info.file.status === 'error') {\n        message.success(`${info.file.name} file uploaded successfully`);\n      }\n\n      updateFileList(fileList_update);\n    }\n  }, /*#__PURE__*/React.createElement(Button, null, /*#__PURE__*/React.createElement(UploadOutlined, null), \" \", !isModifyProfilePage ? \"Click to Upload\" : \"Upload New Resume\"))), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Visa Status\",\n    name: \"visa_status\",\n    rules: getRules(\"Visa Status\")\n  }, /*#__PURE__*/React.createElement(Select, {\n    defaultValue: modifyProfile ? '' : currentUser.visa || \"\",\n    placeholder: \"Select an option:\"\n  }, _.map(VisaStatus, status => {\n    return /*#__PURE__*/React.createElement(Option, {\n      value: status\n    }, status);\n  }))), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"LinkedIn\",\n    name: \"linkedin\"\n  }, /*#__PURE__*/React.createElement(Input, {\n    defaultValue: modifyProfile ? '' : currentUser.linkedin || \"\",\n    placeholder: \"https://www.linkedin.com/in/username\"\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Dribbble\",\n    name: \"dribbble\"\n  }, /*#__PURE__*/React.createElement(Input, {\n    defaultValue: modifyProfile ? '' : currentUser.dribbble || \"\",\n    placeholder: \"https://dribbble.com/username\"\n  })), !isModifyProfilePage ? /*#__PURE__*/React.createElement(Form.Item, {\n    valuePropName: 'checked'\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    style: {\n      fontFamily: 'Mark Pro'\n    },\n    checked: checked,\n    onChange: e => changeChecked(e.target.checked)\n  }, \"Agree to the \", /*#__PURE__*/React.createElement(\"a\", {\n    style: {\n      color: UNIVERSAL_COLOR\n    },\n    target: '_blank',\n    href: '/terms'\n  }, \"Terms of Services\"))) : null, /*#__PURE__*/React.createElement(Form.Item, null, /*#__PURE__*/React.createElement(Row, {\n    justify: \"space-between\",\n    align: \"middle\"\n  }, !isModifyProfilePage ? /*#__PURE__*/React.createElement(BigBlackButton, {\n    type: \"default\",\n    onClick: goBack\n  }, \"Back\") : /*#__PURE__*/React.createElement(BigBlackButton, {\n    type: \"default\",\n    onClick: viewProfile\n  }, \"View Profile\"), /*#__PURE__*/React.createElement(BigBlackButton, {\n    htmlType: \"submit\"\n  }, !isModifyProfilePage ? \"Take The Quiz\" : \"Update Profile\"))));\n};\n\nexport default FormPersonalData;","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel/client/components/OnboardingFlow/Designers/FormPersonalData.tsx"],"names":["React","useState","useContext","Form","Input","Button","Checkbox","Row","Col","Select","Upload","message","UploadOutlined","_","VisaStatus","NavBarStatus","UNIVERSAL_COLOR","storage_ref","UserContext","Loading","BigBlackButton","OpenPage","Option","FormPersonalData","props","changeCurrentUser","changeStep","changeNavbarStatus","modifyProfile","isModifyProfilePage","undefined","currentUser","changeUser","loading","setLoading","checked","changeChecked","fileList","updateFileList","goBack","Undecided","getRules","name","required","updateUser","values","newUser","email","id","firstName","lastName","phoneNumber","location","salary","portfolio","preferredRole","visa","visa_status","resume","linkedin","dribbble","console","table","pickBy","identity","success","onFinish","error","res","log","child","put","file","then","snapshot","viewProfile","onFinishFailed","remember","marginBottom","info","fileList_update","slice","map","response","url","status","fontFamily","e","target","color"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react'\nimport { Form, Input, Button, Checkbox, Row, Col, Select, Upload, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport _ from 'lodash'\nimport {User, VisaStatus, NavBarStatus, UNIVERSAL_COLOR} from '../../../model/model'\nimport FormProps from '../FormProps'\nimport {UploadFile} from 'antd/lib/upload/interface'\nimport {storage_ref, myFirebase} from '../../../lib/firebase'\nimport {removeUser} from '../../../lib/server'\nimport {UserContext} from '../../../lib/UserProvider'\nimport Loading from '../../General/Loading'\nimport {BigBlackButton} from '../../General/BigBlackButton'\nimport Router from 'next/router';\nimport OpenPage from '../../General/OpenPage'\nconst {Option} = Select\n\ninterface FormPersonalDataProps extends FormProps {\n    modifyProfile?: boolean\n}\n\nconst FormPersonalData: React.FC<FormPersonalDataProps> = (props) => {\n    const {changeCurrentUser, changeStep, changeNavbarStatus, modifyProfile} = props\n    const isModifyProfilePage = modifyProfile !== undefined\n    const {currentUser, changeUser, loading, setLoading}  = useContext(UserContext)\n    const [checked, changeChecked] = useState(false)\n    const [fileList, updateFileList] = useState<UploadFile[]>([])\n    const goBack = async () => {\n        changeNavbarStatus(NavBarStatus.Undecided)\n        changeStep(-1)\n        \n    }\n\n    if (currentUser == undefined) {\n        return (<Loading />)\n    }\n\n    const getRules = (name) => {\n        return [{ required: !isModifyProfilePage, message: !isModifyProfilePage ? `${name} is required` : '' }]\n    }\n\n    const updateUser = (values) => {\n        const newUser = {\n            email: currentUser.email,\n            id: currentUser.id,\n            firstName: currentUser.firstName,\n            lastName: currentUser.lastName,\n            phoneNumber: values.phoneNumber,\n            location: values.location,\n            salary: values.salary,\n            portfolio: values.portfolio,\n            preferredRole: values.preferredRole,\n            visa: values.visa_status,\n            resume: currentUser.id + '.pdf',\n            linkedin: values.linkedin,\n            dribbble: values.dribbble\n        }\n        console.table(_.pickBy(newUser, _.identity))\n\n        changeCurrentUser(_.pickBy(newUser, _.identity))\n\n        if (isModifyProfilePage) {\n            message.success(\"Profile Updated\")\n        } else {\n            changeStep(1)\n        }\n    }\n\n    const onFinish = (values) => {\n        if (!isModifyProfilePage && !checked) {\n            message.error('Please agree to the Terms of Service')\n            return\n        }\n\n        const res = values.resume\n        console.log(res)\n        if (res === undefined) {\n            updateUser(values)\n        } else {\n            storage_ref.child('resumes/' + currentUser.id + '.pdf').put(res.file[\"originFileObj\"]).then((snapshot) => {\n                updateUser(values)\n            })\n        }    \n    }\n\n    const viewProfile = () => {\n        OpenPage(setLoading, '/profile/' + currentUser.id)\n    }\n\n    const onFinishFailed = (values) => {\n        console.table(values)\n        message.error('There was an error completing your account. Ensure every field is filled out.')\n    }\n\n    return (\n        <Form\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            style={{marginBottom: 50}}\n        >\n            {!isModifyProfilePage ? \n                <>\n                    <Input.Group>\n                        <Row>\n                            <Col span={11}>\n                                <Form.Item\n                                    label=\"First Name\"\n                                    name=\"firstName\"\n                                >\n                                    <Input disabled placeholder=\"First Name\" defaultValue={currentUser.firstName}/>\n                                </Form.Item>\n                            </Col>\n                            <Col span={2}/>\n                            <Col span={11}>\n                                <Form.Item\n                                        label=\"Last Name\"\n                                        name=\"lastName\"\n                                >\n                                    <Input disabled placeholder=\"Last Name\" defaultValue={currentUser.lastName}/>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Input.Group>\n\n                    <Form.Item\n                        label=\"Email\"\n                        name=\"email\"\n                    >\n                        <Input disabled defaultValue={currentUser.email}/>\n                    </Form.Item>\n                </>\n            : null}\n\n            <Form.Item\n                label=\"Phone Number\"\n                name=\"phoneNumber\"\n                rules={getRules(\"Phone Number\")}\n            >\n                <Input defaultValue={isModifyProfilePage ? '' : currentUser.phoneNumber || \"\"} placeholder=\"+1 (555) 555-5555\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Location\"\n                name=\"location\"\n                rules={getRules(\"Location\")}\n            >\n                <Input defaultValue={isModifyProfilePage ? '' : currentUser.location || \"\"} placeholder=\"New York City\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Desired Salary\"\n                name=\"salary\"\n                rules={getRules(\"Desired Salary\")}\n            >\n                <Input defaultValue={isModifyProfilePage ? '' : (currentUser as User).salary || \"\"} placeholder=\"$100,000-$150,000 per year\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Preferred Role\"\n                name=\"preferredRole\"\n                rules={getRules(\"Preferred Role\")}\n            >\n                <Input defaultValue={isModifyProfilePage ? '' : (currentUser as User).preferredRole || \"\"} placeholder=\"UI/UX Designer\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Portfolio\"\n                name=\"portfolio\"\n                rules={getRules(\"Portfolio\")}\n            >\n                <Input defaultValue={isModifyProfilePage ? '' : (currentUser as User).portfolio || \"\"} placeholder=\"https://www.myportfolio.com\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Resume\"\n                name=\"resume\"\n                rules={getRules(\"Resume\")}\n            >\n                <Upload \n                    name={'file'} \n                    accept={\".pdf\"} \n                    fileList={fileList}\n                    onChange={(info) => {\n                        let fileList_update = [...info.fileList];\n                        fileList_update = fileList_update.slice(-1);\n\n                        fileList_update = fileList_update.map(file => {\n                            if (file.response) {\n                                file.url = file.response.url;\n                            }\n                            if (file.status === 'error') {\n                                // TODO: Find better way of handling this\n                                file.status = 'done'\n                            }\n                            return file;\n                        });\n\n                        if (info.file.status === 'done') {\n                            message.success(`${info.file.name} file uploaded successfully`);\n                        } else if (info.file.status === 'error') {\n                            message.success(`${info.file.name} file uploaded successfully`);\n                        }\n\n                        updateFileList(fileList_update)\n                    }}>\n                    <Button>\n                        <UploadOutlined /> {!isModifyProfilePage ? \"Click to Upload\" : \"Upload New Resume\"}\n                    </Button>\n                </Upload>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Visa Status\"\n                name=\"visa_status\"\n                rules={getRules(\"Visa Status\")}\n                \n            >\n                <Select defaultValue={modifyProfile ? '' : (currentUser as User).visa || \"\"} placeholder=\"Select an option:\">\n                    {_.map(VisaStatus, (status) => {\n                        return <Option value={status}>{status}</Option>\n                    })}\n                </Select>\n            </Form.Item>\n\n            <Form.Item\n                label=\"LinkedIn\"\n                name=\"linkedin\"\n            >\n                <Input defaultValue={modifyProfile ? '' : (currentUser as User).linkedin || \"\"} placeholder=\"https://www.linkedin.com/in/username\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Dribbble\"\n                name=\"dribbble\"\n            >\n                <Input defaultValue={modifyProfile ? '' : (currentUser as User).dribbble || \"\"} placeholder=\"https://dribbble.com/username\"/>\n            </Form.Item>\n\n            {!isModifyProfilePage ? \n                <Form.Item \n                    valuePropName={'checked'}\n                >\n                    <Checkbox style={{fontFamily: 'Mark Pro'}} checked={checked} onChange={(e) => changeChecked(e.target.checked)}>Agree to the <a style={{color: UNIVERSAL_COLOR}} target={'_blank'} href={'/terms'}>Terms of Services</a></Checkbox>\n            </Form.Item> \n            : null}\n\n                <Form.Item>\n                    <Row justify=\"space-between\" align=\"middle\">\n                        {!isModifyProfilePage ? \n                        <BigBlackButton type=\"default\" onClick={goBack}>\n                            Back\n                        </BigBlackButton>\n                        : <BigBlackButton type=\"default\" onClick={viewProfile}>\n                            View Profile\n                        </BigBlackButton>}\n                        <BigBlackButton htmlType=\"submit\">\n                            {!isModifyProfilePage ? \"Take The Quiz\" : \"Update Profile\" }\n                        </BigBlackButton>\n                    </Row>\n                </Form.Item> \n           \n        </Form>\n    );\n}\n\nexport default FormPersonalData"]},"metadata":{},"sourceType":"module"}