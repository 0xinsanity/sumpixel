{"ast":null,"code":"import React, { useContext, useState } from 'react';\nimport { createCommunication } from '../../../lib/server';\nimport { UserContext } from '../../../lib/UserProvider';\nimport { Table, Button } from 'antd';\nimport DesignerInfoModal from './DesignerInfoModal';\nconst {\n  Column\n} = Table;\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  key: 'name'\n}, {\n  title: 'Score',\n  dataIndex: 'score',\n  key: 'score'\n}, {\n  title: 'Expiration',\n  dataIndex: 'expiration',\n  key: 'expiration'\n}, {\n  title: 'Experience',\n  dataIndex: 'experience',\n  key: 'experience'\n}, {\n  title: 'Primary Skill',\n  dataIndex: 'primary_skill',\n  key: 'primary_skill'\n}, {\n  title: 'Contact',\n  dataIndex: 'contact',\n  key: 'contact'\n}];\n\nconst DesignerList = props => {\n  const {\n    currentUser,\n    changeUser\n  } = useContext(UserContext);\n  const {\n    designerList\n  } = props;\n  const [showModal, setModalVisibility] = useState(false);\n  const [currentDesigner, setCurrentDesigner] = useState(undefined);\n\n  const onMoreInfo = user => {\n    setCurrentDesigner(user);\n    setModalVisibility(true);\n  };\n\n  const onConnect = async designerId => {\n    window.analytics.track(currentUser.companyName + ' connects to designer');\n    const comm = await createCommunication(designerId, currentUser.id);\n    setModalVisibility(false);\n    const newUser = { ...currentUser,\n      communications: [...currentUser.communications, comm.id]\n    };\n    changeUser(newUser);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DesignerInfoModal, {\n    setInvisible: () => setModalVisibility(false),\n    visible: showModal,\n    designer: currentDesigner,\n    onConnect: onConnect\n  }), /*#__PURE__*/React.createElement(Table, {\n    style: {\n      width: '100%'\n    },\n    size: \"large\",\n    dataSource: designerList,\n    bordered: false,\n    columns: columns\n  }, /*#__PURE__*/React.createElement(Column, {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\"\n  }), /*#__PURE__*/React.createElement(Column, {\n    title: \"Score\",\n    dataIndex: \"score\",\n    key: \"score\"\n  }), /*#__PURE__*/React.createElement(Column, {\n    title: \"Expiration\",\n    dataIndex: \"expiration\",\n    key: \"expiration\"\n  }), /*#__PURE__*/React.createElement(Column, {\n    title: \"Primary Skill\",\n    dataIndex: \"primary_skill\",\n    key: \"primary_skill\"\n  }), /*#__PURE__*/React.createElement(Column, {\n    title: \"\",\n    dataIndex: \"contact\",\n    key: \"contact\",\n    render: contact => /*#__PURE__*/React.createElement(Button, {\n      onClick: () => onMoreInfo(contact)\n    }, \"More Info\")\n  })));\n};\n\nexport default DesignerList;","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel/client/components/Dashboard/Employer/DesignerList.tsx"],"names":["React","useContext","useState","createCommunication","UserContext","Table","Button","DesignerInfoModal","Column","columns","title","dataIndex","key","DesignerList","props","currentUser","changeUser","designerList","showModal","setModalVisibility","currentDesigner","setCurrentDesigner","undefined","onMoreInfo","user","onConnect","designerId","window","analytics","track","companyName","comm","id","newUser","communications","width","contact"],"mappings":"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","sourcesContent":["import React, {useEffect, useContext, useState} from 'react'\nimport { createCommunication } from '../../../lib/server'\nimport { User, Employer } from '../../../model/model'\nimport {UserContext} from '../../../lib/UserProvider'\nimport {Container} from '../../General/Container'\nimport Loading from '../../General/Loading'\nimport {Table, Button} from 'antd'\nimport DesignerInfoModal from './DesignerInfoModal'\n\n\nconst {Column} = Table\n\ninterface FindDesignerListType {\n    name: string,\n    score: number,\n    expiration: string,\n    primary_skill: string,\n    contact: User\n}\n\n\ninterface DesignerListProps {\n    designerList: FindDesignerListType[]\n}\n\nconst columns = [\n    {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n    },\n    {\n        title: 'Score',\n        dataIndex: 'score',\n        key: 'score',\n    },\n    {\n        title: 'Expiration',\n        dataIndex: 'expiration',\n        key: 'expiration',\n    },\n    {\n        title: 'Experience',\n        dataIndex: 'experience',\n        key: 'experience',\n    },\n    {\n        title: 'Primary Skill',\n        dataIndex: 'primary_skill',\n        key: 'primary_skill',\n    },\n    {\n        title: 'Contact',\n        dataIndex: 'contact',\n        key: 'contact',\n    },\n]\n\nconst DesignerList: React.FC<DesignerListProps> = (props) => {\n    const {currentUser, changeUser}  = useContext(UserContext)\n    const {designerList} = props\n    const [showModal, setModalVisibility] = useState(false) \n    const [currentDesigner, setCurrentDesigner] = useState<User>(undefined) \n\n    const onMoreInfo = (user: User) => {\n        setCurrentDesigner(user)\n        setModalVisibility(true)\n    }\n\n    const onConnect = async (designerId: string) => {\n        window.analytics.track((currentUser as Employer).companyName + ' connects to designer');\n        const comm = await createCommunication(designerId, currentUser.id)\n        setModalVisibility(false)\n        const newUser = {...currentUser, communications: [...currentUser.communications, comm.id]}\n        changeUser(newUser)\n    }\n\n    return (\n        <>\n            <DesignerInfoModal setInvisible={() => setModalVisibility(false)}\n                                visible={showModal}\n                               designer={currentDesigner}\n                               onConnect={onConnect}/>\n            <Table\n                style={{width: '100%'}}\n                size={\"large\"}\n                dataSource={designerList}\n                bordered={false}\n                columns={columns}\n            >\n                <Column title=\"Name\" dataIndex=\"name\" key=\"name\" />\n                <Column title=\"Score\" dataIndex=\"score\" key=\"score\" />\n                <Column title=\"Expiration\" dataIndex=\"expiration\" key=\"expiration\" />\n                <Column title=\"Primary Skill\" dataIndex=\"primary_skill\" key=\"primary_skill\" />\n                <Column title=\"\" dataIndex=\"contact\" key=\"contact\" render={(contact) => (\n                    <Button onClick={() => onMoreInfo(contact)}>\n                        More Info\n                    </Button>\n                )} />\n            </Table>\n        </>)\n}\n\nexport default DesignerList"]},"metadata":{},"sourceType":"module"}