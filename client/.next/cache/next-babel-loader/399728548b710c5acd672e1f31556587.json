{"ast":null,"code":"import React, { useEffect, useState, useContext } from 'react';\nimport { OnboardNavbar } from './OnboardNavbar';\nimport { Container } from './Container';\nimport { Typography } from 'antd';\nimport { NavBarStatus } from '../model/model';\nimport { myFirebase } from \"../lib/firebase\";\nimport FormPersonalData from './OnboardingFlow/Designers/FormPersonalData';\nimport FormBusinessData from './OnboardingFlow/Employers/FormBusinessData';\nimport QuizScreen from './OnboardingFlow/Designers/QuizScreen';\nimport Verification from './OnboardingFlow/Employers/Verification';\nimport EmployerDesigner from './OnboardingFlow/EmployerDesigner';\nimport styled from 'styled-components';\nimport { UserContext } from '../lib/UserProvider';\nimport { getUser, getEmployer, createUser, createEmployer } from '../lib/server';\nconst Title = styled(Typography.Title).withConfig({\n  displayName: \"Onboard__Title\",\n  componentId: \"sc-1f8dn92-0\"\n})([\"padding-top:15px;padding-bottom:35px;\"]);\nexport const Onboard = props => {\n  const [currentStep, changeStep] = useState(0);\n  const [navBarStatus, changeNavbarStatus] = useState(NavBarStatus.Undecided);\n  const [currentUser, changeUser] = useState(undefined);\n  const firebaseUser = useContext(UserContext);\n  useEffect(() => {\n    async function findUser() {\n      const user = await getUser(firebaseUser.uid);\n      const employer = await getEmployer(firebaseUser.uid);\n\n      if (user['user_exists'] == undefined) {\n        changeUser(user);\n        changeNavbarStatus(NavBarStatus.Designer);\n        changeStep(2);\n      } else if (employer['employer_exists'] == undefined) {\n        changeUser(employer);\n        changeNavbarStatus(NavBarStatus.Employer);\n        changeStep(2);\n      } else {\n        // Works for both\n        changeUser({\n          email: firebaseUser.email,\n          id: firebaseUser.uid,\n          firstName: firebaseUser.displayName.substr(0, firebaseUser.displayName.indexOf(' ')),\n          lastName: firebaseUser.displayName.substr(firebaseUser.displayName.indexOf(' ') + 1)\n        });\n      }\n    }\n\n    const firebaseUser = myFirebase.auth().currentUser;\n\n    if (firebaseUser !== null) {\n      findUser();\n    }\n  }, [firebaseUser]);\n\n  const updateUser = async updatedUser => {\n    changeUser(updatedUser);\n    await createUser(updatedUser);\n  };\n\n  const updateEmployer = async updatedUser => {\n    changeUser(updatedUser);\n    await createEmployer(updatedUser);\n  };\n\n  var currentForm;\n  var title;\n\n  switch (currentStep) {\n    case 0:\n      currentForm = /*#__PURE__*/React.createElement(EmployerDesigner, {\n        changeNavbarStatus: newStatus => changeNavbarStatus(newStatus),\n        changeStep: change => changeStep(currentStep + change)\n      });\n      break;\n\n    case 1:\n      if (navBarStatus == NavBarStatus.Designer) {\n        currentForm = /*#__PURE__*/React.createElement(FormPersonalData, {\n          changeNavbarStatus: newStatus => changeNavbarStatus(newStatus),\n          changeStep: change => changeStep(currentStep + change),\n          currentUser: currentUser,\n          changeCurrentUser: async user => await updateUser(user)\n        });\n      } else {\n        currentForm = /*#__PURE__*/React.createElement(FormBusinessData, {\n          changeNavbarStatus: newStatus => changeNavbarStatus(newStatus),\n          changeStep: change => changeStep(currentStep + change),\n          currentUser: currentUser,\n          changeCurrentUser: async user => await updateEmployer(user)\n        });\n      }\n\n      break;\n\n    case 2:\n      if (navBarStatus == NavBarStatus.Designer) {\n        currentForm = /*#__PURE__*/React.createElement(QuizScreen, {\n          changeStep: change => changeStep(currentStep + change),\n          currentUser: currentUser,\n          changeCurrentUser: async user => await updateUser(user)\n        });\n      } else {\n        currentForm = /*#__PURE__*/React.createElement(Verification, {\n          changeStep: change => changeStep(currentStep + change),\n          currentUser: currentUser,\n          changeCurrentUser: async user => await updateEmployer(user)\n        });\n      }\n\n      break;\n  }\n\n  return /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(OnboardNavbar, {\n    status: navBarStatus,\n    currentStep: currentStep\n  }), /*#__PURE__*/React.createElement(Title, null, title), currentForm);\n};","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel-client/components/Onboard.tsx"],"names":["React","useEffect","useState","useContext","OnboardNavbar","Container","Typography","NavBarStatus","myFirebase","FormPersonalData","FormBusinessData","QuizScreen","Verification","EmployerDesigner","styled","UserContext","getUser","getEmployer","createUser","createEmployer","Title","Onboard","props","currentStep","changeStep","navBarStatus","changeNavbarStatus","Undecided","currentUser","changeUser","undefined","firebaseUser","findUser","user","uid","employer","Designer","Employer","email","id","firstName","displayName","substr","indexOf","lastName","auth","updateUser","updatedUser","updateEmployer","currentForm","title","newStatus","change"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react'\nimport {OnboardNavbar} from './OnboardNavbar'\nimport {Container} from './Container'\nimport {Typography} from 'antd'\nimport {User, Employer, NavBarStatus} from '../model/model'\nimport {myFirebase} from \"../lib/firebase\";\nimport FormPersonalData from './OnboardingFlow/Designers/FormPersonalData'\nimport FormBusinessData from './OnboardingFlow/Employers/FormBusinessData'\nimport QuizScreen from './OnboardingFlow/Designers/QuizScreen'\nimport Verification from './OnboardingFlow/Employers/Verification'\nimport EmployerDesigner from './OnboardingFlow/EmployerDesigner'\nimport styled from 'styled-components'\nimport {UserContext} from '../lib/UserProvider'\nimport {getUser,getEmployer, createUser, createEmployer} from '../lib/server'\n\nconst Title = styled(Typography.Title)`\n    padding-top: 15px;\n    padding-bottom: 35px;\n`\n\nexport const Onboard: React.FC<{}> = props => {\n    const [currentStep, changeStep] = useState(0);\n    const [navBarStatus, changeNavbarStatus] = useState<NavBarStatus>(NavBarStatus.Undecided);\n    const [currentUser, changeUser] = useState<User | Employer | undefined>(undefined);\n    const firebaseUser = useContext(UserContext)\n\n    useEffect(() => {\n        async function findUser() {\n            const user = await getUser(firebaseUser.uid)\n            const employer = await getEmployer(firebaseUser.uid)\n\n            if (user['user_exists'] == undefined) {\n                changeUser(user as User);\n                changeNavbarStatus(NavBarStatus.Designer)\n                changeStep(2)\n            } else if (employer['employer_exists'] == undefined) {\n                changeUser(employer as Employer);\n                changeNavbarStatus(NavBarStatus.Employer)\n                changeStep(2)\n            } else {\n                // Works for both\n                changeUser({\n                    email: firebaseUser.email,\n                    id: firebaseUser.uid,\n                    firstName: firebaseUser.displayName.substr(0, firebaseUser.displayName.indexOf(' ')),\n                    lastName: firebaseUser.displayName.substr(firebaseUser.displayName.indexOf(' ')+1),\n                });\n            }\n        }\n\n        const firebaseUser = myFirebase.auth().currentUser;\n        if (firebaseUser !== null) {\n            findUser()\n        }\n    }, [firebaseUser]);\n\n    const updateUser = async (updatedUser: User) => {\n        changeUser(updatedUser)\n        await createUser(updatedUser)\n    }\n\n    const updateEmployer = async (updatedUser: User) => {\n        changeUser(updatedUser)\n        await createEmployer(updatedUser)\n    }\n\n    var currentForm;\n    var title;\n    switch (currentStep) {\n        case 0:\n            currentForm = <EmployerDesigner \n                                    changeNavbarStatus={(newStatus) => changeNavbarStatus(newStatus)}\n                                    changeStep={(change) => changeStep(currentStep + change)}/>;\n            break;\n        case 1:\n            if (navBarStatus == NavBarStatus.Designer) {\n                currentForm = <FormPersonalData \n                                    changeNavbarStatus={(newStatus) => changeNavbarStatus(newStatus)}\n                                    changeStep={(change) => changeStep(currentStep + change)}\n                                    currentUser={currentUser}\n                                    changeCurrentUser={async (user) => await updateUser(user)}/>;\n            } else {\n                currentForm = <FormBusinessData \n                                    changeNavbarStatus={(newStatus) => changeNavbarStatus(newStatus)}\n                                    changeStep={(change) => changeStep(currentStep + change)}\n                                    currentUser={currentUser}\n                                    changeCurrentUser={async (user) => await updateEmployer(user)}/>;\n            }\n            break;\n        case 2:\n            if (navBarStatus == NavBarStatus.Designer) {\n                currentForm = <QuizScreen changeStep={(change) => changeStep(currentStep + change)}\n                                     currentUser={currentUser}\n                                     changeCurrentUser={async (user) => await updateUser(user)}/>;\n            } else {\n                currentForm = <Verification changeStep={(change) => changeStep(currentStep + change)}\n                                     currentUser={currentUser}\n                                     changeCurrentUser={async (user) => await updateEmployer(user)}/>;\n            }\n            break;\n    }\n\n    return (\n        <Container>\n            <OnboardNavbar status={navBarStatus} currentStep={currentStep}/>\n            <Title>{title}</Title>\n            {currentForm}\n        </Container>\n    );\n}"]},"metadata":{},"sourceType":"module"}