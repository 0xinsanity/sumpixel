{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport { Button } from 'antd';\nimport { myFirebase } from '../lib/firebase';\nimport { getUser, getEmployer } from '../lib/server';\nimport Router from 'next/router';\nimport * as firebase from 'firebase/app';\nconst AuthConfig = {\n  callbacks: {\n    signInSuccessWithAuthResult: () => false\n  },\n  signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID]\n};\n\nconst Index = () => {\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [userEmployer, setUserEmployer] = useState(undefined);\n  useEffect(() => {\n    myFirebase.auth().onAuthStateChanged(user => {\n      if (user != null) {\n        setIsSignedIn(true);\n        setUserEmployer({\n          email: myFirebase.auth().currentUser.email,\n          id: myFirebase.auth().currentUser.uid,\n          firstName: myFirebase.auth().currentUser.displayName.substr(0, user.displayName.indexOf(' ')),\n          lastName: myFirebase.auth().currentUser.displayName.substr(user.displayName.indexOf(' ') + 1)\n        });\n      }\n    });\n  });\n  useEffect(() => {\n    async function findUser() {\n      if (userEmployer === undefined) return;\n      const user = await getUser(myFirebase.auth().currentUser.uid);\n      const employer = await getEmployer(myFirebase.auth().currentUser.uid);\n\n      if (user['user_exists'] == undefined) {\n        Router.replace('/dashboard_user');\n      } else if (employer['employer_exists'] == undefined) {\n        Router.replace('/dashboard_employer');\n      }\n    }\n\n    findUser();\n  }, [userEmployer]);\n\n  const onClick = () => {\n    Router.replace('/signup');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: '25%',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center'\n    }\n  }, /*#__PURE__*/React.createElement(StyledFirebaseAuth, {\n    uiConfig: AuthConfig,\n    firebaseAuth: myFirebase.auth()\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      paddingTop: 10\n    },\n    type: \"link\"\n  }, \"Haven't made an account? Click here to sign up\"));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel-client/pages/index.tsx"],"names":["React","useEffect","useState","StyledFirebaseAuth","Button","myFirebase","getUser","getEmployer","Router","firebase","AuthConfig","callbacks","signInSuccessWithAuthResult","signInOptions","auth","EmailAuthProvider","PROVIDER_ID","Index","isSignedIn","setIsSignedIn","userEmployer","setUserEmployer","undefined","onAuthStateChanged","user","email","currentUser","id","uid","firstName","displayName","substr","indexOf","lastName","findUser","employer","replace","onClick","paddingTop","display","flexDirection","justifyContent"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport {Button} from 'antd'\nimport {myFirebase} from '../lib/firebase'\nimport {User, Employer} from '../model/model'\nimport {getUser, getEmployer} from '../lib/server'\nimport Router from 'next/router'\nimport * as firebase from 'firebase/app'\n\nconst AuthConfig = {\n    callbacks: {\n        signInSuccessWithAuthResult: () => false\n    },\n    signInOptions: [\n        firebase.auth.EmailAuthProvider.PROVIDER_ID\n    ]\n};\n\nconst Index: React.FC = () => {\n    const [isSignedIn, setIsSignedIn] = useState(false);\n    const [userEmployer, setUserEmployer] = useState<User | Employer | undefined>(undefined);\n    useEffect(() => {\n        myFirebase.auth().onAuthStateChanged(user => {\n            if (user != null) {\n                setIsSignedIn(true)\n                setUserEmployer({\n                    email: myFirebase.auth().currentUser.email,\n                    id: myFirebase.auth().currentUser.uid,\n                    firstName: myFirebase.auth().currentUser.displayName.substr(0, user.displayName.indexOf(' ')),\n                    lastName: myFirebase.auth().currentUser.displayName.substr(user.displayName.indexOf(' ')+1),\n                });\n            }\n        });\n    });\n\n    useEffect(() => {\n        async function findUser() {\n            if (userEmployer === undefined) return\n\n            const user = await getUser(myFirebase.auth().currentUser.uid)\n            const employer = await getEmployer(myFirebase.auth().currentUser.uid)\n\n            if (user['user_exists'] == undefined) {\n                Router.replace('/dashboard_user')\n            } else if (employer['employer_exists'] == undefined) {\n                Router.replace('/dashboard_employer')\n            }\n        }\n        findUser()\n    }, [userEmployer])\n\n    const onClick = () => {\n        Router.replace('/signup')\n    }\n\n    return (\n        <div style={{paddingTop: '25%', display: 'flex', flexDirection: 'column', justifyContent: 'center'}}>\n            <StyledFirebaseAuth\n                uiConfig={AuthConfig}\n                firebaseAuth={myFirebase.auth()}/>\n            <Button style={{paddingTop: 10}} type=\"link\">Haven't made an account? Click here to sign up</Button>\n        </div>\n    );\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}