{"ast":null,"code":"import React, { useEffect, useState, useContext } from 'react';\nimport Router, { useRouter } from 'next/router';\nimport SimpleNavigationBar from '../../components/Profile/SimpleNavigationBar';\nimport Head from 'next/head';\nimport Loading from '../../components/General/Loading';\nimport { getUser, createCommunication, getQAById, getDesignerFromCommunication } from '../../lib/server';\nimport { Background } from '../dashboard_employer';\nimport { Typography, message, Col, Row } from 'antd';\nimport { UserContext } from '../../lib/UserProvider';\nimport TextAboveAnswer from '../../components/Profile/TextAboveAnswer';\nimport Socials from '../../components/Profile/Socials';\nimport styled from 'styled-components';\nimport { storage_ref } from '../../lib/firebase';\nimport { BigBlackButton } from '../../components/General/BigBlackButton';\nimport _ from 'lodash';\nconst TextContainer = styled.div.withConfig({\n  displayName: \"profile_id__TextContainer\",\n  componentId: \"sc-1cojqhm-0\"\n})([\"display:flex;flex-direction:row;width:75%;justify-content:space-between;padding-top:15px;padding-bottom:40px;\"]);\nconst UpperFullContainer = styled.div.withConfig({\n  displayName: \"profile_id__UpperFullContainer\",\n  componentId: \"sc-1cojqhm-1\"\n})([\"display:flex;flex-direction:row;width:100%;justify-content:space-between;align-items:center;padding-right:40px;\"]);\nconst HeaderTitle = styled(Typography.Title).withConfig({\n  displayName: \"profile_id__HeaderTitle\",\n  componentId: \"sc-1cojqhm-2\"\n})([\"font-family:'Mark Pro Bold';padding-bottom:20px;\"]);\nconst Section = styled.div.withConfig({\n  displayName: \"profile_id__Section\",\n  componentId: \"sc-1cojqhm-3\"\n})([\"padding-bottom:52px;\"]);\n\nconst Profile = () => {\n  const {\n    currentUser,\n    changeUser\n  } = useContext(UserContext);\n  const router = useRouter();\n  const {\n    profile_id\n  } = router.query;\n  const [currentProfile, changeCurrentProfile] = useState(undefined);\n  const [profileString, changeProfileString] = useState('Profile');\n  const [qAndA, changeQandA] = useState(null);\n  let showStats = currentUser !== null && currentUser.companyName !== undefined;\n  useEffect(() => {\n    if (profile_id === undefined) {\n      return;\n    }\n\n    getUser(profile_id).then(profile => {\n      getQAById(profile_id).then(qAndA => {\n        changeQandA(qAndA);\n      });\n      showStats = showStats && profile['graded'];\n\n      if (showStats) {\n        changeCurrentProfile(profile);\n      } else {\n        changeCurrentProfile(profile);\n      }\n\n      changeProfileString(profile.firstName + \" \" + profile.lastName);\n      window.analytics.page(profileString);\n    }).catch(error => {\n      console.error(error);\n      Router.push('/');\n    });\n  }, [profile_id]);\n\n  const downloadResume = () => {\n    storage_ref.child('resumes/' + currentProfile.resume).getDownloadURL().then(url => {\n      console.log(url);\n      window.open(url, '_blank');\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const connectWithPerson = async () => {\n    if (showStats) {\n      // TODO: Block employer from pressing connect with designer more than once\n      const communications = await Promise.all(_.map(currentUser.communications, async commId => await getDesignerFromCommunication(commId)));\n\n      if (_.findIndex(communications, comm => comm.id === profile_id) !== -1) {\n        message.info('You have already opened communications with ' + profileString);\n        return;\n      }\n\n      window.analytics.track(currentUser.companyName + ' connects to designer');\n      const comm = await createCommunication(profile_id, currentUser.id);\n      const newUser = { ...currentUser,\n        communications: [...currentUser.communications, comm.id]\n      };\n      changeUser(newUser);\n      Router.push('/dashboard_employer');\n    } else if (currentUser === null || currentUser.isAnonymous) {\n      // Not logged in\n      Router.push('/signup');\n    } else {\n      // Designer logged in\n      message.info('Only Employers can connect with available Designers');\n    }\n  };\n\n  if (currentProfile === undefined || currentProfile === null) {\n    return /*#__PURE__*/React.createElement(Loading, null);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Head, null, /*#__PURE__*/React.createElement(\"title\", null, profileString)), /*#__PURE__*/React.createElement(SimpleNavigationBar, {\n    subtitle: profileString\n  }, /*#__PURE__*/React.createElement(UpperFullContainer, null, /*#__PURE__*/React.createElement(TextContainer, null, /*#__PURE__*/React.createElement(TextAboveAnswer, {\n    above: 'Desired Salary',\n    below: currentProfile.salary\n  }), /*#__PURE__*/React.createElement(TextAboveAnswer, {\n    above: 'Preferred Role',\n    below: currentProfile.preferredRole\n  }), /*#__PURE__*/React.createElement(TextAboveAnswer, {\n    above: 'Quiz',\n    below: currentProfile.designType\n  }), /*#__PURE__*/React.createElement(TextAboveAnswer, {\n    above: 'Portfolio',\n    link: currentProfile.portfolio,\n    below: 'Website'\n  }), /*#__PURE__*/React.createElement(TextAboveAnswer, {\n    above: 'Resume',\n    onClick: downloadResume,\n    below: 'Download'\n  }), /*#__PURE__*/React.createElement(TextAboveAnswer, {\n    above: 'Visa Status',\n    below: currentProfile.visa\n  }), /*#__PURE__*/React.createElement(Socials, {\n    linkedin: currentProfile.linkedin,\n    dribbble: currentProfile.dribbble\n  })), /*#__PURE__*/React.createElement(BigBlackButton, {\n    style: {\n      height: 50\n    },\n    onClick: connectWithPerson\n  }, currentUser === null || currentUser.isAnonymous ? 'Sign Up To ' : null, \"Connect\")), /*#__PURE__*/React.createElement(Background, {\n    style: {\n      height: '100%',\n      padding: 64\n    }\n  }, /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Col, {\n    span: 24\n  }, currentProfile.completedQuiz ? /*#__PURE__*/React.createElement(React.Fragment, null, showStats ? /*#__PURE__*/React.createElement(Section, null, /*#__PURE__*/React.createElement(HeaderTitle, {\n    level: 3\n  }, \"Feedback\"), /*#__PURE__*/React.createElement(TextAboveAnswer, {\n    style: {\n      paddingBottom: 32\n    },\n    above: 'Score',\n    below: currentProfile.grade.score + '/10'\n  }), /*#__PURE__*/React.createElement(TextAboveAnswer, {\n    belowTextStyle: {\n      maxWidth: 'max-content'\n    },\n    above: 'Response',\n    below: currentProfile.grade.response\n  })) : null, /*#__PURE__*/React.createElement(Section, {\n    style: {\n      paddingBottom: 0\n    }\n  }, /*#__PURE__*/React.createElement(HeaderTitle, {\n    level: 3\n  }, \"Questions\"), _.map(qAndA, ({\n    question,\n    answer\n  }) => {\n    return /*#__PURE__*/React.createElement(TextAboveAnswer, {\n      style: {\n        paddingBottom: 32\n      },\n      belowTextStyle: {\n        maxWidth: 'max-content'\n      },\n      above: question,\n      below: answer\n    });\n  }))) : /*#__PURE__*/React.createElement(Section, null, /*#__PURE__*/React.createElement(HeaderTitle, {\n    style: {\n      paddingBottom: 0\n    },\n    level: 3\n  }, \"Quiz\"), /*#__PURE__*/React.createElement(Typography.Text, null, \"This user has not completed their quiz yet.\")))))));\n};\n\nexport default Profile;","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel/client/pages/profile/[profile_id].tsx"],"names":["React","useEffect","useState","useContext","Router","useRouter","SimpleNavigationBar","Head","Loading","getUser","createCommunication","getQAById","getDesignerFromCommunication","Background","Typography","message","Col","Row","UserContext","TextAboveAnswer","Socials","styled","storage_ref","BigBlackButton","_","TextContainer","div","UpperFullContainer","HeaderTitle","Title","Section","Profile","currentUser","changeUser","router","profile_id","query","currentProfile","changeCurrentProfile","undefined","profileString","changeProfileString","qAndA","changeQandA","showStats","companyName","then","profile","firstName","lastName","window","analytics","page","catch","error","console","push","downloadResume","child","resume","getDownloadURL","url","log","open","connectWithPerson","communications","Promise","all","map","commId","findIndex","comm","id","info","track","newUser","isAnonymous","salary","preferredRole","designType","portfolio","visa","linkedin","dribbble","height","padding","completedQuiz","paddingBottom","grade","score","maxWidth","response","question","answer"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useContext} from 'react'\nimport Router, { useRouter } from 'next/router'\nimport SimpleNavigationBar from '../../components/Profile/SimpleNavigationBar'\nimport Head from 'next/head'\nimport {User, Employer, QA} from '../../model/model'\nimport Loading from '../../components/General/Loading'\nimport {getUser, createCommunication, getQAById, getDesignerFromCommunication} from '../../lib/server'\nimport {Background} from '../dashboard_employer'\nimport {Typography, message, Col, Row} from 'antd'\nimport {UserContext} from '../../lib/UserProvider'\nimport TextAboveAnswer from '../../components/Profile/TextAboveAnswer'\nimport Socials from '../../components/Profile/Socials'\nimport styled from 'styled-components'\nimport {storage_ref} from '../../lib/firebase'\nimport {Communication} from '../../model/model'\nimport {BigBlackButton} from '../../components/General/BigBlackButton'\nimport _ from 'lodash'\n\nconst TextContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 75%;\n    justify-content: space-between;\n    padding-top: 15px;\n    padding-bottom: 40px;\n`\n\nconst UpperFullContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    justify-content: space-between;\n    align-items: center;\n    padding-right: 40px;\n`\n\nconst HeaderTitle = styled(Typography.Title)`\n    font-family: 'Mark Pro Bold';\n    padding-bottom: 20px;\n`\n\nconst Section = styled.div`\n    padding-bottom: 52px;\n`\n\nconst Profile: React.FC = () => {\n    const {currentUser, changeUser}  = useContext(UserContext)\n    const router = useRouter()\n    const { profile_id } = router.query\n    const [currentProfile, changeCurrentProfile]  = useState<User>(undefined)\n    const [profileString, changeProfileString] = useState<string>('Profile')\n    const [qAndA, changeQandA] = useState<QA[]>(null)\n    let showStats = currentUser !== null && ((currentUser as Employer).companyName !== undefined)\n\n\n    useEffect(() => {\n        if (profile_id === undefined) {\n            return\n        }\n\n        getUser(profile_id as string).then((profile: User) => {\n            getQAById(profile_id as string).then((qAndA: QA[]) => {\n                changeQandA(qAndA)\n            })\n            showStats = showStats && profile['graded']\n            if (showStats) {\n                changeCurrentProfile(profile)\n            } else {\n                changeCurrentProfile(profile)\n            }\n            changeProfileString(profile.firstName + \" \" + profile.lastName)\n            window.analytics.page(profileString)\n        }).catch((error) => {\n            console.error(error)\n            Router.push('/')\n        })\n    }, [profile_id])\n\n    const downloadResume = () => {\n        storage_ref.child('resumes/' + currentProfile.resume).getDownloadURL().then(url => {\n            console.log(url)\n            window.open(url, '_blank')\n        }).catch((error) => {\n            console.error(error)\n        })\n    }\n\n    const connectWithPerson = async () => {\n        if (showStats) {\n            // TODO: Block employer from pressing connect with designer more than once\n            const communications = await Promise.all(_.map(currentUser.communications, async (commId) => \n                await getDesignerFromCommunication(commId)\n            ))\n\n            if (_.findIndex(communications, (comm: User) => comm.id === profile_id) !== -1) {\n                message.info('You have already opened communications with ' + profileString)\n                return\n            }\n            window.analytics.track((currentUser as Employer).companyName + ' connects to designer');\n            const comm = await createCommunication(profile_id as string, currentUser.id)\n            const newUser = {...currentUser, communications: [...currentUser.communications, comm.id]}\n            changeUser(newUser)\n            Router.push('/dashboard_employer')\n        } else if (currentUser === null || (currentUser as Employer).isAnonymous) {\n            // Not logged in\n            Router.push('/signup')\n        } else {\n            // Designer logged in\n            message.info('Only Employers can connect with available Designers')\n        }\n    }\n\n    if (currentProfile === undefined || currentProfile === null) {\n        return (<Loading />)\n    }\n\n    return (<>\n                <Head>\n                    <title>{profileString}</title>\n                </Head>\n                <SimpleNavigationBar \n                    subtitle={profileString}\n                >\n                    <UpperFullContainer>\n                        <TextContainer>\n                            <TextAboveAnswer above={'Desired Salary'} below={currentProfile.salary}/>\n                            <TextAboveAnswer above={'Preferred Role'} below={currentProfile.preferredRole}/>\n                            <TextAboveAnswer above={'Quiz'} below={currentProfile.designType}/>\n                            <TextAboveAnswer above={'Portfolio'} link={currentProfile.portfolio} below={'Website'}/>\n                            <TextAboveAnswer above={'Resume'} onClick={downloadResume} below={'Download'}/>\n                            <TextAboveAnswer above={'Visa Status'} below={currentProfile.visa}/>\n                            <Socials linkedin={currentProfile.linkedin} dribbble={currentProfile.dribbble}/>\n                        </TextContainer>\n                        <BigBlackButton style={{height: 50}} onClick={connectWithPerson}>\n                           {currentUser === null || (currentUser as Employer).isAnonymous ? 'Sign Up To ' : null}Connect\n                        </BigBlackButton>\n                    </UpperFullContainer>\n                    <Background style={{height: '100%', padding: 64}}>\n                        <Row>\n                            <Col span={24}>\n                                {currentProfile.completedQuiz ? \n                                    <>\n                                        {showStats ? \n                                            <Section>\n                                                <HeaderTitle level={3}>Feedback</HeaderTitle>\n                                                <TextAboveAnswer style={{paddingBottom: 32}} above={'Score'} below={currentProfile.grade.score + '/10'}/>\n                                                <TextAboveAnswer belowTextStyle={{maxWidth: 'max-content'}} above={'Response'} below={currentProfile.grade.response}/>\n                                            </Section>\n                                        : null}\n                                        <Section style={{paddingBottom: 0}}>\n                                            <HeaderTitle level={3}>Questions</HeaderTitle>\n                                            {_.map(qAndA, ({question, answer}) => {\n                                                return (<TextAboveAnswer style={{paddingBottom: 32}} belowTextStyle={{maxWidth: 'max-content'}} above={question} below={answer}/>)\n                                            })}\n                                            \n                                        </Section>\n                                    </>\n                                :\n                                <Section>\n                                    <HeaderTitle style={{paddingBottom: 0}} level={3}>Quiz</HeaderTitle>\n                                    <Typography.Text>This user has not completed their quiz yet.</Typography.Text>\n                                </Section>\n                                }\n                                \n                            </Col>\n                        </Row>\n                    </Background>\n                </SimpleNavigationBar>\n            </>)\n}\n\nexport default Profile"]},"metadata":{},"sourceType":"module"}