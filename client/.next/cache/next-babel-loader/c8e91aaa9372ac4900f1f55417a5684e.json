{"ast":null,"code":"import React, { useState } from 'react';\nimport { PageHeader, Button, Tabs, message } from 'antd';\nimport { myFirebase } from '../../lib/firebase';\nimport Router from 'next/router';\nimport Loading from '../General/Loading';\nconst {\n  TabPane\n} = Tabs;\n\nconst NavigationBar = props => {\n  const {\n    title,\n    subtitle,\n    footer\n  } = props;\n  const [loading, setLoading] = useState(false);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loading, null);\n  }\n\n  return /*#__PURE__*/React.createElement(PageHeader, {\n    title: title,\n    subTitle: subtitle,\n    extra: [/*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: async () => {\n        setLoading(true);\n        myFirebase.auth().signOut().then(() => {\n          setLoading(false);\n          Router.replace('/');\n        }).catch(error => {\n          message.error(error.message);\n        });\n      }\n    }, \"Logout\")],\n    footer: footer\n  });\n};\n\nexport default NavigationBar;","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel-client/components/Dashboard/NavigationBar.tsx"],"names":["React","useState","PageHeader","Button","Tabs","message","myFirebase","Router","Loading","TabPane","NavigationBar","props","title","subtitle","footer","loading","setLoading","auth","signOut","then","replace","catch","error"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,UAAR,EAAoBC,MAApB,EAA4BC,IAA5B,EAAkCC,OAAlC,QAAgD,MAAhD;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,MAAM;AAACC,EAAAA;AAAD,IAAYL,IAAlB;;AAQA,MAAMM,aAA2C,GAAIC,KAAD,IAAW;AAC3D,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,MAA4BH,KAAlC;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;;AAEA,MAAIc,OAAJ,EAAa;AACT,wBAAQ,oBAAC,OAAD,OAAR;AACH;;AAED,sBACI,oBAAC,UAAD;AACQ,IAAA,KAAK,EAAEH,KADf;AAEQ,IAAA,QAAQ,EAAEC,QAFlB;AAGQ,IAAA,KAAK,EAAE,cACH,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAE,YAAY;AACxCG,QAAAA,UAAU,CAAC,IAAD,CAAV;AACAV,QAAAA,UAAU,CAACW,IAAX,GAAkBC,OAAlB,GAA4BC,IAA5B,CAAiC,MAAM;AACnCH,UAAAA,UAAU,CAAC,KAAD,CAAV;AACAT,UAAAA,MAAM,CAACa,OAAP,CAAe,GAAf;AACH,SAHD,EAGGC,KAHH,CAGUC,KAAD,IAAW;AAChBjB,UAAAA,OAAO,CAACiB,KAAR,CAAcA,KAAK,CAACjB,OAApB;AACH,SALD;AAMH;AARD,gBADG,CAHf;AAgBQ,IAAA,MAAM,EAAES;AAhBhB,IADJ;AAmBH,CA3BD;;AA6BA,eAAeJ,aAAf","sourcesContent":["import React, {useState} from 'react'\nimport {PageHeader, Button, Tabs, message} from 'antd'\nimport {myFirebase} from '../../lib/firebase'\nimport Router from 'next/router'\nimport Loading from '../General/Loading'\n\nconst {TabPane} = Tabs\n\ninterface NavigationBarProps {\n    title: string,\n    subtitle: string\n    footer: React.ReactNode\n}\n\nconst NavigationBar: React.FC<NavigationBarProps> = (props) => {\n    const {title, subtitle, footer} = props\n    const [loading, setLoading] = useState(false)\n\n    if (loading) {\n        return (<Loading/>)\n    }\n\n    return (\n        <PageHeader \n                title={title}\n                subTitle={subtitle}\n                extra={[\n                    <Button type=\"primary\" onClick={async () => {\n                        setLoading(true)\n                        myFirebase.auth().signOut().then(() => {\n                            setLoading(false)\n                            Router.replace('/')\n                        }).catch((error) => {\n                            message.error(error.message)\n                        })\n                    }}>\n                        Logout\n                    </Button>\n                ]}\n                footer={footer} />\n    )\n}\n\nexport default NavigationBar"]},"metadata":{},"sourceType":"module"}