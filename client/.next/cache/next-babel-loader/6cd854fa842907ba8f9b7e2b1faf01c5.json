{"ast":null,"code":"import React, { useState, useContext } from 'react';\nimport { Form, Input, Button, Checkbox, Row, Col, Select, message } from 'antd';\nimport _ from 'lodash';\nimport { NavBarStatus } from '../../../model/model';\nimport { UserContext } from '../../../lib/UserProvider';\nimport Loading from '../../General/Loading';\nimport { BigBlackButton } from '../../General/BigBlackButton';\nconst {\n  Option\n} = Select;\n\nconst FormBusinessData = props => {\n  const {\n    changeCurrentUser,\n    changeStep,\n    changeNavbarStatus,\n    modifyProfile\n  } = props;\n  const {\n    currentUser,\n    changeUser\n  } = useContext(UserContext);\n  const [checked, changeChecked] = useState(false);\n  const isModifyProfilePage = modifyProfile !== undefined;\n\n  const goBack = async () => {\n    changeNavbarStatus(NavBarStatus.Undecided);\n    changeStep(-1);\n  };\n\n  if (currentUser == undefined) {\n    return /*#__PURE__*/React.createElement(Loading, null);\n  }\n\n  const getRules = name => {\n    return [{\n      required: !isModifyProfilePage,\n      message: !isModifyProfilePage ? `${name} is required` : ''\n    }];\n  };\n\n  const onFinish = values => {\n    if (!isModifyProfilePage && !checked) {\n      message.error('Please agree to the Terms and Service');\n      return;\n    }\n\n    const newEmployer = {\n      email: currentUser.email,\n      id: currentUser.id,\n      firstName: currentUser.firstName,\n      lastName: currentUser.lastName,\n      companyName: values.companyName,\n      phoneNumber: values.phoneNumber,\n      location: values.location\n    };\n    changeCurrentUser(_.pickBy(newEmployer, _.identity));\n\n    if (isModifyProfilePage) {\n      message.success(\"Your profile has been updated\");\n    } else {\n      changeStep(1);\n    }\n  };\n\n  const onFinishFailed = () => {\n    message.error('There was an error completing your account. Ensure every field is filled out.');\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    name: \"basic\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    style: {\n      marginBottom: 50\n    }\n  }, !isModifyProfilePage ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Name\",\n    name: \"firstName\"\n  }, /*#__PURE__*/React.createElement(Input.Group, null, /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Col, {\n    span: 11\n  }, /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    defaultValue: currentUser.firstName\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 2\n  }), /*#__PURE__*/React.createElement(Col, {\n    span: 11\n  }, /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    defaultValue: currentUser.lastName\n  }))))), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Email\",\n    name: \"email\"\n  }, /*#__PURE__*/React.createElement(Input, {\n    disabled: true,\n    defaultValue: currentUser.email\n  }))) : null, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Company Name\",\n    name: \"companyName\",\n    rules: getRules(\"Company Name\")\n  }, /*#__PURE__*/React.createElement(Input, {\n    defaultValue: modifyProfile ? '' : currentUser.companyName || \"\",\n    placeholder: \"Company Name\"\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Phone Number\",\n    name: \"phoneNumber\",\n    rules: getRules(\"Phone Number\")\n  }, /*#__PURE__*/React.createElement(Input, {\n    defaultValue: modifyProfile ? '' : currentUser.phoneNumber || \"\",\n    placeholder: \"+1 (555) 555-5555\"\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Location\",\n    name: \"location\",\n    rules: getRules(\"Location\")\n  }, /*#__PURE__*/React.createElement(Input, {\n    defaultValue: modifyProfile ? '' : currentUser.location || \"\",\n    placeholder: \"New York City\"\n  })), !isModifyProfilePage ? /*#__PURE__*/React.createElement(Form.Item, {\n    valuePropName: 'checked'\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: checked,\n    onChange: e => changeChecked(e.target.checked)\n  }, \"Agree to The \", /*#__PURE__*/React.createElement(\"a\", {\n    style: {\n      color: '#0000FF'\n    },\n    target: '_blank',\n    href: '/terms'\n  }, \"Terms and Services\"))) : null, /*#__PURE__*/React.createElement(Form.Item, null, /*#__PURE__*/React.createElement(Row, {\n    justify: \"space-between\",\n    align: \"middle\"\n  }, !isModifyProfilePage ? /*#__PURE__*/React.createElement(Button, {\n    type: \"default\",\n    onClick: goBack\n  }, \"Back\") : null, /*#__PURE__*/React.createElement(BigBlackButton, {\n    htmlType: \"submit\"\n  }, isModifyProfilePage ? \"Update Company Profile\" : \"Finish Setup\"))));\n};\n\nexport default FormBusinessData;","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel/client/components/OnboardingFlow/Employers/FormBusinessData.tsx"],"names":["React","useState","useContext","Form","Input","Button","Checkbox","Row","Col","Select","message","_","NavBarStatus","UserContext","Loading","BigBlackButton","Option","FormBusinessData","props","changeCurrentUser","changeStep","changeNavbarStatus","modifyProfile","currentUser","changeUser","checked","changeChecked","isModifyProfilePage","undefined","goBack","Undecided","getRules","name","required","onFinish","values","error","newEmployer","email","id","firstName","lastName","companyName","phoneNumber","location","pickBy","identity","success","onFinishFailed","remember","marginBottom","e","target","color"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react'\nimport { Form, Input, Button, Checkbox, Row, Col, Select, Upload, message, Spin } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport _ from 'lodash'\nimport {User, VisaStatus, NavBarStatus, Employer} from '../../../model/model'\nimport FormProps from '../FormProps'\nimport {UploadFile} from 'antd/lib/upload/interface'\nimport {storage_ref, myFirebase} from '../../../lib/firebase'\nimport {removeUser} from '../../../lib/server'\nimport {UserContext} from '../../../lib/UserProvider'\nimport Loading from '../../General/Loading'\nimport {BigBlackButton} from '../../General/BigBlackButton'\nconst {Option} = Select\n\ninterface FormBusinessDataProps extends FormProps {\n    modifyProfile?: boolean\n}\n\nconst FormBusinessData: React.FC<FormBusinessDataProps> = (props) => {\n    const {changeCurrentUser, changeStep, changeNavbarStatus, modifyProfile} = props\n    const {currentUser, changeUser} = useContext(UserContext)\n    const [checked, changeChecked] = useState(false)\n    const isModifyProfilePage = modifyProfile !== undefined\n\n    const goBack = async () => {\n        changeNavbarStatus(NavBarStatus.Undecided)\n        changeStep(-1)\n    }\n\n    if (currentUser == undefined) {\n        return (<Loading />)\n    }\n\n    const getRules = (name) => {\n        return [{ required: !isModifyProfilePage, message: !isModifyProfilePage ? `${name} is required` : '' }]\n    }\n\n    const onFinish = (values) => {\n        if (!isModifyProfilePage && !checked) {\n            message.error('Please agree to the Terms and Service')\n            return\n        }\n\n        const newEmployer = {\n            email: currentUser.email,\n            id: currentUser.id,\n            firstName: currentUser.firstName,\n            lastName: currentUser.lastName,\n            companyName: values.companyName,\n            phoneNumber: values.phoneNumber,\n            location: values.location\n        }\n\n        changeCurrentUser(_.pickBy(newEmployer, _.identity))\n        if (isModifyProfilePage) {\n            message.success(\"Your profile has been updated\")\n        } else {\n            changeStep(1)\n        }\n    }\n\n    const onFinishFailed = () => {\n        message.error('There was an error completing your account. Ensure every field is filled out.')\n    }\n\n    return (\n        <Form\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            style={{marginBottom: 50}}\n        >\n            {!isModifyProfilePage ? \n            <>\n                <Form.Item\n                    label=\"Name\"\n                    name=\"firstName\"\n                >\n                    <Input.Group>\n                        <Row>\n                            <Col span={11}>\n                                <Input disabled defaultValue={currentUser.firstName}/>\n                            </Col>\n                            <Col span={2}/>\n                            <Col span={11}>\n                                <Input disabled defaultValue={currentUser.lastName}/>\n                            </Col>\n                        </Row>\n                    </Input.Group>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Email\"\n                    name=\"email\"\n                >\n                    <Input disabled defaultValue={currentUser.email}/>\n                </Form.Item>\n            </>\n            : null}\n            \n\n            <Form.Item\n                label=\"Company Name\"\n                name=\"companyName\"\n                rules={getRules(\"Company Name\")}\n            >\n                <Input defaultValue={modifyProfile ? '' : (currentUser as Employer).companyName || \"\"} placeholder=\"Company Name\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Phone Number\"\n                name=\"phoneNumber\"\n                rules={getRules(\"Phone Number\")}\n            >\n                <Input defaultValue={modifyProfile ? '' : (currentUser as Employer).phoneNumber || \"\"} placeholder=\"+1 (555) 555-5555\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Location\"\n                name=\"location\"\n                rules={getRules(\"Location\")}\n            >\n                <Input defaultValue={modifyProfile ? '' : (currentUser as Employer).location || \"\"} placeholder=\"New York City\"/>\n            </Form.Item>\n\n            {!isModifyProfilePage ? \n            <Form.Item \n                valuePropName={'checked'}\n                >\n                    <Checkbox checked={checked} onChange={(e) => changeChecked(e.target.checked)}>Agree to The <a style={{color: '#0000FF'}} target={'_blank'} href={'/terms'}>Terms and Services</a></Checkbox>\n            </Form.Item> \n            : null }\n\n            <Form.Item>\n                <Row justify=\"space-between\" align=\"middle\">\n                    {!isModifyProfilePage ? \n                        <Button type=\"default\" onClick={goBack}>\n                            Back\n                        </Button>\n                    : null}\n                    <BigBlackButton htmlType=\"submit\">\n                        {isModifyProfilePage ? \"Update Company Profile\" : \"Finish Setup\"}\n                    </BigBlackButton>\n                </Row>\n            </Form.Item>\n        </Form>\n    );\n}\n\nexport default FormBusinessData"]},"metadata":{},"sourceType":"module"}