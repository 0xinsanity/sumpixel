{"ast":null,"code":"import React, { useState, useContext } from 'react';\nimport { PageHeader, Button, Tabs, message } from 'antd';\nimport { myFirebase } from '../../lib/firebase';\nimport Router from 'next/router';\nimport Loading from '../General/Loading';\nimport { UserContext } from '../../lib/UserProvider';\nimport styled from 'styled-components';\nconst {\n  TabPane\n} = Tabs;\nconst SumpixelHeader = styled(PageHeader).withConfig({\n  displayName: \"NavigationBar__SumpixelHeader\",\n  componentId: \"sc-14u4r04-0\"\n})([\"background:#DAE2EF;\"]);\nconst LogoutButton = styled(Button).withConfig({\n  displayName: \"NavigationBar__LogoutButton\",\n  componentId: \"sc-14u4r04-1\"\n})([\"\"]);\n\nconst NavigationBar = props => {\n  const {\n    footer\n  } = props;\n  const {\n    currentUser,\n    changeUser\n  } = useContext(UserContext);\n  const [loading, setLoading] = useState(false);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loading, null);\n  }\n\n  return /*#__PURE__*/React.createElement(SumpixelHeader, {\n    title: /*#__PURE__*/React.createElement(\"img\", {\n      height: 47,\n      src: require('../../assets/sumpixel-logo.png')\n    }),\n    extra: [/*#__PURE__*/React.createElement(LogoutButton, {\n      type: \"primary\",\n      onClick: async () => {\n        setLoading(true);\n        myFirebase.auth().signOut().then(() => {\n          changeUser(undefined);\n          setLoading(false);\n          Router.replace('/');\n        }).catch(error => {\n          message.error(error.message);\n        });\n      }\n    }, \"Logout\")],\n    footer: footer\n  });\n};\n\nexport default NavigationBar;","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel/client/components/Dashboard/NavigationBar.tsx"],"names":["React","useState","useContext","PageHeader","Button","Tabs","message","myFirebase","Router","Loading","UserContext","styled","TabPane","SumpixelHeader","LogoutButton","NavigationBar","props","footer","currentUser","changeUser","loading","setLoading","require","auth","signOut","then","undefined","replace","catch","error"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,SAAQC,UAAR,EAAoBC,MAApB,EAA4BC,IAA5B,EAAkCC,OAAlC,QAAgD,MAAhD;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAM;AAACC,EAAAA;AAAD,IAAYP,IAAlB;AAEA,MAAMQ,cAAc,GAAGF,MAAM,CAACR,UAAD,CAAT;AAAA;AAAA;AAAA,2BAApB;AAKA,MAAMW,YAAY,GAAGH,MAAM,CAACP,MAAD,CAAT;AAAA;AAAA;AAAA,QAAlB;;AASA,MAAMW,aAA2C,GAAIC,KAAD,IAAW;AAC3D,QAAM;AAACC,IAAAA;AAAD,MAAWD,KAAjB;AACA,QAAM;AAACE,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAA4BjB,UAAU,CAACQ,WAAD,CAA5C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,KAAD,CAAtC;;AAEA,MAAImB,OAAJ,EAAa;AACT,wBAAQ,oBAAC,OAAD,OAAR;AACH;;AAED,sBACI,oBAAC,cAAD;AACQ,IAAA,KAAK,eAAE;AAAK,MAAA,MAAM,EAAE,EAAb;AAAiB,MAAA,GAAG,EAAEE,OAAO,CAAC,gCAAD;AAA7B,MADf;AAEQ,IAAA,KAAK,EAAE,cACH,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,SAAnB;AAA6B,MAAA,OAAO,EAAE,YAAY;AAC9CD,QAAAA,UAAU,CAAC,IAAD,CAAV;AACAd,QAAAA,UAAU,CAACgB,IAAX,GAAkBC,OAAlB,GAA4BC,IAA5B,CAAiC,MAAM;AACnCN,UAAAA,UAAU,CAACO,SAAD,CAAV;AACAL,UAAAA,UAAU,CAAC,KAAD,CAAV;AACAb,UAAAA,MAAM,CAACmB,OAAP,CAAe,GAAf;AACH,SAJD,EAIGC,KAJH,CAIUC,KAAD,IAAW;AAChBvB,UAAAA,OAAO,CAACuB,KAAR,CAAcA,KAAK,CAACvB,OAApB;AACH,SAND;AAOH;AATD,gBADG,CAFf;AAgBQ,IAAA,MAAM,EAAEW;AAhBhB,IADJ;AAmBH,CA5BD;;AA8BA,eAAeF,aAAf","sourcesContent":["import React, {useState, useContext} from 'react'\nimport {PageHeader, Button, Tabs, message} from 'antd'\nimport {myFirebase} from '../../lib/firebase'\nimport Router from 'next/router'\nimport Loading from '../General/Loading'\nimport { UserContext } from '../../lib/UserProvider'\nimport styled from 'styled-components'\n\nconst {TabPane} = Tabs\n\nconst SumpixelHeader = styled(PageHeader)`\n    background: #DAE2EF;\n\n`\n\nconst LogoutButton = styled(Button)`\n\n`\n\ninterface NavigationBarProps {\n    subtitle: string\n    footer: React.ReactNode\n}\n\nconst NavigationBar: React.FC<NavigationBarProps> = (props) => {\n    const {footer} = props\n    const {currentUser, changeUser} = useContext(UserContext)\n    const [loading, setLoading] = useState(false)\n\n    if (loading) {\n        return (<Loading/>)\n    }\n\n    return (\n        <SumpixelHeader \n                title={<img height={47} src={require('../../assets/sumpixel-logo.png')}/>}\n                extra={[\n                    <LogoutButton type=\"primary\" onClick={async () => {\n                        setLoading(true)\n                        myFirebase.auth().signOut().then(() => {\n                            changeUser(undefined)\n                            setLoading(false)\n                            Router.replace('/')\n                        }).catch((error) => {\n                            message.error(error.message)\n                        })\n                    }}>\n                        Logout\n                    </LogoutButton>\n                ]}\n                footer={footer} />\n    )\n}\n\nexport default NavigationBar"]},"metadata":{},"sourceType":"module"}