{"ast":null,"code":"import axios from 'axios';\nconst SERVER_BASE = 'https://sumpixel-server.herokuapp.com/';\nvar HTTP_Requests;\n\n(function (HTTP_Requests) {\n  HTTP_Requests[\"GET\"] = \"GET\";\n  HTTP_Requests[\"POST\"] = \"POST\";\n  HTTP_Requests[\"PUT\"] = \"PUT\";\n})(HTTP_Requests || (HTTP_Requests = {}));\n\nconst request = async (url, params, method = HTTP_Requests.GET) => {\n  var response;\n\n  switch (method) {\n    case HTTP_Requests.GET:\n      response = await axios.get(SERVER_BASE + url, {\n        params: params\n      });\n      break;\n\n    case HTTP_Requests.POST:\n      response = await axios.post(SERVER_BASE + url, params);\n      break;\n  }\n\n  if (response.status !== 200) {\n    return generateErrorResponse('The server responded with an unexpected status.');\n  }\n\n  const result = response.data;\n  return result;\n};\n\nconst objectToQueryString = obj => {\n  return Object.keys(obj).map(key => key + '=' + obj[key]).join('&');\n};\n\nconst generateErrorResponse = message => {\n  return {\n    status: 'error',\n    message\n  };\n};\n\nexport const didCompleteQuiz = async id => {\n  return await request('user-finished-quiz', {\n    id: id\n  });\n};\nexport const getUser = async id => {\n  return await request('get-user', {\n    id: id\n  });\n};\nexport const setUserCompletedQuiz = async id => {\n  return await request('user-completed-quiz', {\n    id: id\n  }, HTTP_Requests.PUT);\n};\nexport const setUserQuizGraded = async id => {\n  return await request('user-quiz-graded', {\n    id: id\n  }, HTTP_Requests.PUT);\n};\nexport const getEmployer = async id => {\n  return await request('get-employer', {\n    id: id\n  });\n};\nexport const removeUser = async id => {\n  return await request('remove-user', {\n    id: id\n  });\n};\nexport const removeEmployer = async id => {\n  return await request('remove-employer', {\n    id: id\n  });\n};\nexport const createUser = async user => {\n  return await request('create-user', user, HTTP_Requests.POST);\n};\nexport const createEmployer = async employer => {\n  return await request('create-employer', employer, HTTP_Requests.POST);\n};\nexport const createCommunication = async (designerId, employerId) => {\n  return await request('create-new-communication', {\n    designerId: designerId,\n    employerId: employerId\n  }, HTTP_Requests.POST);\n};\nexport const updateDesignerDecision = async (commId, decision) => {\n  return await request('update-designer-decision', {\n    id: commId,\n    designerApprovedTalk: decision\n  }, HTTP_Requests.POST);\n};\nexport const updateEmployerDecision = async (commId, decision) => {\n  return await request('update-designer-decision', {\n    id: commId,\n    decision: decision\n  }, HTTP_Requests.POST);\n};","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel-client/lib/server.tsx"],"names":["axios","SERVER_BASE","HTTP_Requests","request","url","params","method","GET","response","get","POST","post","status","generateErrorResponse","result","data","objectToQueryString","obj","Object","keys","map","key","join","message","didCompleteQuiz","id","getUser","setUserCompletedQuiz","PUT","setUserQuizGraded","getEmployer","removeUser","removeEmployer","createUser","user","createEmployer","employer","createCommunication","designerId","employerId","updateDesignerDecision","commId","decision","designerApprovedTalk","updateEmployerDecision"],"mappings":"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","sourcesContent":["import { User, Employer, EmployerDecisionHire, DesignerDecisionTalk } from \"../model/model\";\nimport axios from 'axios';\n\nconst SERVER_BASE = 'https://sumpixel-server.herokuapp.com/'\n\nenum HTTP_Requests {\n    GET = 'GET',\n    POST = 'POST',\n    PUT = 'PUT'\n}\n\nconst request = async (url: string, params, method: HTTP_Requests = HTTP_Requests.GET) => {\n    var response;\n    switch (method) {\n        case HTTP_Requests.GET:\n            response = await axios.get(SERVER_BASE + url, {params: params});\n            break;\n        case HTTP_Requests.POST:\n            response = await axios.post(SERVER_BASE + url, params);\n            break;\n    }\n\n    if (response.status !== 200) {\n        return generateErrorResponse('The server responded with an unexpected status.');\n    }\n\n    const result = response.data;\n\n    return result;\n\n}\n\nconst objectToQueryString = (obj) => {\n    return Object.keys(obj).map(key => key + '=' + obj[key]).join('&');\n}\n\nconst generateErrorResponse = (message) => {\n    return {\n        status : 'error',\n        message\n    };\n}\n\nexport const didCompleteQuiz = async (id: string) => {\n    return await request('user-finished-quiz', {id: id})\n}\n\nexport const getUser = async (id: string): Promise<User | {user_exists: boolean}> => {\n    return await request('get-user', {id: id})\n}\n\nexport const setUserCompletedQuiz = async (id: string) => {\n    return await request('user-completed-quiz', {id: id}, HTTP_Requests.PUT)\n}\n\nexport const setUserQuizGraded = async (id: string) => {\n    return await request('user-quiz-graded', {id: id}, HTTP_Requests.PUT)\n}\n\nexport const getEmployer = async (id: string): Promise<Employer | {user_exists: boolean}> => {\n    return await request('get-employer', {id: id})\n}\n\nexport const removeUser = async (id: string) => {\n    return await request('remove-user', {id: id})\n}\n\nexport const removeEmployer = async (id: string) => {\n    return await request('remove-employer', {id: id})\n}\n\nexport const createUser = async (user: User) => {\n    return await request('create-user', user, HTTP_Requests.POST)\n}\n\nexport const createEmployer = async (employer: Employer) => {\n    return await request('create-employer', employer, HTTP_Requests.POST)\n}\n\nexport const createCommunication = async (designerId: string, employerId: string) => {\n    return await request('create-new-communication', {designerId: designerId, employerId: employerId }, HTTP_Requests.POST)\n}\n\nexport const updateDesignerDecision = async (commId: string, decision: DesignerDecisionTalk) => {\n    return await request('update-designer-decision', {id: commId, designerApprovedTalk: decision }, HTTP_Requests.POST)\n}\n\nexport const updateEmployerDecision = async (commId: string, decision: EmployerDecisionHire) => {\n    return await request('update-designer-decision', {id: commId, decision: decision }, HTTP_Requests.POST)\n}"]},"metadata":{},"sourceType":"module"}