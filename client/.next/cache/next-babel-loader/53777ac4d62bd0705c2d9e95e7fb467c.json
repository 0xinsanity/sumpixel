{"ast":null,"code":"import { Form, Input, Button, Row, Typography, Col } from 'antd';\nimport React from 'react';\nimport Router from 'next/router';\nimport { BigBlackButton } from '../General/BigBlackButton';\nimport { SumpixelCard } from '../General/SumpixelCard';\n\nconst LoginComponent = props => {\n  const {\n    isSignUp,\n    onFinish,\n    title\n  } = props;\n\n  const onClick = () => {\n    window.analytics.track('Go to Sign Up');\n    Router.replace('/signup');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    }\n  }, /*#__PURE__*/React.createElement(SumpixelCard, null, /*#__PURE__*/React.createElement(Form, {\n    hideRequiredMark: true,\n    name: \"basic\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish\n  }, isSignUp ? /*#__PURE__*/React.createElement(Input.Group, null, /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Col, {\n    span: 11\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"First Name\",\n    name: \"firstName\",\n    rules: [{\n      required: true,\n      message: 'First Name is required'\n    }]\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"First Name\"\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 2\n  }), /*#__PURE__*/React.createElement(Col, {\n    span: 11\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Last Name\",\n    name: \"lastName\",\n    rules: [{\n      required: true,\n      message: 'Last Name is required'\n    }]\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Last Name\"\n  }))))) : null, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Email\",\n    name: \"email\",\n    rules: [{\n      required: true,\n      message: 'Email is required'\n    }]\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Email\"\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Password\",\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: 'Password is required'\n    }]\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    placeholder: \"Password\"\n  }), !isSignUp ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      display: 'flex',\n      justifyContent: 'flex-end'\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      fontFamily: 'Mark Pro',\n      color: \"#000000\",\n      opacity: \"0.5\",\n      textAlign: \"right\",\n      fontSize: \"12px\",\n      padding: \"0\",\n      paddingTop: \"4px\"\n    },\n    onClick: () => {\n      Router.push('/forgotpassword');\n    },\n    type: \"link\"\n  }, \"Forgot Password.\")) : null), /*#__PURE__*/React.createElement(Form.Item, null, /*#__PURE__*/React.createElement(Row, {\n    justify: \"center\"\n  }, /*#__PURE__*/React.createElement(BigBlackButton, {\n    style: {\n      width: '60%',\n      marginTop: 60\n    },\n    type: \"primary\",\n    htmlType: \"submit\"\n  }, title))))), !isSignUp ? /*#__PURE__*/React.createElement(Typography.Text, {\n    style: {\n      fontFamily: 'Mark Pro',\n      fontWeight: 500,\n      paddingTop: 10,\n      textAlign: 'center'\n    }\n  }, \"Don't have an account? \", /*#__PURE__*/React.createElement(Button, {\n    onClick: onClick,\n    style: {\n      padding: 0,\n      fontWeight: 'bold'\n    },\n    type: \"link\"\n  }, \"Sign Up.\")) : null);\n};\n\nexport default LoginComponent;","map":{"version":3,"sources":["/Users/insanity/Documents/personalprojects/sumpixel/client/components/Login/LoginComponent.tsx"],"names":["Form","Input","Button","Row","Typography","Col","React","Router","BigBlackButton","SumpixelCard","LoginComponent","props","isSignUp","onFinish","title","onClick","window","analytics","track","replace","display","flexDirection","remember","required","message","width","justifyContent","fontFamily","color","opacity","textAlign","fontSize","padding","paddingTop","push","marginTop","fontWeight"],"mappings":"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","sourcesContent":["import {Card, Form, Input, Button, Row, Typography, Col } from 'antd'\nimport {UserOutlined, LockOutlined} from '@ant-design/icons'\nimport React, {useState} from 'react'\nimport {NavBarStatus} from '../../model/model'\nimport Router from 'next/router'\nimport { BigBlackButton } from '../General/BigBlackButton'\nimport styled from 'styled-components'\nimport {SumpixelCard} from '../General/SumpixelCard'\n\ninterface LoginComponentProps {\n    isSignUp: boolean\n    onFinish: (values) => void\n    title: string\n}\n\nconst LoginComponent: React.FC<LoginComponentProps> = (props) => {\n    const {isSignUp, onFinish, title} = props\n\n    const onClick = () => {\n        window.analytics.track('Go to Sign Up');\n        Router.replace('/signup')\n    }\n\n    return (\n        <div style={{display: 'flex', flexDirection: 'column'}}>\n            <SumpixelCard>\n                <Form\n                    hideRequiredMark={true}\n                    name=\"basic\"\n                    initialValues={{ remember: true }}\n                    onFinish={onFinish}\n                >\n\n                    {isSignUp ? \n                        \n                            <Input.Group>\n                                <Row>\n                                    <Col span={11}>\n                                        <Form.Item\n                                            label=\"First Name\"\n                                            name=\"firstName\"\n                                            rules={[{ required: true, message: 'First Name is required' }]}\n                                        >\n                                            <Input placeholder=\"First Name\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={2}/>\n                                    <Col span={11}>\n                                        <Form.Item\n                                                label=\"Last Name\"\n                                                name=\"lastName\"\n                                                rules={[{ required: true, message: 'Last Name is required' }]}\n                                            >\n                                            <Input placeholder=\"Last Name\"/>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                            </Input.Group>\n                        \n                    : null}\n\n                    <Form.Item\n                        label=\"Email\"\n                        name=\"email\"\n                        rules={[{ required: true, message: 'Email is required' }]}\n                    >\n                        <Input placeholder=\"Email\"/>\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Password\"\n                        name=\"password\"\n                        rules={[{ required: true, message: 'Password is required' }]}\n                    >\n                        <Input type=\"password\" placeholder=\"Password\"/>\n                        {!isSignUp ? \n                            <div style={{width: '100%', display: 'flex', justifyContent: 'flex-end'}}>\n                                <Button style={{fontFamily: 'Mark Pro',\n                                            color: \"#000000\",\n                                            opacity: \"0.5\",\n                                            textAlign: \"right\",\n                                            fontSize: \"12px\",\n                                            padding: \"0\",\n                                            paddingTop: \"4px\"}} \n                                        onClick={() => {Router.push('/forgotpassword')}} \n                                        type=\"link\">                    \n                                        Forgot Password.\n                                </Button>\n                            </div>\n                        : null}\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Row justify=\"center\">\n                            <BigBlackButton style={{width: '60%', marginTop: 60}} type=\"primary\" htmlType=\"submit\">\n                                {title}\n                            </BigBlackButton>\n                        </Row>\n                    </Form.Item>\n                </Form>\n            </SumpixelCard>\n            {!isSignUp ? \n                <Typography.Text style={{fontFamily: 'Mark Pro', fontWeight: 500, paddingTop: 10, textAlign: 'center'}}>\n                    Don't have an account? <Button onClick={onClick} style={{padding: 0, fontWeight: 'bold'}} type=\"link\">Sign Up.</Button>\n                </Typography.Text>\n            : null}\n        </div>\n    )\n}\n\nexport default LoginComponent"]},"metadata":{},"sourceType":"module"}