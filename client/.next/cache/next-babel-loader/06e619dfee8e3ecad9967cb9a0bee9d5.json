{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Upload, message } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n  const isLt2M = file.size / 1024 / 1024 < 2;\n\n  if (!isLt2M) {\n    message.error('Images must be smaller than 2 Megabytes!');\n  }\n\n  return isLt2M;\n}\n\nexport class AvatarUpload extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      loading: false,\n      file: undefined\n    });\n\n    _defineProperty(this, \"handleChange\", info => {\n      if (info.file.status === 'uploading') {\n        this.setState({\n          loading: true\n        });\n        return;\n      }\n\n      if (info.file.status === 'done') {\n        // Get this url from response in real world.\n        getBase64(info.file.originFileObj, imageUrl => this.setState({\n          file: info.file,\n          loading: false\n        }));\n      }\n    });\n  }\n\n  render() {\n    const uploadButton = /*#__PURE__*/React.createElement(\"div\", null, this.state.loading ? /*#__PURE__*/React.createElement(LoadingOutlined, null) : /*#__PURE__*/React.createElement(PlusOutlined, null), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontFamily: 'Mark Pro'\n      },\n      className: \"ant-upload-text\"\n    }, \"Profile Picture\"));\n    const {\n      file\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Upload, {\n      name: \"avatar\",\n      accept: \".png\",\n      listType: \"picture-card\",\n      className: \"avatar-uploader\",\n      showUploadList: false,\n      beforeUpload: beforeUpload,\n      onChange: this.handleChange\n    }, file ? /*#__PURE__*/React.createElement(\"img\", {\n      src: file.originFileObj,\n      alt: \"avatar\",\n      style: {\n        width: '100%'\n      }\n    }) : uploadButton);\n  }\n\n}","map":{"version":3,"sources":["/Users/insanity/Documents/Sumpixel/sumpixel/client/components/OnboardingFlow/Designers/AvatarUpload.tsx"],"names":["React","Upload","message","LoadingOutlined","PlusOutlined","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","isLt2M","size","error","AvatarUpload","Component","loading","undefined","info","status","setState","originFileObj","imageUrl","render","uploadButton","state","fontFamily","handleChange","width"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,MAAhC;AACA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,mBAA9C;;AAEA,SAASC,SAAT,CAAmBC,GAAnB,EAAwBC,QAAxB,EAAkC;AAChC,QAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,EAAAA,MAAM,CAACE,gBAAP,CAAwB,MAAxB,EAAgC,MAAMH,QAAQ,CAACC,MAAM,CAACG,MAAR,CAA9C;AACAH,EAAAA,MAAM,CAACI,aAAP,CAAqBN,GAArB;AACD;;AAED,SAASO,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,QAAMC,MAAM,GAAGD,IAAI,CAACE,IAAL,GAAY,IAAZ,GAAmB,IAAnB,GAA0B,CAAzC;;AACA,MAAI,CAACD,MAAL,EAAa;AACXb,IAAAA,OAAO,CAACe,KAAR,CAAc,0CAAd;AACD;;AACD,SAAOF,MAAP;AACD;;AAED,OAAO,MAAMG,YAAN,SAA2BlB,KAAK,CAACmB,SAAjC,CAA2C;AAAA;AAAA;;AAAA,mCACxC;AACNC,MAAAA,OAAO,EAAE,KADH;AAENN,MAAAA,IAAI,EAAEO;AAFA,KADwC;;AAAA,0CAMjCC,IAAI,IAAI;AACrB,UAAIA,IAAI,CAACR,IAAL,CAAUS,MAAV,KAAqB,WAAzB,EAAsC;AACpC,aAAKC,QAAL,CAAc;AAAEJ,UAAAA,OAAO,EAAE;AAAX,SAAd;AACA;AACD;;AACD,UAAIE,IAAI,CAACR,IAAL,CAAUS,MAAV,KAAqB,MAAzB,EAAiC;AAC/B;AACAlB,QAAAA,SAAS,CAACiB,IAAI,CAACR,IAAL,CAAUW,aAAX,EAA0BC,QAAQ,IACzC,KAAKF,QAAL,CAAc;AACVV,UAAAA,IAAI,EAAEQ,IAAI,CAACR,IADD;AAEVM,UAAAA,OAAO,EAAE;AAFC,SAAd,CADO,CAAT;AAMD;AACF,KApB+C;AAAA;;AAsBhDO,EAAAA,MAAM,GAAG;AACP,UAAMC,YAAY,gBAChB,iCACG,KAAKC,KAAL,CAAWT,OAAX,gBAAqB,oBAAC,eAAD,OAArB,gBAA2C,oBAAC,YAAD,OAD9C,eAEE;AAAK,MAAA,KAAK,EAAE;AAACU,QAAAA,UAAU,EAAE;AAAb,OAAZ;AAAsC,MAAA,SAAS,EAAC;AAAhD,yBAFF,CADF;AAMA,UAAM;AAAEhB,MAAAA;AAAF,QAAW,KAAKe,KAAtB;AACA,wBACE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,MAAM,EAAE,MAFV;AAGE,MAAA,QAAQ,EAAC,cAHX;AAIE,MAAA,SAAS,EAAC,iBAJZ;AAKE,MAAA,cAAc,EAAE,KALlB;AAME,MAAA,YAAY,EAAEhB,YANhB;AAOE,MAAA,QAAQ,EAAE,KAAKkB;AAPjB,OASGjB,IAAI,gBAAG;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACW,aAAf;AAA8B,MAAA,GAAG,EAAC,QAAlC;AAA2C,MAAA,KAAK,EAAE;AAACO,QAAAA,KAAK,EAAE;AAAR;AAAlD,MAAH,GAA2EJ,YATlF,CADF;AAaD;;AA3C+C","sourcesContent":["import React from 'react'\nimport { Upload, message } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n  const isLt2M = file.size / 1024 / 1024 < 2;\n  if (!isLt2M) {\n    message.error('Images must be smaller than 2 Megabytes!');\n  }\n  return isLt2M;\n}\n\nexport class AvatarUpload extends React.Component {\n  state = {\n    loading: false,\n    file: undefined,\n  };\n\n  handleChange = info => {\n    if (info.file.status === 'uploading') {\n      this.setState({ loading: true });\n      return;\n    }\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, imageUrl =>\n        this.setState({\n            file: info.file,\n            loading: false,\n        }),\n      );\n    }\n  };\n\n  render() {\n    const uploadButton = (\n      <div>\n        {this.state.loading ? <LoadingOutlined /> : <PlusOutlined />}\n        <div style={{fontFamily: 'Mark Pro'}} className=\"ant-upload-text\">Profile Picture</div>\n      </div>\n    );\n    const { file } = this.state;\n    return (\n      <Upload\n        name=\"avatar\"\n        accept={\".png\"} \n        listType=\"picture-card\"\n        className=\"avatar-uploader\"\n        showUploadList={false}\n        beforeUpload={beforeUpload}\n        onChange={this.handleChange}\n      >\n        {file ? <img src={file.originFileObj} alt=\"avatar\" style={{width: '100%'}} /> : uploadButton}\n      </Upload>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}