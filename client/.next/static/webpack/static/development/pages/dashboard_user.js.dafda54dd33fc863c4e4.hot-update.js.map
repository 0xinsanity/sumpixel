{"version":3,"file":"static/webpack/static/development/pages/dashboard_user.js.dafda54dd33fc863c4e4.hot-update.js","sources":["webpack:///./components/OnboardingFlow/Designers/QuizScreen.tsx"],"sourcesContent":["import React, {useContext, useState, useEffect, useRef } from 'react'\nimport { Form, Radio, Button, Checkbox, Row, Col, Select, Upload, message, Typography } from 'antd';\nimport _ from 'lodash'\nimport FormProps from '../FormProps'\nimport {removeUser} from '../../../lib/server'\nimport {RButton} from '../EmployerDesigner'\nimport Router from 'next/router'\nimport {UserContext} from '../../../lib/UserProvider'\nimport styled from 'styled-components'\nimport * as typeformEmbed from '@typeform/embed'\n\nconst Cont = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 100%;\n    margin-top: 20px;\n    height: 60vh;\n`\n\ninterface QuizProp {\n    link: string, \n    name: string,\n    key: number\n}\n\nconst QuizScreen: React.FC<FormProps> = (props) => {\n    const {changeCurrentUser} = props\n    const {currentUser}  = useContext(UserContext)\n    var typeform = useRef(null)\n\n    const designerTypes = [{key: 0, name: \"UI\", link: \"https://sumpixelbiz.typeform.com/to/riENWs?id=\" + currentUser.id}, \n                            {key: 1, name: \"UX\", link: \"https://sumpixelbiz.typeform.com/to/TqV8Jo?id=\" + currentUser.id}, \n                            {key: 2, name: \"Brand\", link: \"https://sumpixelbiz.typeform.com/to/BOBhxP?id=\" + currentUser.id}, \n                            {key: 3, name: \"Product\", link: \"https://sumpixelbiz.typeform.com/to/irGM8E?id=\" + currentUser.id}]\n\n    const [currentQuiz, changeQuiz] = useState<QuizProp>(designerTypes[0])\n\n    const submit = () => {\n        window.analytics.track('Completed Quiz');\n        currentUser[\"designType\"] = currentQuiz.name\n        currentUser[\"completedQuiz\"] = true\n        changeCurrentUser(currentUser)\n        Router.replace('/dashboard_user')\n    }\n\n    useEffect(() => {\n        if (typeform) {\n            typeformEmbed.makeWidget(typeform.current, currentQuiz.link, {\n                hideFooter: true,\n                hideHeaders: true,\n                opacity: 1,\n                onSubmit: submit\n            });\n        }\n    }, [currentQuiz])\n\n    const onChange = (key: number) => {\n        changeQuiz(designerTypes[key])\n    }\n\n    return (\n        <Cont>\n            <Typography.Title style={{textAlign: 'center'}} level={4}>\n                Choose a Design Type and Take Your Quiz!\n            </Typography.Title>\n            <Col style={{marginTop: 10, marginBottom: 20, display: 'flex', justifyContent: 'center'}}>\n                <Radio.Group onChange={(e) => onChange(e.target.value)} value={currentQuiz.key}>\n                    {_.map(designerTypes, (type: QuizProp) => {\n                        return <RButton style={{fontSize: 12, paddingBottom: 10}} value={type.key}>{type.name}</RButton>\n                    })}\n                </Radio.Group>\n                \n            </Col>\n            <div style={{position: 'relative', width: '100%', height: '100%'}} ref={typeform}/>\n        </Cont>\n    );\n}\n\nexport default QuizScreen"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAcA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}