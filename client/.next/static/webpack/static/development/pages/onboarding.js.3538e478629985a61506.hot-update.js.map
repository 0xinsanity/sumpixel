{"version":3,"file":"static/webpack/static/development/pages/onboarding.js.3538e478629985a61506.hot-update.js","sources":["webpack:///./components/OnboardingFlow/Designers/FormPersonalData.tsx"],"sourcesContent":["import React, {useState, useContext} from 'react'\nimport { Form, Input, Button, Checkbox, Row, Col, Select, Upload, message, Radio, Avatar } from 'antd';\nimport { UploadOutlined, UserOutlined } from '@ant-design/icons';\nimport _ from 'lodash'\nimport {User, VisaStatus, NavBarStatus, UNIVERSAL_COLOR, PricingModel} from '../../../model/model'\nimport FormProps from '../FormProps'\nimport {UploadFile} from 'antd/lib/upload/interface'\nimport {storage_ref, myFirebase} from '../../../lib/firebase'\nimport {removeUser} from '../../../lib/server'\nimport {UserContext} from '../../../lib/UserProvider'\nimport Loading from '../../General/Loading'\nimport {BigBlackButton} from '../../General/BigBlackButton'\nimport Router from 'next/router';\nimport OpenPage from '../../General/OpenPage'\nimport {RButton} from '../EmployerDesigner'\nimport styled from 'styled-components'\nimport MaskedInput from 'antd-mask-input'\nimport {LocationAutocomplete} from '../../General/LocationAutocomplete'\nimport {AvatarUpload} from './AvatarUpload'\nconst {Option} = Select\n\nconst VerticalRButton = styled(RButton)`\n    display: block;\n    height: 30px;\n    line-height: 30px;\n    text-align: center;\n    margin-bottom: 16px;\n`\n\ninterface FormPersonalDataProps extends FormProps {\n    modifyProfile?: boolean\n}\n\nconst FormPersonalData: React.FC<FormPersonalDataProps> = (props) => {\n    const {changeCurrentUser, modifyProfile} = props\n    const isModifyProfilePage = modifyProfile !== undefined\n    const {currentUser, changeUser, loading, setLoading}  = useContext(UserContext)\n    const [checked, changeChecked] = useState(false)\n    const [fileList, updateFileList] = useState<UploadFile[]>([])\n\n    if (currentUser == undefined) {\n        return (<Loading />)\n    }\n\n    const getRules = (name) => {\n        return [{ required: !isModifyProfilePage, message: !isModifyProfilePage ? `${name} is required` : '' }]\n    }\n\n    const uploadProfilePic = () => {\n\n    }\n\n    const updateUser = (values) => {\n        const newUser = {\n            email: currentUser.email,\n            id: currentUser.id,\n            firstName: currentUser.firstName,\n            lastName: currentUser.lastName,\n            phoneNumber: values.phoneNumber,\n            location: values.location,\n            salary: values.salary,\n            portfolio: values.portfolio,\n            preferredRole: values.preferredRole,\n            visa: values.visa_status,\n            resume: currentUser.id + '.pdf',\n            profilePic: currentUser.id + '.jpg',\n            linkedin: values.linkedin,\n            dribbble: values.dribbble\n        }\n        console.table(_.pickBy(newUser, _.identity))\n\n        changeCurrentUser(_.pickBy(newUser, _.identity))\n\n        if (isModifyProfilePage) {\n            message.success(\"Profile Updated\")\n        } else {\n            OpenPage(setLoading, '/dashboard_user')\n        }\n    }\n\n    const onFinish = (values) => {\n        if (!isModifyProfilePage && !checked) {\n            message.error('Please agree to the Terms of Service')\n            return\n        }\n\n        const res = values.resume\n        console.log(res)\n        if (res === undefined) {\n            updateUser(values)\n        } else {\n            storage_ref.child('resumes/' + currentUser.id + '.pdf').put(res.file[\"originFileObj\"]).then((snapshot) => {\n                updateUser(values)\n            })\n        }    \n    }\n\n    const viewProfile = () => {\n        OpenPage(setLoading, '/profile/' + currentUser.id)\n    }\n\n    const onFinishFailed = (values) => {\n        console.table(values)\n        message.error('There was an error completing your account. Ensure every field is filled out.')\n    }\n\n    return (\n            <Form\n                id=\"designer_form\"\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                style={{marginBottom: 50}}\n                onFinishFailed={onFinishFailed}\n                onFinish={onFinish}\n            >\n                <Form.Item\n                    label=\"\"\n                    name=\"profile\"\n                >   \n                    <div style={{width: '100%', justifyContent: 'center', display: 'flex' }}>\n                        <AvatarUpload/>\n                    </div>\n                </Form.Item>\n                {!isModifyProfilePage ? \n                    <>\n                        <Input.Group>\n                            <Row>\n                                <Col span={11}>\n                                    <Form.Item\n                                        label=\"First Name\"\n                                        name=\"firstName\"\n                                    >\n                                        <Input disabled placeholder=\"First Name\" defaultValue={currentUser.firstName}/>\n                                    </Form.Item>\n                                </Col>\n                                <Col span={2}/>\n                                <Col span={11}>\n                                    <Form.Item\n                                            label=\"Last Name\"\n                                            name=\"lastName\"\n                                    >\n                                        <Input disabled placeholder=\"Last Name\" defaultValue={currentUser.lastName}/>\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                        </Input.Group>\n\n                        <Form.Item\n                            label=\"Email\"\n                            name=\"email\"\n                        >\n                            <Input disabled defaultValue={currentUser.email}/>\n                        </Form.Item>\n                    </>\n                : null}\n\n                <Form.Item\n                    label=\"Phone Number\"\n                    name=\"phoneNumber\"\n                    rules={getRules(\"Phone Number\")}\n                >\n                    <MaskedInput mask=\"+1 (111) 111-1111\" defaultValue={isModifyProfilePage ? '' : currentUser.phoneNumber || \"\"} placeholder=\"+1 (555) 555-5555\"/>\n                </Form.Item>\n\n                <LocationAutocomplete isModifyProfilePage={isModifyProfilePage} defaultValue={isModifyProfilePage ? '' : currentUser.location || \"\"}/>\n\n                <Form.Item\n                    label=\"Salary\"\n                    name=\"salary\"\n                    rules={getRules(\"Salary\")}\n                >\n\n                    <Radio.Group buttonStyle=\"solid\" style={{width: '100%'}}>\n                        <VerticalRButton value={PricingModel.SMALL}>{PricingModel.SMALL}</VerticalRButton>\n                        <VerticalRButton value={PricingModel.MEDIUM}>{PricingModel.MEDIUM}</VerticalRButton>\n                        <VerticalRButton value={PricingModel.LARGE}>{PricingModel.LARGE}</VerticalRButton>\n                    </Radio.Group>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Preferred Role\"\n                    name=\"preferredRole\"\n                    rules={getRules(\"Preferred Role\")}\n                >\n                    <Input defaultValue={isModifyProfilePage ? '' : (currentUser as User).preferredRole || \"\"} placeholder=\"Senior UI Designer\"/>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Portfolio\"\n                    name=\"portfolio\"\n                    rules={getRules(\"Portfolio\")}\n                >\n                    <Input defaultValue={isModifyProfilePage ? '' : (currentUser as User).portfolio || \"\"} placeholder=\"https://www.myportfolio.com\"/>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Visa Status\"\n                    name=\"visa_status\"\n                    rules={getRules(\"Visa Status\")}\n                    \n                >\n                    <Select defaultValue={modifyProfile ? '' : (currentUser as User).visa || \"\"} placeholder=\"Select an option:\">\n                        {_.map(VisaStatus, (status) => {\n                            return <Option style={{fontFamily: 'Mark Pro'}} value={status}>{status}</Option>\n                        })}\n                    </Select>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Resume\"\n                    name=\"resume\"\n                    rules={getRules(\"Resume\")}\n                >\n                    <Upload \n                        name={'file'} \n                        accept={\".pdf\"} \n                        fileList={fileList}\n                        onChange={(info) => {\n                            let fileList_update = [...info.fileList];\n                            fileList_update = fileList_update.slice(-1);\n\n                            fileList_update = fileList_update.map(file => {\n                                if (file.response) {\n                                    file.url = file.response.url;\n                                }\n                                if (file.status === 'error') {\n                                    // TODO: Find better way of handling this\n                                    file.status = 'done'\n                                }\n                                return file;\n                            });\n\n                            if (info.file.status === 'done') {\n                                message.success(`${info.file.name} file uploaded successfully`);\n                            } else if (info.file.status === 'error') {\n                                message.success(`${info.file.name} file uploaded successfully`);\n                            }\n\n                            updateFileList(fileList_update)\n                        }}>\n                        <Button style={{width: '100%', fontFamily: 'Mark Pro'}}>\n                            <UploadOutlined /> {!isModifyProfilePage ? \"Click to Upload\" : \"Upload New Resume\"}\n                        </Button>\n                    </Upload>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"LinkedIn\"\n                    name=\"linkedin\"\n                >\n                    <Input defaultValue={modifyProfile ? '' : (currentUser as User).linkedin || \"\"} placeholder=\"https://www.linkedin.com/in/username\"/>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Dribbble\"\n                    name=\"dribbble\"\n                >\n                    <Input defaultValue={modifyProfile ? '' : (currentUser as User).dribbble || \"\"} placeholder=\"https://dribbble.com/username\"/>\n                </Form.Item>\n\n                {!isModifyProfilePage ? \n                    <Form.Item \n                        valuePropName={'checked'}\n                    >\n                        <Checkbox style={{fontFamily: 'Mark Pro'}} checked={checked} onChange={(e) => changeChecked(e.target.checked)}>Agree to the <a style={{color: UNIVERSAL_COLOR}} target={'_blank'} href={'/terms'}>Terms of Services</a></Checkbox>\n                </Form.Item> \n                : null}\n\n                    \n                {isModifyProfilePage ? \n                        <Form.Item>\n                        <Row justify=\"space-between\" align=\"middle\">\n                            <>\n                                <BigBlackButton type=\"default\" onClick={viewProfile}>\n                                    View Profile\n                                </BigBlackButton>\n                                <BigBlackButton htmlType=\"submit\">\n                                    Update Profile\n                                </BigBlackButton>\n                            </>\n                        </Row>\n                    </Form.Item> \n                : null}\n                    \n            \n            </Form>\n    );\n}\n\nexport default FormPersonalData"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAWA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AANA;AASA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAEA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAOA;AACA;AAFA;AAIA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AA2BA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAFA;AAIA;AAAA;AAAA;AAIA;AACA;AAFA;AAIA;AAAA;AAAA;AAKA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAEA;AAAA;AAAA;AAGA;AAAA;AAWA;AACA;AACA;;;;A","sourceRoot":""}