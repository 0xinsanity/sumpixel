{"version":3,"file":"static/webpack/static/development/pages/profile/[profile_id].js.88b6e1a8e222c0bef982.hot-update.js","sources":["webpack:///./pages/profile/[profile_id].tsx"],"sourcesContent":["import React, {useEffect, useState, useContext} from 'react'\nimport Router, { useRouter } from 'next/router'\nimport SimpleNavigationBar from '../../components/Profile/SimpleNavigationBar'\nimport Head from 'next/head'\nimport {User, Employer, QA} from '../../model/model'\nimport Loading from '../../components/General/Loading'\nimport {getUser, createCommunication, getQAById, getDesignerFromCommunication} from '../../lib/server'\nimport {Background} from '../dashboard_employer'\nimport {Typography, message, Col, Row} from 'antd'\nimport {UserContext} from '../../lib/UserProvider'\nimport TextAboveAnswer from '../../components/Profile/TextAboveAnswer'\nimport Socials from '../../components/Profile/Socials'\nimport styled from 'styled-components'\nimport {storage_ref} from '../../lib/firebase'\nimport {Communication} from '../../model/model'\nimport {BigBlackButton} from '../../components/General/BigBlackButton'\nimport _ from 'lodash'\nimport OpenPage from '../../components/General/OpenPage'\n\nconst TextContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 75%;\n    justify-content: space-between;\n    padding-top: 15px;\n    padding-bottom: 40px;\n`\n\nconst UpperFullContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    justify-content: space-between;\n    align-items: center;\n    padding-right: 40px;\n`\n\nconst HeaderTitle = styled(Typography.Title)`\n    font-family: 'Mark Pro Bold';\n    padding-bottom: 20px;\n`\n\nconst Section = styled.div`\n    padding-bottom: 52px;\n`\n\nconst Profile: React.FC = () => {\n    const {currentUser, changeUser, setLoading}  = useContext(UserContext)\n    const router = useRouter()\n    const { profile_id } = router.query\n    const [id, changeId] = useState(undefined)\n    const [currentProfile, changeCurrentProfile]  = useState<User>(undefined)\n    const [profileString, changeProfileString] = useState<string>('Profile')\n    const [qAndA, changeQandA] = useState<QA[]>(null)\n    const [profileLink, changeProfileLink] = useState<string>(undefined)\n    let showStats = currentUser !== null && ((currentUser as Employer).companyName !== undefined)\n\n    useEffect(() => {\n        if (profile_id !== undefined) {\n            console.log('id'+profile_id)\n            changeId(profile_id as string)\n        }\n    }, [profile_id])\n\n\n    useEffect(() => {\n        if (id === undefined) return\n        \n        setLoading(true)\n        console.log('here1')\n        getUser(id).then((profile: User) => {\n            console.log('here')\n            getQAById(id).then((qAndA: QA[]) => {\n                changeQandA(qAndA)\n            })\n            storage_ref.child('profilePic/' + profile.profilePic).getDownloadURL().then((url => {\n                changeProfileLink(url)\n            })).catch((error) => {\n                console.error(error)\n            })\n            showStats = showStats && profile['graded']\n            if (showStats) {\n                changeCurrentProfile(profile)\n            } else {\n                changeCurrentProfile(profile)\n            }\n            changeProfileString(profile.firstName + \" \" + profile.lastName)\n            setLoading(false)\n            window.analytics.page(profileString)\n        }).catch((error) => {\n            console.error('ERROR IS HERE' + error)\n            setLoading(false)\n            //OpenPage(setLoading, '/')\n        })\n    }, [id])\n\n    const downloadResume = () => {\n        storage_ref.child('resumes/' + currentProfile.resume).getDownloadURL().then(url => {\n            console.log(url)\n            window.open(url, '_blank')\n        }).catch((error) => {\n            console.error(error)\n        })\n    }\n\n    const connectWithPerson = async () => {\n        if (showStats) {\n            // TODO: Block employer from pressing connect with designer more than once\n            const communications = await Promise.all(_.map(currentUser.communications, async (commId) => \n                await getDesignerFromCommunication(commId)\n            ))\n\n            if (_.findIndex(communications, (comm: User) => comm.id === profile_id) !== -1) {\n                message.info('You have already opened communications with ' + profileString)\n                return\n            }\n            window.analytics.track((currentUser as Employer).companyName + ' connects to designer');\n            const comm = await createCommunication(profile_id as string, currentUser.id)\n            const newUser = {...currentUser, communications: [...currentUser.communications, comm.id]}\n            changeUser(newUser)\n            OpenPage(setLoading, '/dashboard_employer')\n        } else if (currentUser === null || (currentUser as Employer).isAnonymous) {\n            // Not logged in\n            OpenPage(setLoading, '/signup')\n        } else {\n            // Designer logged in\n            message.info('Only Employers can connect with available Designers')\n        }\n    }\n\n    if (currentProfile === undefined || currentProfile === null) {\n        return (<></>)\n    }\n\n    var portfolio = currentProfile.portfolio\n    if (!portfolio.includes('//')) {\n        portfolio = \"https://\" + portfolio\n    }\n\n    return (<>\n                <Head>\n                    <title>{profileString}</title>\n                </Head>\n                <SimpleNavigationBar \n                    subtitle={profileString}\n                    avatarSrc={profileLink}\n                >\n                    <UpperFullContainer>\n                        <TextContainer>\n                            <TextAboveAnswer style={{width: 100}} above={'Location'} below={currentProfile.location}/>\n                            <TextAboveAnswer above={'Desired Salary'} below={currentProfile.salary}/>\n                            <TextAboveAnswer above={'Preferred Role'} below={currentProfile.preferredRole}/>\n                            <TextAboveAnswer above={'Quiz'} below={currentProfile.designType}/>\n                            <TextAboveAnswer above={'Portfolio'} link={portfolio} below={'Website'}/>\n                            <TextAboveAnswer above={'Resume'} onClick={downloadResume} below={'Download'}/>\n                            <TextAboveAnswer above={'Visa Status'} below={currentProfile.visa}/>\n                            <Socials linkedin={currentProfile.linkedin} dribbble={currentProfile.dribbble}/>\n                        </TextContainer>\n                        <BigBlackButton style={{height: 50}} onClick={connectWithPerson}>\n                           {currentUser === null || (currentUser as Employer).isAnonymous ? 'Sign Up To ' : null}Connect\n                        </BigBlackButton>\n                    </UpperFullContainer>\n                    <Background style={{height: '100%', padding: 64}}>\n                        <Row>\n                            <Col span={24}>\n                                {currentProfile.completedQuiz ? \n                                    <>\n                                        {showStats ? \n                                            <Section>\n                                                <HeaderTitle level={3}>Feedback</HeaderTitle>\n                                                <TextAboveAnswer style={{paddingBottom: 32}} above={'Score'} below={currentProfile.grade.score + '/10'}/>\n                                                <TextAboveAnswer belowTextStyle={{maxWidth: 'max-content'}} above={'Response'} below={currentProfile.grade.response}/>\n                                            </Section>\n                                        : null}\n                                        <Section style={{paddingBottom: 0}}>\n                                            <HeaderTitle level={3}>Questions</HeaderTitle>\n                                            {_.map(qAndA, ({question, answer}) => {\n                                                return (<TextAboveAnswer style={{paddingBottom: 32}} belowTextStyle={{maxWidth: 'max-content'}} above={question} below={answer}/>)\n                                            })}\n                                            \n                                        </Section>\n                                    </>\n                                :\n                                <Section style={{paddingBottom: 0}}>\n                                    <HeaderTitle style={{paddingBottom: 0}} level={3}>Quiz</HeaderTitle>\n                                    <Typography.Text>This user has not completed their quiz yet.</Typography.Text>\n                                </Section>\n                                }\n                                \n                            </Col>\n                        </Row>\n                    </Background>\n                </SimpleNavigationBar>\n            </>)\n}\n\nexport default Profile"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AAFA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;;;;A","sourceRoot":""}