{"version":3,"file":"static/webpack/static/development/pages/onboarding.js.65197567fbc11908f98f.hot-update.js","sources":["webpack:///./components/General/BackNext.tsx"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport {BigBlackButton} from './BigBlackButton'\nimport {NavBarStatus} from '../../model/model'\nimport {Button, Form} from 'antd'\n\nconst Container = styled.div`\n    border-top: 1px solid #DAE2EF;\n    width: 100%;\n    padding-bottom: 46px;\n    padding-top: 46px;\n    padding-right: 66px;\n    padding-left: 66px;\n    flex-direction: row;\n    justify-content: flex-end;\n    align-items: center;\n    display: flex;\n`\n\nconst Link = styled(Button)`\n    font-family: 'Mark Pro';\n    color: #000;\n    height: 100%;\n    margin-right: 70px;\n`\n\ninterface BackNextProps {\n    backClick: () => void\n    nextClick: () => void\n    status: NavBarStatus\n    currentState: number\n}\n\nconst BackNext: React.FC<BackNextProps> = (props) => {\n    const {backClick, nextClick, status, currentState} = props\n\n    const button_style = {paddingLeft: 67, paddingRight: 67}\n    var button\n    if (currentState === 0) {\n        button = <BigBlackButton style={button_style} onClick={nextClick}>Next</BigBlackButton>\n    } else if (currentState === 1) {\n        if (status === NavBarStatus.Designer) {\n            button = <BigBlackButton form=\"designer_form\" htmlType=\"submit\" style={button_style}>Next</BigBlackButton>\n        } else {\n            button = <BigBlackButton form=\"employer_form\" htmlType=\"submit\" style={button_style}>Next</BigBlackButton>\n        }\n    }\n    return (\n        <Container>\n            <Link onClick={backClick} type={'link'}>Back</Link>\n            {button}\n        </Container>\n    )\n}\n\nexport default BackNext"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AACA;AAaA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}