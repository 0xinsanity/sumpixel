{"version":3,"file":"static/webpack/static/development/pages/onboarding.js.bed099ce42092ac3c929.hot-update.js","sources":["webpack:///./components/OnboardingFlow/Designers/FormPersonalData.tsx","webpack:///./node_modules/antd-mask-input/build/module/index.js","webpack:///./node_modules/antd-mask-input/build/module/lib/MaskedInput.js","webpack:///./node_modules/antd-mask-input/build/module/lib/Pattern.js","webpack:///./node_modules/antd-mask-input/build/module/lib/helpers.js","webpack:///./node_modules/antd-mask-input/build/module/lib/inputmask-core.js"],"sourcesContent":["import React, {useState, useContext} from 'react'\nimport { Form, Input, Button, Checkbox, Row, Col, Select, Upload, message, Radio } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport _ from 'lodash'\nimport {User, VisaStatus, NavBarStatus, UNIVERSAL_COLOR, PricingModel} from '../../../model/model'\nimport FormProps from '../FormProps'\nimport {UploadFile} from 'antd/lib/upload/interface'\nimport {storage_ref, myFirebase} from '../../../lib/firebase'\nimport {removeUser} from '../../../lib/server'\nimport {UserContext} from '../../../lib/UserProvider'\nimport Loading from '../../General/Loading'\nimport {BigBlackButton} from '../../General/BigBlackButton'\nimport Router from 'next/router';\nimport OpenPage from '../../General/OpenPage'\nimport {RButton} from '../EmployerDesigner'\nimport styled from 'styled-components'\nimport MaskedInput from 'antd-mask-input'\nconst {Option} = Select\n\nconst VerticalRButton = styled(RButton)`\n    display: block;\n    height: 30px;\n    line-height: 30px;\n    text-align: center;\n    margin-bottom: 16px;\n`\n\ninterface FormPersonalDataProps extends FormProps {\n    modifyProfile?: boolean\n}\n\nconst FormPersonalData: React.FC<FormPersonalDataProps> = (props) => {\n    const {changeCurrentUser, modifyProfile} = props\n    const isModifyProfilePage = modifyProfile !== undefined\n    const {currentUser, changeUser, loading, setLoading}  = useContext(UserContext)\n    const [checked, changeChecked] = useState(false)\n    const [fileList, updateFileList] = useState<UploadFile[]>([])\n\n    if (currentUser == undefined) {\n        return (<Loading />)\n    }\n\n    const getRules = (name) => {\n        return [{ required: !isModifyProfilePage, message: !isModifyProfilePage ? `${name} is required` : '' }]\n    }\n\n    const updateUser = (values) => {\n        const newUser = {\n            email: currentUser.email,\n            id: currentUser.id,\n            firstName: currentUser.firstName,\n            lastName: currentUser.lastName,\n            phoneNumber: values.phoneNumber,\n            location: values.location,\n            salary: values.salary,\n            portfolio: values.portfolio,\n            preferredRole: values.preferredRole,\n            visa: values.visa_status,\n            resume: currentUser.id + '.pdf',\n            linkedin: values.linkedin,\n            dribbble: values.dribbble\n        }\n        console.table(_.pickBy(newUser, _.identity))\n\n        changeCurrentUser(_.pickBy(newUser, _.identity))\n\n        if (isModifyProfilePage) {\n            message.success(\"Profile Updated\")\n        } else {\n            OpenPage(setLoading, '/dashboard_user')\n        }\n    }\n\n    const onFinish = (values) => {\n        if (!isModifyProfilePage && !checked) {\n            message.error('Please agree to the Terms of Service')\n            return\n        }\n\n        const res = values.resume\n        console.log(res)\n        if (res === undefined) {\n            updateUser(values)\n        } else {\n            storage_ref.child('resumes/' + currentUser.id + '.pdf').put(res.file[\"originFileObj\"]).then((snapshot) => {\n                updateUser(values)\n            })\n        }    \n    }\n\n    const viewProfile = () => {\n        OpenPage(setLoading, '/profile/' + currentUser.id)\n    }\n\n    const onFinishFailed = (values) => {\n        console.table(values)\n        message.error('There was an error completing your account. Ensure every field is filled out.')\n    }\n\n    return (\n            <Form\n                id=\"designer_form\"\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                style={{marginBottom: 50}}\n                onFinishFailed={onFinishFailed}\n                onFinish={onFinish}\n            >\n                {!isModifyProfilePage ? \n                    <>\n                        <Input.Group>\n                            <Row>\n                                <Col span={11}>\n                                    <Form.Item\n                                        label=\"First Name\"\n                                        name=\"firstName\"\n                                    >\n                                        <Input disabled placeholder=\"First Name\" defaultValue={currentUser.firstName}/>\n                                    </Form.Item>\n                                </Col>\n                                <Col span={2}/>\n                                <Col span={11}>\n                                    <Form.Item\n                                            label=\"Last Name\"\n                                            name=\"lastName\"\n                                    >\n                                        <Input disabled placeholder=\"Last Name\" defaultValue={currentUser.lastName}/>\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                        </Input.Group>\n\n                        <Form.Item\n                            label=\"Email\"\n                            name=\"email\"\n                        >\n                            <Input disabled defaultValue={currentUser.email}/>\n                        </Form.Item>\n                    </>\n                : null}\n\n                <Form.Item\n                    label=\"Phone Number\"\n                    name=\"phoneNumber\"\n                    rules={getRules(\"Phone Number\")}\n                >\n                    <MaskedInput mask=\"+1 (111) 111-1111\" defaultValue={isModifyProfilePage ? '' : currentUser.phoneNumber || \"\"} placeholder=\"+1 (555) 555-5555\"/>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Location\"\n                    name=\"location\"\n                    rules={getRules(\"Location\")}\n                >\n                    <Input defaultValue={isModifyProfilePage ? '' : currentUser.location || \"\"} placeholder=\"New York City\"/>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Salary\"\n                    name=\"salary\"\n                    rules={getRules(\"Salary\")}\n                >\n\n                    <Radio.Group buttonStyle=\"solid\" style={{width: '100%'}}>\n                        <VerticalRButton value={PricingModel.SMALL}>{PricingModel.SMALL}</VerticalRButton>\n                        <VerticalRButton value={PricingModel.MEDIUM}>{PricingModel.MEDIUM}</VerticalRButton>\n                        <VerticalRButton value={PricingModel.LARGE}>{PricingModel.LARGE}</VerticalRButton>\n                    </Radio.Group>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Preferred Role\"\n                    name=\"preferredRole\"\n                    rules={getRules(\"Preferred Role\")}\n                >\n                    <Input defaultValue={isModifyProfilePage ? '' : (currentUser as User).preferredRole || \"\"} placeholder=\"UI/UX Designer\"/>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Portfolio\"\n                    name=\"portfolio\"\n                    rules={getRules(\"Portfolio\")}\n                >\n                    <Input defaultValue={isModifyProfilePage ? '' : (currentUser as User).portfolio || \"\"} placeholder=\"https://www.myportfolio.com\"/>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Resume\"\n                    name=\"resume\"\n                    rules={getRules(\"Resume\")}\n                >\n                    <Upload \n                        name={'file'} \n                        accept={\".pdf\"} \n                        fileList={fileList}\n                        onChange={(info) => {\n                            let fileList_update = [...info.fileList];\n                            fileList_update = fileList_update.slice(-1);\n\n                            fileList_update = fileList_update.map(file => {\n                                if (file.response) {\n                                    file.url = file.response.url;\n                                }\n                                if (file.status === 'error') {\n                                    // TODO: Find better way of handling this\n                                    file.status = 'done'\n                                }\n                                return file;\n                            });\n\n                            if (info.file.status === 'done') {\n                                message.success(`${info.file.name} file uploaded successfully`);\n                            } else if (info.file.status === 'error') {\n                                message.success(`${info.file.name} file uploaded successfully`);\n                            }\n\n                            updateFileList(fileList_update)\n                        }}>\n                        <Button style={{fontFamily: 'Mark Pro'}}>\n                            <UploadOutlined /> {!isModifyProfilePage ? \"Click to Upload\" : \"Upload New Resume\"}\n                        </Button>\n                    </Upload>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Visa Status\"\n                    name=\"visa_status\"\n                    rules={getRules(\"Visa Status\")}\n                    \n                >\n                    <Select defaultValue={modifyProfile ? '' : (currentUser as User).visa || \"\"} placeholder=\"Select an option:\">\n                        {_.map(VisaStatus, (status) => {\n                            return <Option style={{fontFamily: 'Mark Pro'}} value={status}>{status}</Option>\n                        })}\n                    </Select>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"LinkedIn\"\n                    name=\"linkedin\"\n                >\n                    <Input defaultValue={modifyProfile ? '' : (currentUser as User).linkedin || \"\"} placeholder=\"https://www.linkedin.com/in/username\"/>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Dribbble\"\n                    name=\"dribbble\"\n                >\n                    <Input defaultValue={modifyProfile ? '' : (currentUser as User).dribbble || \"\"} placeholder=\"https://dribbble.com/username\"/>\n                </Form.Item>\n\n                {!isModifyProfilePage ? \n                    <Form.Item \n                        valuePropName={'checked'}\n                    >\n                        <Checkbox style={{fontFamily: 'Mark Pro'}} checked={checked} onChange={(e) => changeChecked(e.target.checked)}>Agree to the <a style={{color: UNIVERSAL_COLOR}} target={'_blank'} href={'/terms'}>Terms of Services</a></Checkbox>\n                </Form.Item> \n                : null}\n\n                    \n                {isModifyProfilePage ? \n                        <Form.Item>\n                        <Row justify=\"space-between\" align=\"middle\">\n                            <>\n                                <BigBlackButton type=\"default\" onClick={viewProfile}>\n                                    View Profile\n                                </BigBlackButton>\n                                <BigBlackButton htmlType=\"submit\">\n                                    Update Profile\n                                </BigBlackButton>\n                            </>\n                        </Row>\n                    </Form.Item> \n                : null}\n                    \n            \n            </Form>\n    );\n}\n\nexport default FormPersonalData","import Input from './lib/MaskedInput';\nexport const MaskedInput = Input;\nexport default Input;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxLQUFLLE1BQU0sbUJBQW1CLENBQUM7QUFFdEMsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLEtBQUssQ0FBQztBQUNqQyxlQUFlLEtBQUssQ0FBQyJ9","import React, { Component } from 'react';\nimport { Input } from 'antd';\nimport InputMask from './inputmask-core';\nimport { isRedo, isUndo, getSelection, setSelection } from './helpers';\nexport default class MaskedInput extends Component {\n    constructor(props) {\n        super(props);\n        this._onChange = (e) => {\n            // console.log('onChange', JSON.stringify(getSelection(this.input)), e.target.value)\n            let maskValue = this.mask.getValue();\n            let incomingValue = e.target.value;\n            if (incomingValue !== maskValue) {\n                // only modify mask if form contents actually changed\n                this._updateMaskSelection();\n                this.mask.setValue(incomingValue); // write the whole updated value into the mask\n                this.setInputValue(this._getDisplayValue()); // update the form with pattern applied to the value\n                this._updateInputSelection();\n            }\n            if (this.props.onChange) {\n                this.props.onChange(e);\n            }\n        };\n        this._onKeyDown = (e) => {\n            setTimeout(() => {\n                this.input.classList[this.input.value ? 'add' : 'remove']('has-value');\n            }, 100);\n            if (isUndo(e)) {\n                e.preventDefault();\n                if (this.mask.undo()) {\n                    this.setInputValue(this._getDisplayValue());\n                    this._updateInputSelection();\n                    if (this.props.onChange) {\n                        this.props.onChange(e);\n                    }\n                }\n                return;\n            }\n            else if (isRedo(e)) {\n                e.preventDefault();\n                if (this.mask.redo()) {\n                    this.setInputValue(this._getDisplayValue());\n                    this._updateInputSelection();\n                    if (this.props.onChange) {\n                        this.props.onChange(e);\n                    }\n                }\n                return;\n            }\n            if (e.key === 'Backspace') {\n                e.preventDefault();\n                this._updateMaskSelection();\n                if (this.mask.backspace()) {\n                    let value = this._getDisplayValue();\n                    this.setInputValue(value);\n                    if (value) {\n                        this._updateInputSelection();\n                    }\n                    if (this.props.onChange) {\n                        this.props.onChange(e);\n                    }\n                }\n            }\n        };\n        this._onKeyPress = (e) => {\n            // console.log('onKeyPress', JSON.stringify(getSelection(this.input)), e.key, e.target.value)\n            // Ignore modified key presses\n            // Ignore enter key to allow form submission\n            if (e.metaKey || e.altKey || e.ctrlKey || e.key === 'Enter') {\n                return;\n            }\n            e.preventDefault();\n            this._updateMaskSelection();\n            if (this.mask.input(e.key || e.data)) {\n                this.setInputValue(this.mask.getValue());\n                this._updateInputSelection();\n                if (this.props.onChange) {\n                    this.props.onChange(e);\n                }\n            }\n        };\n        this._onPaste = (e) => {\n            e.preventDefault();\n            this._updateMaskSelection();\n            // getData value needed for IE also works in FF & Chrome\n            if (this.mask.paste(e.clipboardData.getData('Text'))) {\n                // @ts-ignore\n                this.setInputValue(this.mask.getValue());\n                // Timeout needed for IE\n                setTimeout(() => this._updateInputSelection(), 0);\n                if (this.props.onChange) {\n                    // @ts-ignore\n                    this.props.onChange(e);\n                }\n            }\n        };\n        this.getInputProps = () => {\n            let maxLength = this.mask.pattern.length;\n            let eventHandlers = this._getEventHandlers();\n            let { placeholder = this.mask.emptyValue } = this.props;\n            let { placeholderChar, formatCharacters, ...cleanedProps } = this.props;\n            const props = { ...cleanedProps, ...eventHandlers, maxLength, placeholder };\n            delete props.value;\n            return props;\n        };\n        this._lastValue = null;\n        this.setInputValue = (value) => {\n            if (!this._Input)\n                return;\n            if (value === this._lastValue)\n                return;\n            this._lastValue = value;\n            this._Input.setState({ value });\n            this._Input.input.value = value;\n        };\n        this._Input = null;\n        this.handleInputRef = (ref) => {\n            if (!ref)\n                return;\n            this._Input = ref;\n            this.input = ref.input;\n            if (this._lastValue === null &&\n                typeof this.props.defaultValue === 'string') {\n                this.mask.setValue(this.props.defaultValue); // write the whole updated value into the mask\n                this.setInputValue(this._getDisplayValue()); // update the form with pattern applied to the value\n            }\n        };\n        let options = {\n            pattern: this.props.mask,\n            value: this.props.value,\n            formatCharacters: this.props.formatCharacters\n        };\n        if (this.props.placeholderChar) {\n            options.placeholderChar = this.props.placeholderChar;\n        }\n        this.mask = new InputMask(options);\n    }\n    componentDidMount() {\n        this.setInputValue(this._getDisplayValue());\n    }\n    componentWillReceiveProps(nextProps) {\n        if (this.props.mask !== nextProps.mask &&\n            this.props.value !== nextProps.mask) {\n            // if we get a new value and a new mask at the same time\n            // check if the mask.value is still the initial value\n            // - if so use the nextProps value\n            // - otherwise the `this.mask` has a value for us (most likely from paste action)\n            if (this.mask.getValue() === this.mask.emptyValue) {\n                this.mask.setPattern(nextProps.mask, { value: nextProps.value });\n            }\n            else {\n                this.mask.setPattern(nextProps.mask, {\n                    value: this.mask.getRawValue()\n                });\n            }\n        }\n        else if (this.props.mask !== nextProps.mask) {\n            this.mask.setPattern(nextProps.mask, { value: this.mask.getRawValue() });\n        }\n        if (this.props.value !== nextProps.value) {\n            this.mask.setValue(nextProps.value);\n            this.setInputValue(this._getDisplayValue());\n        }\n    }\n    componentWillUpdate(nextProps) {\n        if (!this.props.mask)\n            return null;\n        if (nextProps.mask !== this.props.mask) {\n            this._updatePattern(nextProps);\n        }\n        return;\n    }\n    componentDidUpdate(prevProps) {\n        if (!this.props.mask)\n            return null;\n        if (prevProps.mask !== this.props.mask && this.mask.selection.start) {\n            this._updateInputSelection();\n        }\n        return;\n    }\n    _updatePattern(props) {\n        this.mask.setPattern(props.mask, {\n            value: this.mask.getRawValue(),\n            selection: getSelection(this.input)\n        });\n    }\n    _updateMaskSelection() {\n        this.mask.selection = getSelection(this.input);\n    }\n    _updateInputSelection() {\n        setSelection(this.input, this.mask.selection);\n    }\n    _getDisplayValue() {\n        let value = this.mask.getValue();\n        return value === this.mask.emptyValue ? '' : value;\n    }\n    _keyPressPropName() {\n        if (typeof navigator !== 'undefined') {\n            return navigator.userAgent.match(/Android/i)\n                ? 'onBeforeInput'\n                : 'onKeyPress';\n        }\n        return 'onKeyPress';\n    }\n    _getEventHandlers() {\n        return {\n            onChange: this._onChange,\n            onKeyDown: this._onKeyDown,\n            onPaste: this._onPaste,\n            [this._keyPressPropName()]: this._onKeyPress\n        };\n    }\n    focus() {\n        this.input.focus();\n    }\n    blur() {\n        this.input.blur();\n    }\n    render() {\n        return React.createElement(Input, Object.assign({}, this.getInputProps(), { ref: this.handleInputRef }));\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","import { DEFAULT_FORMAT_CHARACTERS, DEFAULT_PLACEHOLDER_CHAR, ESCAPE_CHAR, } from './helpers';\nexport class Pattern {\n    constructor(source, formatCharacters, placeholderChar, isRevealingMask = false) {\n        /** Pattern characters after escape characters have been processed. */\n        this.pattern = [];\n        /** Length of the pattern after escape characters have been processed. */\n        this.length = 0;\n        /** Index of the first editable character. */\n        this.firstEditableIndex = null;\n        /** Index of the last editable character. */\n        this.lastEditableIndex = null;\n        /** Lookup for indices of editable characters in the pattern. */\n        this._editableIndices = {};\n        /** Placeholder character */\n        this.placeholderChar = placeholderChar || DEFAULT_PLACEHOLDER_CHAR;\n        /** Format character definitions. */\n        this.formatCharacters = formatCharacters || DEFAULT_FORMAT_CHARACTERS;\n        /** Pattern definition string with escape characters. */\n        this.source = source;\n        this.isRevealingMask = isRevealingMask;\n        this._parse();\n    }\n    _parse() {\n        var sourceChars = this.source.split('');\n        var patternIndex = 0;\n        var pattern = [];\n        for (var i = 0, l = sourceChars.length; i < l; i++) {\n            var char = sourceChars[i];\n            if (char === ESCAPE_CHAR) {\n                if (i === l - 1) {\n                    throw new Error('InputMask: pattern ends with a raw ' + ESCAPE_CHAR);\n                }\n                char = sourceChars[++i];\n            }\n            else if (char in this.formatCharacters) {\n                if (this.firstEditableIndex === null) {\n                    this.firstEditableIndex = patternIndex;\n                }\n                this.lastEditableIndex = patternIndex;\n                this._editableIndices[patternIndex] = true;\n            }\n            pattern.push(char);\n            patternIndex++;\n        }\n        if (this.firstEditableIndex === null) {\n            throw new Error('InputMask: pattern \"' + this.source + '\" does not contain any editable characters.');\n        }\n        // @ts-ignore\n        this.pattern = pattern;\n        this.length = pattern.length;\n    }\n    formatValue(value) {\n        var valueBuffer = new Array(this.length);\n        var valueIndex = 0;\n        for (var i = 0, l = this.length; i < l; i++) {\n            if (this.isEditableIndex(i)) {\n                if (this.isRevealingMask &&\n                    value.length <= valueIndex &&\n                    !this.isValidAtIndex(value[valueIndex], i)) {\n                    break;\n                }\n                valueBuffer[i] =\n                    value.length > valueIndex && this.isValidAtIndex(value[valueIndex], i)\n                        ? this.transform(value[valueIndex], i)\n                        : this.placeholderChar;\n                valueIndex++;\n            }\n            else {\n                valueBuffer[i] = this.pattern[i];\n                // Also allow the value to contain static values from the pattern by\n                // advancing its index.\n                if (value.length > valueIndex && value[valueIndex] === this.pattern[i]) {\n                    valueIndex++;\n                }\n            }\n        }\n        return valueBuffer;\n    }\n    isEditableIndex(index) {\n        return !!this._editableIndices[index];\n    }\n    isValidAtIndex(char, index) {\n        return this.formatCharacters[this.pattern[index]].validate(char);\n    }\n    transform(char, index) {\n        var format = this.formatCharacters[this.pattern[index]];\n        return typeof format.transform == 'function' ? format.transform(char) : char;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGF0dGVybi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvUGF0dGVybi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wseUJBQXlCLEVBQ3pCLHdCQUF3QixFQUN4QixXQUFXLEdBRVosTUFBTSxXQUFXLENBQUM7QUFFbkIsTUFBTSxPQUFPLE9BQU87SUF1QmxCLFlBQ0UsTUFBYyxFQUNkLGdCQUFrQyxFQUNsQyxlQUF1QixFQUN2QixlQUFlLEdBQUcsS0FBSztRQXRCekIsc0VBQXNFO1FBQ3RFLFlBQU8sR0FBRyxFQUFFLENBQUM7UUFFYix5RUFBeUU7UUFDekUsV0FBTSxHQUFHLENBQUMsQ0FBQztRQUVYLDZDQUE2QztRQUM3Qyx1QkFBa0IsR0FBa0IsSUFBSSxDQUFDO1FBRXpDLDRDQUE0QztRQUM1QyxzQkFBaUIsR0FBa0IsSUFBSSxDQUFDO1FBRXhDLGdFQUFnRTtRQUNoRSxxQkFBZ0IsR0FBK0IsRUFBRSxDQUFDO1FBV2hELDRCQUE0QjtRQUM1QixJQUFJLENBQUMsZUFBZSxHQUFHLGVBQWUsSUFBSSx3QkFBd0IsQ0FBQztRQUNuRSxvQ0FBb0M7UUFDcEMsSUFBSSxDQUFDLGdCQUFnQixHQUFHLGdCQUFnQixJQUFJLHlCQUF5QixDQUFDO1FBQ3RFLHdEQUF3RDtRQUN4RCxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUVyQixJQUFJLENBQUMsZUFBZSxHQUFHLGVBQWUsQ0FBQztRQUV2QyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUVELE1BQU07UUFDSixJQUFJLFdBQVcsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUN4QyxJQUFJLFlBQVksR0FBRyxDQUFDLENBQUM7UUFDckIsSUFBSSxPQUFPLEdBQWEsRUFBRSxDQUFDO1FBRTNCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FB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","let KEYCODE_Z = 90;\nlet KEYCODE_Y = 89;\nexport function isUndo(e) {\n    return ((e.ctrlKey || e.metaKey) &&\n        e.keyCode === (e.shiftKey ? KEYCODE_Y : KEYCODE_Z));\n}\nexport function isRedo(e) {\n    return ((e.ctrlKey || e.metaKey) &&\n        e.keyCode === (e.shiftKey ? KEYCODE_Z : KEYCODE_Y));\n}\nexport function getSelection(el) {\n    let start, end;\n    if (el.selectionStart !== undefined) {\n        start = el.selectionStart;\n        end = el.selectionEnd;\n    }\n    else {\n        try {\n            el.focus();\n            // @ts-ignore (IE only)\n            let rangeEl = el.createTextRange();\n            let clone = rangeEl.duplicate();\n            // @ts-ignore (IE only)\n            rangeEl.moveToBookmark(document.selection.createRange().getBookmark());\n            clone.setEndPoint('EndToStart', rangeEl);\n            start = clone.text.length;\n            end = start + rangeEl.text.length;\n        }\n        catch (e) {\n            /* not focused or not visible */\n        }\n    }\n    return { start, end };\n}\nlet selectionTimeout;\nexport function setSelection(el, selection) {\n    clearTimeout(selectionTimeout);\n    try {\n        if (el.selectionStart === selection.start &&\n            el.selectionEnd === selection.end) {\n            return;\n        }\n        if (el.selectionStart !== undefined) {\n            el.focus();\n            el.setSelectionRange(selection.start, selection.end);\n            // fix https://bugs.chromium.org/p/chromium/issues/detail?id=32865\n            selectionTimeout = setTimeout(() => {\n                setSelection(el, selection);\n            }, 0);\n        }\n        else {\n            el.focus();\n            // @ts-ignore (IE only)\n            let rangeEl = el.createTextRange();\n            rangeEl.collapse(true);\n            rangeEl.moveStart('character', selection.start);\n            rangeEl.moveEnd('character', selection.end - selection.start);\n            rangeEl.select();\n        }\n    }\n    catch (e) {\n        /* not focused or not visible */\n    }\n}\n/**\n * Merge an object defining format characters into the defaults.\n * Passing null/undefined for en existing format character removes it.\n * Passing a definition for an existing format character overrides it.\n */\nexport function mergeFormatCharacters(formatCharacters) {\n    var merged = { ...DEFAULT_FORMAT_CHARACTERS };\n    if (formatCharacters) {\n        var chars = Object.keys(formatCharacters);\n        for (var i = 0, l = chars.length; i < l; i++) {\n            var char = chars[i];\n            if (formatCharacters[char] == null) {\n                delete merged[char];\n            }\n            else {\n                merged[char] = formatCharacters[char];\n            }\n        }\n    }\n    return merged;\n}\nexport const ESCAPE_CHAR = '\\\\';\nexport const DIGIT_RE = /^\\d$/;\nexport const LETTER_RE = /^[A-Za-z]$/;\nexport const ALPHANNUMERIC_RE = /^[\\dA-Za-z]$/;\nexport const DEFAULT_PLACEHOLDER_CHAR = '_';\nexport const DEFAULT_FORMAT_CHARACTERS = {\n    '*': {\n        validate: function (char) {\n            return ALPHANNUMERIC_RE.test(char);\n        }\n    },\n    '1': {\n        validate: function (char) {\n            return DIGIT_RE.test(char);\n        }\n    },\n    a: {\n        validate: function (char) {\n            return LETTER_RE.test(char);\n        }\n    },\n    A: {\n        validate: function (char) {\n            return LETTER_RE.test(char);\n        },\n        transform: function (char) {\n            return char.toUpperCase();\n        }\n    },\n    '#': {\n        validate: function (char) {\n            return ALPHANNUMERIC_RE.test(char);\n        },\n        transform: function (char) {\n            return char.toUpperCase();\n        }\n    }\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvaGVscGVycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFJLFNBQVMsR0FBRyxFQUFFLENBQUM7QUFDbkIsSUFBSSxTQUFTLEdBQUcsRUFBRSxDQUFDO0FBRW5CLE1BQU0sVUFBVSxNQUFNLENBQUMsQ0FBZ0I7SUFDckMsT0FBTyxDQUNMLENBQUMsQ0FBQyxDQUFDLE9BQU8sSUFBSSxDQUFDLENBQUMsT0FBTyxDQUFDO1FBQ3hCLENBQUMsQ0FBQyxPQUFPLEtBQUssQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUNuRCxDQUFDO0FBQ0osQ0FBQztBQUVELE1BQU0sVUFBVSxNQUFNLENBQUMsQ0FBZ0I7SUFDckMsT0FBTyxDQUNMLENBQUMsQ0FBQyxDQUFDLE9BQU8sSUFBSSxDQUFDLENBQUMsT0FBTyxDQUFDO1FBQ3hCLENBQUMsQ0FBQyxPQUFPLEtBQUssQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUNuRCxDQUFDO0FBQ0osQ0FBQztBQUlELE1BQU0sVUFBVSxZQUFZLENBQUMsRUFBb0I7SUFDL0MsSUFBSSxLQUFLLEVBQUUsR0FBRyxDQUFDO0lBQ2YsSUFBSSxFQUFFLENBQUMsY0FBYyxLQUFLLFNBQVMsRUFBRTtRQUNuQyxLQUFLLEdBQUcsRUFBRSxDQUFDLGNBQWMsQ0FBQztRQUMxQixHQUFHLEdBQUcsRUFBRSxDQUFDLFlBQVksQ0FBQztLQUN2QjtTQUFNO1FBQ0wsSUFBSTtZQUNGLEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUNYLHVCQUF1QjtZQUN2QixJQUFJLE9BQU8sR0FBRyxFQUFFLENBQUMsZUFBZSxFQUFFLENBQUM7WUFDbkMsSUFBSSxLQUFLLEdBQUcsT0FBTyxDQUFDLFNB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","import { DEFAULT_PLACEHOLDER_CHAR, mergeFormatCharacters } from './helpers';\nimport { Pattern } from './Pattern';\nexport class InputMask {\n    constructor(options) {\n        this.emptyValue = '';\n        this._history = [];\n        this._historyIndex = null;\n        this._lastOp = null;\n        this._lastSelection = null;\n        const mergedOptions = {\n            ...{\n                isRevealingMask: false,\n                placeholderChar: DEFAULT_PLACEHOLDER_CHAR,\n                selection: { start: 0, end: 0 },\n                value: ''\n            },\n            ...options\n        };\n        if (!mergedOptions.pattern) {\n            throw new Error('InputMask: you must provide a pattern.');\n        }\n        if (typeof mergedOptions.placeholderChar !== 'string' ||\n            mergedOptions.placeholderChar.length > 1) {\n            throw new Error('InputMask: placeholderChar should be a single character or an empty string.');\n        }\n        this.placeholderChar = mergedOptions.placeholderChar;\n        this.formatCharacters = mergeFormatCharacters(mergedOptions.formatCharacters);\n        this.setPattern(mergedOptions.pattern, {\n            value: mergedOptions.value,\n            selection: mergedOptions.selection,\n            isRevealingMask: mergedOptions.isRevealingMask\n        });\n    }\n    setPattern(patternSource, options) {\n        const merged = {\n            selection: { start: 0, end: 0 },\n            value: '',\n            ...options\n        };\n        this.pattern = new Pattern(patternSource, this.formatCharacters, this.placeholderChar, merged.isRevealingMask);\n        this.setValue(merged.value);\n        this.emptyValue = this.pattern.formatValue([]).join('');\n        this.selection = merged.selection;\n        this._resetHistory();\n    }\n    setValue(value) {\n        if (value == null) {\n            value = '';\n        }\n        this.value = this.pattern.formatValue((value || '').split(''));\n    }\n    _resetHistory() {\n        this._history = [];\n        this._historyIndex = null;\n        this._lastOp = null;\n        this._lastSelection = { ...this.selection };\n    }\n    getValue() {\n        if (this.pattern.isRevealingMask) {\n            this.value = this.pattern.formatValue((this.getRawValue() || '').split(''));\n        }\n        return (this.value || []).join('');\n    }\n    getRawValue() {\n        var rawValue = [];\n        for (var i = 0; i < this.value.length; i++) {\n            if (this.pattern._editableIndices[i] === true) {\n                rawValue.push(this.value[i]);\n            }\n        }\n        return rawValue.join('');\n    }\n    /**\n     * Applies a single character of input based on the current selection.\n     * @param {string} char\n     * @return {boolean} true if a change has been made to value or selection as a\n     *   result of the input, false otherwise.\n     */\n    input(char) {\n        // Ignore additional input if the cursor's at the end of the pattern\n        if (this.selection.start === this.selection.end &&\n            this.selection.start === this.pattern.length) {\n            return false;\n        }\n        const selectionBefore = copy(this.selection);\n        const valueBefore = this.getValue();\n        let inputIndex = this.selection.start;\n        // If the cursor or selection is prior to the first editable character, make\n        // sure any input given is applied to it.\n        if (inputIndex < this.pattern.firstEditableIndex) {\n            inputIndex = this.pattern.firstEditableIndex;\n        }\n        // Bail out or add the character to input\n        if (this.pattern.isEditableIndex(inputIndex)) {\n            if (!this.pattern.isValidAtIndex(char, inputIndex)) {\n                return false;\n            }\n            this.value[inputIndex] = this.pattern.transform(char, inputIndex);\n        }\n        else {\n            console.log('not editable');\n        }\n        // If multiple characters were selected, blank the remainder out based on the\n        // pattern.\n        let end = this.selection.end - 1;\n        while (end > inputIndex) {\n            if (this.pattern.isEditableIndex(end)) {\n                this.value[end] = this.placeholderChar;\n            }\n            end--;\n        }\n        // Advance the cursor to the next character\n        this.selection.start = this.selection.end = inputIndex + 1;\n        // Skip over any subsequent static characters\n        while (this.pattern.length > this.selection.start &&\n            !this.pattern.isEditableIndex(this.selection.start)) {\n            this.selection.start++;\n            this.selection.end++;\n        }\n        // History\n        if (this._historyIndex != null) {\n            // Took more input after undoing, so blow any subsequent history away\n            this._history.splice(this._historyIndex, this._history.length - this._historyIndex);\n            this._historyIndex = null;\n        }\n        if (this._lastOp !== 'input' ||\n            selectionBefore.start !== selectionBefore.end ||\n            (this._lastSelection !== null &&\n                selectionBefore.start !== this._lastSelection.start)) {\n            this._history.push({\n                value: valueBefore,\n                selection: selectionBefore,\n                lastOp: this._lastOp\n            });\n        }\n        this._lastOp = 'input';\n        this._lastSelection = copy(this.selection);\n        return true;\n    }\n    /**\n     * Attempts to delete from the value based on the current cursor position or\n     * selection.\n     * @return {boolean} true if the value or selection changed as the result of\n     *   backspacing, false otherwise.\n     */\n    backspace() {\n        // If the cursor is at the start there's nothing to do\n        if (this.selection.start === 0 && this.selection.end === 0) {\n            return false;\n        }\n        var selectionBefore = { ...this.selection };\n        var valueBefore = this.getValue();\n        // No range selected - work on the character preceding the cursor\n        if (this.selection.start === this.selection.end) {\n            if (this.pattern.isEditableIndex(this.selection.start - 1)) {\n                if (this.pattern.isRevealingMask) {\n                    this.value.splice(this.selection.start - 1);\n                }\n                else {\n                    this.value[this.selection.start - 1] = this.placeholderChar;\n                }\n            }\n            this.selection.start--;\n            this.selection.end--;\n        }\n        // Range selected - delete characters and leave the cursor at the start of the selection\n        else {\n            var end = this.selection.end - 1;\n            while (end >= this.selection.start) {\n                if (this.pattern.isEditableIndex(end)) {\n                    this.value[end] = this.placeholderChar;\n                }\n                end--;\n            }\n            this.selection.end = this.selection.start;\n        }\n        // History\n        if (this._historyIndex != null) {\n            // Took more input after undoing, so blow any subsequent history away\n            this._history.splice(this._historyIndex, this._history.length - this._historyIndex);\n        }\n        if (this._lastOp !== 'backspace' ||\n            selectionBefore.start !== selectionBefore.end ||\n            (this._lastSelection !== null &&\n                selectionBefore.start !== this._lastSelection.start)) {\n            this._history.push({\n                value: valueBefore,\n                selection: selectionBefore,\n                lastOp: this._lastOp\n            });\n        }\n        this._lastOp = 'backspace';\n        this._lastSelection = { ...this.selection };\n        return true;\n    }\n    /**\n     * Attempts to paste a string of input at the current cursor position or over\n     * the top of the current selection.\n     * Invalid content at any position will cause the paste to be rejected, and it\n     * may contain static parts of the mask's pattern.\n     * @param {string} input\n     * @return {boolean} true if the paste was successful, false otherwise.\n     */\n    paste(input) {\n        // This is necessary because we're just calling input() with each character\n        // and rolling back if any were invalid, rather than checking up-front.\n        var initialState = {\n            value: this.value.slice(),\n            selection: { ...this.selection },\n            _lastOp: this._lastOp,\n            _history: this._history.slice(),\n            _historyIndex: this._historyIndex,\n            _lastSelection: { ...this._lastSelection }\n        };\n        // If there are static characters at the start of the pattern and the cursor\n        // or selection is within them, the static characters must match for a valid\n        // paste.\n        if (this.selection.start < this.pattern.firstEditableIndex) {\n            for (var i = 0, l = this.pattern.firstEditableIndex - this.selection.start; i < l; i++) {\n                if (input.charAt(i) !== this.pattern.pattern[i]) {\n                    return false;\n                }\n            }\n            // Continue as if the selection and input started from the editable part of\n            // the pattern.\n            input = input.substring(this.pattern.firstEditableIndex - this.selection.start);\n            this.selection.start = this.pattern.firstEditableIndex;\n        }\n        for (i = 0, l = input.length; i < l && this.selection.start <= this.pattern.lastEditableIndex; i++) {\n            var valid = this.input(input.charAt(i));\n            // Allow static parts of the pattern to appear in pasted input - they will\n            // already have been stepped over by input(), so verify that the value\n            // deemed invalid by input() was the expected static character.\n            if (!valid) {\n                if (this.selection.start > 0) {\n                    // XXX This only allows for one static character to be skipped\n                    var patternIndex = this.selection.start - 1;\n                    if (!this.pattern.isEditableIndex(patternIndex) &&\n                        input.charAt(i) === this.pattern.pattern[patternIndex]) {\n                        continue;\n                    }\n                }\n                Object.keys(initialState).forEach(key => {\n                    // @ts-ignore\n                    this[key] = initialState[key];\n                });\n                return false;\n            }\n        }\n        return true;\n    }\n    undo() {\n        // If there is no history, or nothing more on the history stack, we can't undo\n        if (this._history.length === 0 || this._historyIndex === 0) {\n            return false;\n        }\n        var historyItem;\n        if (this._historyIndex == null) {\n            // Not currently undoing, set up the initial history index\n            this._historyIndex = this._history.length - 1;\n            historyItem = this._history[this._historyIndex];\n            // Add a new history entry if anything has changed since the last one, so we\n            // can redo back to the initial state we started undoing from.\n            var value = this.getValue();\n            if (historyItem.value !== value ||\n                historyItem.selection.start !== this.selection.start ||\n                historyItem.selection.end !== this.selection.end) {\n                this._history.push({\n                    value: value,\n                    selection: { ...this.selection },\n                    lastOp: this._lastOp,\n                    startUndo: true\n                });\n            }\n        }\n        else {\n            historyItem = this._history[--this._historyIndex];\n        }\n        this.value = historyItem.value.split('');\n        this.selection = historyItem.selection;\n        this._lastOp = historyItem.lastOp;\n        return true;\n    }\n    redo() {\n        if (this._history.length === 0 || this._historyIndex == null) {\n            return false;\n        }\n        var historyItem = this._history[++this._historyIndex];\n        // If this is the last history item, we're done redoing\n        if (this._historyIndex === this._history.length - 1) {\n            this._historyIndex = null;\n            // If the last history item was only added to start undoing, remove it\n            if (historyItem.startUndo) {\n                this._history.pop();\n            }\n        }\n        this.value = historyItem.value.split('');\n        this.selection = historyItem.selection;\n        this._lastOp = historyItem.lastOp;\n        return true;\n    }\n    setSelection(selection) {\n        this.selection = { ...selection };\n        if (this.selection.start === this.selection.end) {\n            if (this.selection.start < this.pattern.firstEditableIndex) {\n                this.selection.start = this.selection.end = this.pattern\n                    .firstEditableIndex;\n                return true;\n            }\n            // Set selection to the first editable, non-placeholder character before the selection\n            // OR to the beginning of the pattern\n            var index = this.selection.start;\n            while (index >= this.pattern.firstEditableIndex) {\n                if ((this.pattern.isEditableIndex(index - 1) &&\n                    this.value[index - 1] !== this.placeholderChar) ||\n                    index === this.pattern.firstEditableIndex) {\n                    this.selection.start = this.selection.end = index;\n                    break;\n                }\n                index--;\n            }\n            return true;\n        }\n        return false;\n    }\n}\nInputMask.Pattern = Pattern;\nfunction extend(dest, src) {\n    if (src) {\n        let props = Object.keys(src);\n        for (var i = 0, l = props.length; i < l; i++) {\n            dest[props[i]] = src[props[i]];\n        }\n    }\n    return dest;\n}\nfunction copy(obj) {\n    return extend({}, obj);\n}\nexport default InputMask;\n//# sourceMappingURL=data:application/json;base64,"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;;;;;;AAAA;AACA;AAWA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AANA;AAYA;AAAA;AAEA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAOA;AACA;AAFA;AAIA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AA2BA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AAFA;AAIA;AAAA;AAAA;AAIA;AACA;AAFA;AAIA;AAAA;AAAA;AAKA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAEA;AAAA;AAAA;AAGA;AAAA;AAWA;AACA;AACA;;;;;;;;;;;;ACxRA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7NA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACzsourceRoot":""}