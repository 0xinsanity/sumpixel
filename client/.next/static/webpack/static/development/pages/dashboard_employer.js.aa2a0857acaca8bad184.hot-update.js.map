{"version":3,"file":"static/webpack/static/development/pages/dashboard_employer.js.aa2a0857acaca8bad184.hot-update.js","sources":["webpack:///./components/Dashboard/Employer/DesignerList.tsx"],"sourcesContent":["import React, {useEffect, useContext, useState} from 'react'\nimport { createCommunication } from '../../../lib/server'\nimport {UserOutlined} from '@ant-design/icons'\nimport { User, Employer, UNIVERSAL_COLOR } from '../../../model/model'\nimport {UserContext} from '../../../lib/UserProvider'\nimport {Container} from '../../General/Container'\nimport Loading from '../../General/Loading'\nimport {Table, Button, Typography, Avatar} from 'antd'\nimport OpenPage from '../../General/OpenPage'\nimport styled from 'styled-components'\nimport {BigBlackButton} from '../../General/BigBlackButton'\nimport Router from 'next/router'\nconst {Column} = Table\n\nconst NameAvatar = styled.div`\n    display: flex;\n    flex-direction: row;\n\n`\n\nconst NameTitle = styled(Typography)`\n    color: #000000;\n    font-family: 'Mark Pro Bold';\n    font-size: 16px;\n`\n\nconst ResponseTitle = styled(Typography)`\n    color: #000000;\n    opacity: 0.5;\n    font-size; 14px;\n    font-family: 'Mark Pro';\n`\n\nexport interface FindDesignerListType {\n    name_feedback: string[],\n    score: number,\n    expiration: string,\n    primary_skill: string,\n    contact: User\n}\n\ninterface DesignerListProps {\n    designerList: FindDesignerListType[]\n}\n\nconst DesignerList: React.FC<DesignerListProps> = (props) => {\n    const context = useContext(UserContext)\n    const {designerList} = props\n\n    const onMoreInfo = (user: User) => {\n        OpenPage(context.setLoading, '/profile/' + user.id)\n    }\n\n    return (\n        <>\n            <Table\n                style={{paddingBottom: 10, width: '100%', fontFamily: 'Mark Pro', fontWeight: 'normal'}}\n                size={\"large\"}\n                dataSource={designerList}\n                bordered={false}\n                pagination={{defaultPageSize: 10}}\n            >\n                <Column onCell={(data, index) => ({style: {fontFamily: 'Mark Pro Bold'}})}  \n                        width={'35%'} \n                        title=\"Name\" \n                        dataIndex=\"name_feedback\" \n                        key=\"name_feedback\"\n                        render={(name_feedback) => (\n                            <>\n                                <NameAvatar>\n                                    {name_feedback[2] !== '' ? \n                                        <Avatar size={50} src={name_feedback[2]}/>  \n                                    :   <Avatar size={50} icon={<UserOutlined/>}/>  \n                                    }\n                                        \n                                    <NameTitle>{name_feedback[0]}</NameTitle>\n                                </NameAvatar>\n                                <ResponseTitle>{name_feedback[1]}</ResponseTitle>\n                            </>\n                        )}/>\n                <Column align={'center'} title=\"Score\" dataIndex=\"score\" key=\"score\" render={(text) => (\n                    <Typography.Text style={{color: UNIVERSAL_COLOR}}><Typography.Text style={{color: UNIVERSAL_COLOR, fontFamily: 'Mark Pro Bold'}}>{text}</Typography.Text>/10</Typography.Text>\n                )} />\n                <Column align={'center'} title=\"Location\" dataIndex=\"location\" key=\"location\" />\n                <Column align={'center'} title=\"Primary Skill\" dataIndex=\"primary_skill\" key=\"primary_skill\" />\n                <Column align={'center'} title=\"Profile\" dataIndex=\"contact\" key=\"contact\" render={(contact) => (\n                    <BigBlackButton onClick={() => onMoreInfo(contact)}>\n                        Connect\n                    </BigBlackButton>\n                )} />\n            </Table>\n        </>)\n}\n\nexport default DesignerList"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AAkBA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAVA;AAkBA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AAOA;AACA;AACA;;;;A","sourceRoot":""}