{"version":3,"file":"static/webpack/static/development/pages/_app.js.eac3f8cad179b290c1ca.hot-update.js","sources":["webpack:///./components/General/Loading.tsx","webpack:///./lib/UserProvider.tsx","webpack:///./lib/server.tsx"],"sourcesContent":["import React from 'react'\nimport {Spin} from 'antd'\nimport styled from 'styled-components'\n\nconst Cont = styled.div`\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    position: fixed;\n    display: flex;\n    width: 100%;\n    height: 100%;\n    justify-content: center;\n    align-items: center;\n    background-color: #fff;\n`\n\nconst Loading: React.FC<{loading?: boolean}> = (props) => {\n    return (\n        <Cont style={{zIndex: props.loading === undefined || props.loading ? 10 : -10}}>\n            <Spin size=\"large\" />\n        </Cont>\n    )\n}\n\nexport default Loading","import React, { Component, createContext } from \"react\";\nimport { myFirebase } from \"./firebase\";\nimport {User, Employer} from '../model/model'\nimport {getEmployer, getUser} from './server'\nimport Router, {withRouter} from \"next/router\";\nimport {message} from 'antd'\nimport Loading from '../components/General/Loading'\nimport { NextPage, NextPageContext } from 'next';\n\ninterface ContextProps {\n  loading: boolean,\n  setLoading: (newLoad: boolean) => void,\n  currentUser: User | Employer | null,\n  changeUser: (newUser: User | Employer | null) => void\n}\n\nexport const UserContext = createContext<Partial<ContextProps>>({\n    currentUser: null,\n    changeUser: () => {},\n    loading: false,\n    setLoading: () => {}\n});\nclass UserProvider extends Component {\n  changeUser = (newUser: User | Employer | null) => {\n      console.log('This is current: ' + newUser)\n      this.setState({currentUser: newUser})\n  }\n\n  setLoading = (newLoad: boolean) => {\n      this.setState({loading: newLoad})\n  }\n\n  state = {\n    loading: false,\n    currentUser: null,\n    changeUser: this.changeUser,\n    setLoading: this.setLoading\n  };\n\n  componentDidMount = () => {\n    myFirebase.auth().onAuthStateChanged(async (userAuth) => {\n      //this.setLoading(true)\n      if (userAuth === null) {\n          this.setLoading(false)\n          return\n      }\n\n      if (userAuth.isAnonymous) {\n        console.log('userauth:' + userAuth)\n        this.changeUser({\n          firstName: '',\n          lastName: '',\n          email: '',\n          id: userAuth.uid,\n          isAnonymous: true\n        } as Employer)\n        this.setLoading(false)\n        return\n      }\n\n      // This is some of the worst code I've ever made\n      var current;\n      try {\n        current = await getUser(userAuth.uid)\n      } catch (error) {\n        try {\n          current = await getEmployer(userAuth.uid)\n          current[\"user_exists\"] = false\n        } catch (error) {\n          console.log(\"this better be a new user\")\n        }\n      }\n\n      if (current !== undefined && current['user_exists'] === undefined) {\n          this.changeUser(current as User)\n          window.analytics.identify(current.id, {\n            name: current.name,\n            email: current.email\n          });\n      } else if (current !== undefined && current['employer_exists'] === undefined) {\n          this.changeUser(current as Employer)\n          window.analytics.identify(current.id, {\n            name: current.name,\n            email: current.email\n          });\n      } else {\n            if (userAuth.email === null && userAuth.isAnonymous === false) {\n              // something's wrong\n              myFirebase.auth().signOut()\n              this.changeUser(undefined)\n              this.setLoading(false)\n              return\n            }\n            // In process of making account\n            this.changeUser({\n                email: userAuth.email,\n                id: userAuth.uid,\n                firstName: userAuth.displayName.substr(0, userAuth.displayName.indexOf(' ')),\n                lastName: userAuth.displayName.substr(userAuth.displayName.indexOf(' ')+1),\n            })  \n            this.setLoading(false)\n      }\n    });\n  };\n  render() {\n    return (\n      <UserContext.Provider value={this.state}>\n        <Loading loading={this.state.loading}/>\n        {this.props.children}\n      </UserContext.Provider>\n    );\n  }\n}\nexport default UserProvider;","import { QA, User, Employer, EmployerDecisionHire, DesignerDecisionTalk, CommForDesigner, Communication, CommForEmployer } from \"../model/model\";\nimport axios from 'axios';\n\nconst SERVER_BASE = 'https://server.sumpixel.com/'\n\nenum HTTP_Requests {\n    GET = 'GET',\n    POST = 'POST',\n    PUT = 'PUT'\n}\n\nconst request = async (url: string, params, method: HTTP_Requests = HTTP_Requests.GET) => {\n    var response;\n    switch (method) {\n        case HTTP_Requests.GET:\n            response = await axios.get(SERVER_BASE + url, {params: params});\n            break;\n        case HTTP_Requests.POST:\n            response = await axios.post(SERVER_BASE + url, params);\n            break;\n        case HTTP_Requests.PUT:\n            response = await axios.put(SERVER_BASE + url, params);\n            break;\n    }\n\n    if (response.status !== 200) {\n        return generateErrorResponse('The server responded with an unexpected status.');\n    }\n\n    const result = response.data;\n\n    return result;\n\n}\n\nconst generateErrorResponse = (message) => {\n    return {\n        status : 'error',\n        message\n    };\n}\n\nexport const getUser = async (id: string): Promise<User | {user_exists: boolean}> => {\n    return await request('get-user', {id: id})\n}\n\nexport const getEmployer = async (id: string): Promise<Employer | {user_exists: boolean}> => {\n    return await request('get-employer', {id: id})\n}\n\nexport const removeUser = async (id: string) => {\n    return await request('remove-user', {id: id})\n}\n\nexport const removeEmployer = async (id: string) => {\n    return await request('remove-employer', {id: id})\n}\n\nexport const createUser = async (user: User) => {\n    return await request('create-user', user, HTTP_Requests.POST)\n}\n\nexport const modifyUser = async (user: User) => {\n    return await request('modify-user', user, HTTP_Requests.POST)\n}\n\nexport const createEmployer = async (employer: Employer) => {\n    return await request('create-employer', employer, HTTP_Requests.POST)\n}\n\nexport const modifyEmployer = async (employer: Employer) => {\n    return await request('modify-employer', employer, HTTP_Requests.POST)\n}\n\nexport const createCommunication = async (designerId: string, employerId: string): Promise<Communication> => {\n    return await request('create-new-communication', {designerId: designerId, employerId: employerId }, HTTP_Requests.POST)\n}\n\nexport const updateDesignerDecision = async (commId: string, decision: DesignerDecisionTalk) => {\n    return await request('update-designer-decision', {id: commId, designerApprovedTalk: decision }, HTTP_Requests.POST)\n}\n\nexport const updateEmployerDecision = async (commId: string, decision: EmployerDecisionHire) => {\n    return await request('update-employer-decision', {id: commId, decision: decision }, HTTP_Requests.POST)\n}\n\nexport const getDesignCommunicationsList = async (id: string): Promise<CommForDesigner[]> => {\n    return await request('get-all-designer-communications', {id})\n}\n\nexport const getEmployerCommunicationsList = async (id: string): Promise<CommForEmployer[]> => {\n    return await request('get-all-employer-communications', {id})\n}\n\nexport const getGradedDesigners = async (id: string): Promise<User[]> => {\n    return await request('get-graded-designers', {id})\n}\n\nexport const getDesignerFromCommunication = async (id: string): Promise<User> => {\n    return await request('get-designer-from-communication', {id})\n}\n\nexport const getQAById = async (id: string): Promise<QA[]> => {\n    return await request('get_qa_by_id', {id})\n}"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAaA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AAEA;AAGA;AAUA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AAJA;AACA;AAXA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAjFA;AACA;AAiFA;AACA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AA1FA;AACA;AA0FA;;;;;;;;;;;;AChHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AATA;AACA;AAWA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;;;;A","sourceRoot":""}