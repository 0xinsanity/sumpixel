{"version":3,"file":"static/development/pages/signup.js","sources":["webpack:///webpack/bootstrap","webpack:///./assets/sumpixel-logo.png","webpack:///./components/General/BigBlackButton.tsx","webpack:///./components/General/Container.tsx","webpack:///./components/General/Loading.tsx","webpack:///./components/General/PopupModal.tsx","webpack:///./components/General/SumpixelCard.tsx","webpack:///./components/Login/LoginComponent.tsx","webpack:///./components/OnboardingFlow/Designers/FormPersonalData.tsx","webpack:///./components/OnboardingFlow/EmployerDesigner.tsx","webpack:///./components/OnboardingFlow/Employers/FormBusinessData.tsx","webpack:///./components/OnboardingFlow/Onboard.tsx","webpack:///./components/OnboardingFlow/OnboardNavbar.tsx","webpack:///./lib/UserProvider.tsx","webpack:///./lib/firebase.tsx","webpack:///./lib/server.tsx","webpack:///./model/model.tsx","webpack:///./pages/signup.tsx","webpack:///external \"@ant-design/icons\"","webpack:///external \"antd\"","webpack:///external \"axios\"","webpack:///external \"firebase/app\"","webpack:///external \"firebase/auth\"","webpack:///external \"firebase/storage\"","webpack:///external \"lodash\"","webpack:///external \"next/head\"","webpack:///external \"next/router\"","webpack:///external \"react\"","webpack:///external \"react-modal\"","webpack:///external \"styled-components\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = \"/_next/static/images/sumpixel-logo-a3c23479ee4c195d2c8c3492a1819eed.png\";","import styled from 'styled-components'\nimport {Button} from 'antd'\n\nexport const BigBlackButton = styled(Button)`\n    background: #000;\n    color: #fff;\n    border-radius: 2px;\n    border: none;\n    padding: 15px 24px;\n    height: auto;\n    font-family: 'Mark Pro';\n\n    &:hover {\n        background: #DAE2EF;\n        color: #000;\n    }\n\n    &:focus {\n        background: #000;\n        color: #fff;\n    }\n`","import React from 'react'\nimport {Row, Col} from 'antd'\nimport styled from 'styled-components';\n\nconst ColContainer = styled(Col)`\n    padding-top: 25px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n\ninterface ContainerProps {\n    children: React.ReactNode\n    isDashboard?: boolean\n    style?: any\n}\nexport const Container: React.FC<ContainerProps> = props => {\n    return (\n        <Row gutter={24}>\n            <Col className={'gutter-row'} span={props.isDashboard !== undefined ? 2 : 5}/>\n            <ColContainer style={props.style} className={'gutter-row'} span={props.isDashboard !== undefined ? 20 : 14}>\n                {props.children}\n            </ColContainer>\n            <Col className={'gutter-row'} span={props.isDashboard !== undefined ? 2 : 5}/>\n        </Row>\n    )\n}","import React from 'react'\nimport {Spin} from 'antd'\nimport styled from 'styled-components'\n\nconst Cont = styled.div`\n    position: fixed;\n    display: flex;\n    width: 100%;\n    height: 100%;\n    justify-content: center;\n    align-items: center;\n`\n\nconst Loading: React.FC = () => {\n    return (\n        <Cont>\n            <Spin size=\"large\" />\n        </Cont>\n    )\n}\n\nexport default Loading","import React, { useEffect } from 'react'\nimport Modal from 'react-modal'\nimport styled from 'styled-components'\n\nconst ModalContainer = styled.div`\n    flex: 1;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: rgba(0,0,0,0.5);\n    height: 100vh;\n`\n\ninterface PopupModalProps {\n    visible: boolean;\n    children: React.ReactNode\n}\nexport const PopupModal: React.FC<PopupModalProps> = (props) => {\n    useEffect(() => {\n        Modal.setAppElement('body')\n    }, [])\n    return (\n        <Modal\n            animationType=\"fade\"\n            transparent={true}\n            isOpen={props.visible}\n            style={{\n                content: {\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    padding: 0,\n                    border: 0,\n                    borderRadius: 0\n                }\n            }}\n        >\n            <ModalContainer>\n                {props.children}\n            </ModalContainer>\n        </Modal>\n    );\n};","import React from 'react'\nimport {Card} from 'antd'\n\nexport const SumpixelCard: React.FC<{withLink?: boolean}> = (props) => {\n    var logo = <img height={43} src={require('../../assets/sumpixel-logo.png')}/>\n    if (props.withLink) {\n        logo =  <a href={'/'}>\n                    <img height={43} src={require('../../assets/sumpixel-logo.png')}/>\n                </a>\n    }\n\n    return (\n        <Card style={{paddingLeft: 20, paddingRight: 20, maxHeight: '100vh'}} title={logo}>\n                {props.children}\n        </Card>\n    )\n}","import {Card, Form, Input, Button, Row, Typography, Col } from 'antd'\nimport {UserOutlined, LockOutlined} from '@ant-design/icons'\nimport React, {useState} from 'react'\nimport {NavBarStatus} from '../../model/model'\nimport Router from 'next/router'\nimport { BigBlackButton } from '../General/BigBlackButton'\nimport styled from 'styled-components'\nimport {SumpixelCard} from '../General/SumpixelCard'\n\ninterface LoginComponentProps {\n    isSignUp: boolean\n    onFinish: (values) => void\n    title: string\n}\n\nconst LoginComponent: React.FC<LoginComponentProps> = (props) => {\n    const {isSignUp, onFinish, title} = props\n\n    const onClick = () => {\n        window.analytics.track('Go to Sign Up');\n        Router.replace('/signup')\n    }\n\n    return (\n        <div style={{display: 'flex', flexDirection: 'column'}}>\n            <SumpixelCard withLink={isSignUp}>\n                <Form\n                    hideRequiredMark={true}\n                    name=\"basic\"\n                    initialValues={{ remember: true }}\n                    onFinish={onFinish}\n                >\n\n                    {isSignUp ? \n                        \n                            <Input.Group>\n                                <Row>\n                                    <Col span={11}>\n                                        <Form.Item\n                                            label=\"First Name\"\n                                            name=\"firstName\"\n                                            rules={[{ required: true, message: 'First Name is required' }]}\n                                        >\n                                            <Input placeholder=\"First Name\"/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={2}/>\n                                    <Col span={11}>\n                                        <Form.Item\n                                                label=\"Last Name\"\n                                                name=\"lastName\"\n                                                rules={[{ required: true, message: 'Last Name is required' }]}\n                                            >\n                                            <Input placeholder=\"Last Name\"/>\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                            </Input.Group>\n                        \n                    : null}\n\n                    <Form.Item\n                        label=\"Email\"\n                        name=\"email\"\n                        rules={[{ required: true, message: 'Email is required' }]}\n                    >\n                        <Input placeholder=\"Email\"/>\n                    </Form.Item>\n\n                    <Form.Item\n                        style={{marginBottom: 0}}\n                        label=\"Password\"\n                        name=\"password\"\n                        rules={[{ required: true, message: 'Password is required' }]}\n                    >\n                        <Input type=\"password\" placeholder=\"Password\"/>\n                    </Form.Item>\n                    {!isSignUp ? \n                            <div style={{width: '100%', display: 'flex', justifyContent: 'flex-end'}}>\n                                <Button style={{fontFamily: 'Mark Pro',\n                                            color: \"#000000\",\n                                            opacity: \"0.5\",\n                                            textAlign: \"right\",\n                                            fontSize: \"12px\",\n                                            padding: \"0\"\n                                        }} \n                                        onClick={() => {Router.push('/forgotpassword')}} \n                                        type=\"link\">                    \n                                        Forgot Password.\n                                </Button>\n                            </div>\n                        : null}\n\n                    <Form.Item>\n                        <Row justify=\"center\">\n                            <BigBlackButton style={{width: '60%', marginTop: 60}} type=\"primary\" htmlType=\"submit\">\n                                {title}\n                            </BigBlackButton>\n                        </Row>\n                    </Form.Item>\n                </Form>\n            </SumpixelCard>\n            {!isSignUp ? \n                <Typography.Text style={{fontFamily: 'Mark Pro', fontWeight: 500, paddingTop: 10, textAlign: 'center'}}>\n                    Don't have an account? <Button onClick={onClick} style={{padding: 0, fontWeight: 'bold'}} type=\"link\">Sign Up.</Button>\n                </Typography.Text>\n            : null}\n        </div>\n    )\n}\n\nexport default LoginComponent","import React, {useState, useContext} from 'react'\nimport { Form, Input, Button, Checkbox, Row, Col, Select, Upload, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport _ from 'lodash'\nimport {User, VisaStatus, NavBarStatus, UNIVERSAL_COLOR} from '../../../model/model'\nimport FormProps from '../FormProps'\nimport {UploadFile} from 'antd/lib/upload/interface'\nimport {storage_ref, myFirebase} from '../../../lib/firebase'\nimport {removeUser} from '../../../lib/server'\nimport {UserContext} from '../../../lib/UserProvider'\nimport Loading from '../../General/Loading'\nimport {BigBlackButton} from '../../General/BigBlackButton'\nconst {Option} = Select\n\ninterface FormPersonalDataProps extends FormProps {\n    modifyProfile?: boolean\n}\n\nconst FormPersonalData: React.FC<FormPersonalDataProps> = (props) => {\n    const {changeCurrentUser, changeStep, changeNavbarStatus, modifyProfile} = props\n    const isModifyProfilePage = modifyProfile !== undefined\n    const {currentUser, changeUser}  = useContext(UserContext)\n    const [checked, changeChecked] = useState(false)\n    const [fileList, updateFileList] = useState<UploadFile[]>([])\n    const goBack = async () => {\n        changeNavbarStatus(NavBarStatus.Undecided)\n        changeStep(-1)\n        \n    }\n\n    if (currentUser == undefined) {\n        return (<Loading />)\n    }\n\n    const getRules = (name) => {\n        return [{ required: !isModifyProfilePage, message: !isModifyProfilePage ? `${name} is required` : '' }]\n    }\n\n    const updateUser = (values) => {\n        const newUser = {\n            email: currentUser.email,\n            id: currentUser.id,\n            firstName: currentUser.firstName,\n            lastName: currentUser.lastName,\n            phoneNumber: values.phoneNumber,\n            location: values.location,\n            salary: values.salary,\n            portfolio: values.portfolio,\n            preferredRole: values.preferredRole,\n            visa: values.visa_status,\n            resume: currentUser.id + '.pdf',\n            linkedin: values.linkedin,\n            dribbble: values.dribbble\n        }\n        console.table(_.pickBy(newUser, _.identity))\n\n        changeCurrentUser(_.pickBy(newUser, _.identity))\n\n        if (isModifyProfilePage) {\n            message.success(\"Profile Updated\")\n        } else {\n            changeStep(1)\n        }\n    }\n\n    const onFinish = (values) => {\n        if (!isModifyProfilePage && !checked) {\n            message.error('Please agree to the Terms of Service')\n            return\n        }\n\n        const res = values.resume\n        console.log(res)\n        if (res === undefined) {\n            updateUser(values)\n        } else {\n            storage_ref.child('resumes/' + currentUser.id + '.pdf').put(res.file[\"originFileObj\"]).then((snapshot) => {\n                updateUser(values)\n            })\n        }    \n    }\n\n    const onFinishFailed = (values) => {\n        console.table(values)\n        message.error('There was an error completing your account. Ensure every field is filled out.')\n    }\n\n    return (\n        <Form\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            style={{marginBottom: 50}}\n        >\n            {!isModifyProfilePage ? \n                <>\n                    <Input.Group>\n                        <Row>\n                            <Col span={11}>\n                                <Form.Item\n                                    label=\"First Name\"\n                                    name=\"firstName\"\n                                >\n                                    <Input disabled placeholder=\"First Name\" defaultValue={currentUser.firstName}/>\n                                </Form.Item>\n                            </Col>\n                            <Col span={2}/>\n                            <Col span={11}>\n                                <Form.Item\n                                        label=\"Last Name\"\n                                        name=\"lastName\"\n                                >\n                                    <Input disabled placeholder=\"Last Name\" defaultValue={currentUser.lastName}/>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Input.Group>\n\n                    <Form.Item\n                        label=\"Email\"\n                        name=\"email\"\n                    >\n                        <Input disabled defaultValue={currentUser.email}/>\n                    </Form.Item>\n                </>\n            : null}\n\n            <Form.Item\n                label=\"Phone Number\"\n                name=\"phoneNumber\"\n                rules={getRules(\"Phone Number\")}\n            >\n                <Input defaultValue={isModifyProfilePage ? '' : currentUser.phoneNumber || \"\"} placeholder=\"+1 (555) 555-5555\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Location\"\n                name=\"location\"\n                rules={getRules(\"Location\")}\n            >\n                <Input defaultValue={isModifyProfilePage ? '' : currentUser.location || \"\"} placeholder=\"New York City\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Desired Salary\"\n                name=\"salary\"\n                rules={getRules(\"Desired Salary\")}\n            >\n                <Input defaultValue={isModifyProfilePage ? '' : (currentUser as User).salary || \"\"} placeholder=\"$100,000-$150,000 per year\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Preferred Role\"\n                name=\"preferredRole\"\n                rules={getRules(\"Preferred Role\")}\n            >\n                <Input defaultValue={isModifyProfilePage ? '' : (currentUser as User).preferredRole || \"\"} placeholder=\"UI/UX Designer\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Portfolio\"\n                name=\"portfolio\"\n                rules={getRules(\"Portfolio\")}\n            >\n                <Input defaultValue={isModifyProfilePage ? '' : (currentUser as User).portfolio || \"\"} placeholder=\"https://www.myportfolio.com\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Resume\"\n                name=\"resume\"\n                rules={getRules(\"Resume\")}\n            >\n                <Upload \n                    name={'file'} \n                    accept={\".pdf\"} \n                    fileList={fileList}\n                    onChange={(info) => {\n                        let fileList_update = [...info.fileList];\n                        fileList_update = fileList_update.slice(-1);\n\n                        fileList_update = fileList_update.map(file => {\n                            if (file.response) {\n                                file.url = file.response.url;\n                            }\n                            if (file.status === 'error') {\n                                // TODO: Find better way of handling this\n                                file.status = 'done'\n                            }\n                            return file;\n                        });\n\n                        if (info.file.status === 'done') {\n                            message.success(`${info.file.name} file uploaded successfully`);\n                        } else if (info.file.status === 'error') {\n                            message.success(`${info.file.name} file uploaded successfully`);\n                        }\n\n                        updateFileList(fileList_update)\n                    }}>\n                    <Button>\n                        <UploadOutlined /> {!isModifyProfilePage ? \"Click to Upload\" : \"Upload New Resume\"}\n                    </Button>\n                </Upload>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Visa Status\"\n                name=\"visa_status\"\n                rules={getRules(\"Visa Status\")}\n                \n            >\n                <Select defaultValue={modifyProfile ? '' : (currentUser as User).visa || \"\"} placeholder=\"Select an option:\">\n                    {_.map(VisaStatus, (status) => {\n                        return <Option value={status}>{status}</Option>\n                    })}\n                </Select>\n            </Form.Item>\n\n            <Form.Item\n                label=\"LinkedIn\"\n                name=\"linkedin\"\n            >\n                <Input defaultValue={modifyProfile ? '' : (currentUser as User).linkedin || \"\"} placeholder=\"https://www.linkedin.com/in/username\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Dribbble\"\n                name=\"dribbble\"\n            >\n                <Input defaultValue={modifyProfile ? '' : (currentUser as User).dribbble || \"\"} placeholder=\"https://dribbble.com/username\"/>\n            </Form.Item>\n\n            {!isModifyProfilePage ? \n                <Form.Item \n                    valuePropName={'checked'}\n                >\n                    <Checkbox style={{fontFamily: 'Mark Pro'}} checked={checked} onChange={(e) => changeChecked(e.target.checked)}>Agree to The <a style={{color: UNIVERSAL_COLOR}} target={'_blank'} href={'/terms'}>Terms of Services</a></Checkbox>\n            </Form.Item> \n            : null}\n\n                <Form.Item>\n                    <Row justify=\"space-between\" align=\"middle\">\n                        {!isModifyProfilePage ? \n                        <BigBlackButton type=\"default\" onClick={goBack}>\n                            Back\n                        </BigBlackButton>\n                        : null}\n                        <BigBlackButton style={{marginTop: 10}} htmlType=\"submit\">\n                            {!isModifyProfilePage ? \"Take The Quiz\" : \"Update Profile\" }\n                        </BigBlackButton>\n                    </Row>\n                </Form.Item> \n           \n        </Form>\n    );\n}\n\nexport default FormPersonalData","import React, {useState} from 'react'\nimport { Form, Input, Button, Checkbox, Row, Col, Select, Upload, message, Typography } from 'antd';\nimport _ from 'lodash'\nimport FormProps from './FormProps'\nimport {removeUser} from '../../lib/server'\nimport {NavBarStatus} from '../../model/model'\nimport styled from 'styled-components'\nimport { BigBlackButton } from '../General/BigBlackButton';\n\nconst EMButton = styled(BigBlackButton)`\n    margin-bottom: 30px\n`\n\nconst EmployerDesigner: React.FC<FormProps> = (props) => {\n    const {changeStep, changeNavbarStatus} = props\n    const onClick = (isDesigner: boolean) => {\n        changeNavbarStatus(isDesigner ? NavBarStatus.Designer : NavBarStatus.Employer)\n        changeStep(1)\n    }\n    return (\n        <>\n            <EMButton type=\"default\" onClick={() => onClick(false)}>\n                Employer\n            </EMButton>\n            <EMButton type=\"default\" onClick={() => onClick(true)}>\n                Designer\n            </EMButton>\n            <EMButton type=\"default\" onClick={props.deleteUser}>\n                Change Email or Name\n            </EMButton>\n        </>\n    );\n}\n\nexport default EmployerDesigner","import React, {useState, useContext} from 'react'\nimport { Form, Input, Button, Checkbox, Row, Col, Select, Upload, message, Spin } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport _ from 'lodash'\nimport {User, VisaStatus, NavBarStatus, Employer, UNIVERSAL_COLOR} from '../../../model/model'\nimport FormProps from '../FormProps'\nimport {UploadFile} from 'antd/lib/upload/interface'\nimport {storage_ref, myFirebase} from '../../../lib/firebase'\nimport {removeUser} from '../../../lib/server'\nimport {UserContext} from '../../../lib/UserProvider'\nimport Loading from '../../General/Loading'\nimport {BigBlackButton} from '../../General/BigBlackButton'\nconst {Option} = Select\n\ninterface FormBusinessDataProps extends FormProps {\n    modifyProfile?: boolean\n}\n\nconst FormBusinessData: React.FC<FormBusinessDataProps> = (props) => {\n    const {changeCurrentUser, changeStep, changeNavbarStatus, modifyProfile} = props\n    const {currentUser, changeUser} = useContext(UserContext)\n    const [checked, changeChecked] = useState(false)\n    const isModifyProfilePage = modifyProfile !== undefined\n\n    const goBack = async () => {\n        changeNavbarStatus(NavBarStatus.Undecided)\n        changeStep(-1)\n    }\n\n    if (currentUser == undefined) {\n        return (<Loading />)\n    }\n\n    const getRules = (name) => {\n        return [{ required: !isModifyProfilePage, message: !isModifyProfilePage ? `${name} is required` : '' }]\n    }\n\n    const onFinish = (values) => {\n        if (!isModifyProfilePage && !checked) {\n            message.error('Please agree to the Terms of Service')\n            return\n        }\n\n        const newEmployer = {\n            email: currentUser.email,\n            id: currentUser.id,\n            firstName: currentUser.firstName,\n            lastName: currentUser.lastName,\n            companyName: values.companyName,\n            phoneNumber: values.phoneNumber,\n            location: values.location\n        }\n\n        changeCurrentUser(_.pickBy(newEmployer, _.identity))\n        if (isModifyProfilePage) {\n            message.success(\"Your profile has been updated\")\n        } else {\n            changeStep(1)\n        }\n    }\n\n    const onFinishFailed = () => {\n        message.error('There was an error completing your account. Ensure every field is filled out.')\n    }\n\n    return (\n        <Form\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n        >\n            {!isModifyProfilePage ? \n            <>\n                <Form.Item\n                    label=\"Name\"\n                    name=\"firstName\"\n                >\n                    <Input.Group>\n                        <Row>\n                            <Col span={11}>\n                                <Input disabled defaultValue={currentUser.firstName}/>\n                            </Col>\n                            <Col span={2}/>\n                            <Col span={11}>\n                                <Input disabled defaultValue={currentUser.lastName}/>\n                            </Col>\n                        </Row>\n                    </Input.Group>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Email\"\n                    name=\"email\"\n                >\n                    <Input disabled defaultValue={currentUser.email}/>\n                </Form.Item>\n            </>\n            : null}\n            \n\n            <Form.Item\n                label=\"Company Name\"\n                name=\"companyName\"\n                rules={getRules(\"Company Name\")}\n            >\n                <Input defaultValue={modifyProfile ? '' : (currentUser as Employer).companyName || \"\"} placeholder=\"Company Name\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Phone Number\"\n                name=\"phoneNumber\"\n                rules={getRules(\"Phone Number\")}\n            >\n                <Input defaultValue={modifyProfile ? '' : (currentUser as Employer).phoneNumber || \"\"} placeholder=\"+1 (555) 555-5555\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Location\"\n                name=\"location\"\n                rules={getRules(\"Location\")}\n            >\n                <Input defaultValue={modifyProfile ? '' : (currentUser as Employer).location || \"\"} placeholder=\"New York City\"/>\n            </Form.Item>\n\n            {!isModifyProfilePage ? \n            <Form.Item \n                valuePropName={'checked'}\n                >\n                    <Checkbox style={{fontFamily: 'Mark Pro'}} checked={checked} onChange={(e) => changeChecked(e.target.checked)}>Agree to The <a style={{color: UNIVERSAL_COLOR}} target={'_blank'} href={'/terms'}>Terms of Service</a></Checkbox>\n            </Form.Item> \n            : null }\n\n            <Form.Item>\n                <Row justify=\"space-between\" align=\"middle\">\n                    {!isModifyProfilePage ? \n                        <BigBlackButton type=\"default\" onClick={goBack}>\n                            Back\n                        </BigBlackButton>\n                    : null}\n                    <BigBlackButton style={{marginTop: 10}} htmlType=\"submit\">\n                        {isModifyProfilePage ? \"Update Company Profile\" : \"Finish Setup\"}\n                    </BigBlackButton>\n                </Row>\n            </Form.Item>\n        </Form>\n    );\n}\n\nexport default FormBusinessData","import React, { useState, useContext } from 'react'\nimport {OnboardNavbar} from './OnboardNavbar'\nimport {Container} from '../General/Container'\nimport {Typography} from 'antd'\nimport {User, NavBarStatus, Employer} from '../../model/model'\nimport FormPersonalData from './Designers/FormPersonalData'\nimport FormBusinessData from './Employers/FormBusinessData'\nimport QuizScreen from './Designers/QuizScreen'\nimport EmployerDesigner from './EmployerDesigner'\nimport styled from 'styled-components'\nimport {UserContext} from '../../lib/UserProvider'\nimport {createUser, createEmployer} from '../../lib/server'\nimport Router from 'next/router'\n\nconst Title = styled(Typography.Title)`\n    padding-top: 15px;\n    padding-bottom: 35px;\n`\n\ninterface OnboardProps {\n    deleteUser: () => void\n}\n\nexport const Onboard: React.FC<OnboardProps> = props => {\n    const [currentStep, changeStep] = useState(0);\n    const [navBarStatus, changeNavbarStatus] = useState<NavBarStatus>(NavBarStatus.Undecided);\n    const {currentUser, changeUser}  = useContext(UserContext)\n\n    const updateUser = async (updatedUser: User) => {\n        window.analytics.track('Create User');\n        changeUser(updatedUser)\n        await createUser(updatedUser)\n    }\n\n    const updateEmployer = async (updatedUser: Employer) => {\n        window.analytics.track('Create Employer');\n        changeUser(updatedUser)\n        await createEmployer(updatedUser)\n    }\n    var currentForm;\n    var title;\n    switch (currentStep) {\n        case 0:\n            currentForm = <EmployerDesigner \n                                    deleteUser={props.deleteUser}\n                                    changeNavbarStatus={(newStatus) => changeNavbarStatus(newStatus)}\n                                    changeStep={(change) => changeStep(currentStep + change)}/>;\n            break;\n        case 1:\n            if (navBarStatus == NavBarStatus.Designer) {\n                currentForm = <FormPersonalData \n                                    changeNavbarStatus={(newStatus) => changeNavbarStatus(newStatus)}\n                                    changeStep={(change) => changeStep(currentStep + change)}\n                                    changeCurrentUser={async (user) => await updateUser(user)}/>;\n            } else {\n                currentForm = <FormBusinessData \n                                    changeNavbarStatus={(newStatus) => changeNavbarStatus(newStatus)}\n                                    changeStep={(change) => changeStep(currentStep + change)}\n                                    changeCurrentUser={async (user) => await updateEmployer(user)}/>;\n            }\n            break;\n        case 2:\n            if (navBarStatus == NavBarStatus.Designer) {\n                Router.push('/dashboard_user');\n            } else {\n                Router.replace('/dashboard_employer')\n            }\n            break;\n    }\n\n    return (\n        <Container>\n            <OnboardNavbar status={navBarStatus} currentStep={currentStep}/>\n            <Title>{title}</Title>\n            {currentForm}\n        </Container>\n    );\n}","import React from 'react'\nimport { Steps } from 'antd';\nconst {Step} = Steps;\nimport _ from 'lodash'\nimport {NavBarStatus} from '../../model/model'\n\ninterface OnboardNavbarProps {\n    currentStep: number;\n    status: NavBarStatus\n}\n\nconst DESIGN_STEPS: {title: string, desc: string}[] = [\n    {title: \"Employer or Designer\", desc: \"Are you an Employer or Designer?\"},\n    {title: \"Get Started\", desc: \"Add Personal Data\"},\n    {title: \"Take the Quiz\", desc: \"Finish Up and Get Evaluated\"}\n];\nconst EMPLOYER_STEPS: {title: string, desc: string}[] = [\n    {title: \"Employer or Designer\", desc: \"Are you an Employer or Designer?\"},\n    {title: \"Get Started\", desc: \"Add Data About Your Business\"},\n    {title: \"Go To Dashboard\", desc: \"Finish Up and Start Searching\"}\n];\n\nexport const OnboardNavbar: React.FC<OnboardNavbarProps> = (props) => {\n    var steps: {title: string, desc: string}[]\n    switch (props.status) {\n        case NavBarStatus.Undecided:\n            steps = [DESIGN_STEPS[0]]\n            break;\n        case NavBarStatus.Designer:\n            steps = DESIGN_STEPS\n            break;\n        case NavBarStatus.Employer:\n            steps = EMPLOYER_STEPS\n            break;\n    }\n\n    return (\n        <Steps style={{fontFamily: 'Mark Pro', paddingBottom: 20, justifyContent: 'center'}} current={props.currentStep}>\n            {_.map(steps, ({title, desc}) => {\n                return (<Step title={title} description={desc}/>)\n            })}\n        </Steps>\n    );\n}","import React, { Component, createContext } from \"react\";\nimport { myFirebase } from \"./firebase\";\nimport {User, Employer} from '../model/model'\nimport {getEmployer, getUser} from './server'\nimport Router from \"next/router\";\nimport {message} from 'antd'\nimport Loading from '../components/General/Loading'\n\ninterface ContextProps {\n    currentUser: User | Employer | null,\n    changeUser: (newUser: User | Employer | null) => void\n}\n\nexport const UserContext = createContext<Partial<ContextProps>>({\n    currentUser: null,\n    changeUser: () => {}\n});\nclass UserProvider extends Component {\n  changeUser = (newUser: User | Employer | null) => {\n      this.setState({currentUser: newUser, loading: false})\n  }\n\n  state = {\n    loading: false,\n    currentUser: null,\n    changeUser: this.changeUser\n  };\n\n  componentDidMount = () => {\n    myFirebase.auth().onAuthStateChanged(async (userAuth) => {\n        this.setState({loading: true})\n        if (userAuth === null) {\n            this.setState({loading: false})\n            return\n        }\n\n        if (userAuth.isAnonymous) {\n          console.log('userauth:' + userAuth)\n          this.changeUser({\n            firstName: '',\n            lastName: '',\n            email: '',\n            id: userAuth.uid,\n            isAnonymous: true\n          } as Employer)\n          return\n        }\n\n        // This is some of the worst code I've ever made\n        var current;\n        try {\n          current = await getUser(userAuth.uid)\n        } catch (error) {\n          try {\n            current = await getEmployer(userAuth.uid)\n            current[\"user_exists\"] = false\n          } catch (error) {\n            console.log(\"this better be a new user\")\n          }\n        }\n\n        if (current !== undefined && current['user_exists'] === undefined) {\n            this.changeUser(current as User)\n            window.analytics.identify(current.id, {\n              name: current.name,\n              email: current.email\n            });\n            Router.replace('/dashboard_user')\n        } else if (current !== undefined && current['employer_exists'] === undefined) {\n            window.analytics.identify(current.id, {\n              name: current.name,\n              email: current.email\n            });\n            this.changeUser(current as Employer)\n            Router.push('/dashboard_employer')\n        } else {\n            // TODO: Find alternate way to wait until names are updated\n            // Works for both\n            setTimeout(() => {\n                this.changeUser({\n                    email: userAuth.email,\n                    id: userAuth.uid,\n                    firstName: userAuth.displayName.substr(0, userAuth.displayName.indexOf(' ')),\n                    lastName: userAuth.displayName.substr(userAuth.displayName.indexOf(' ')+1),\n                })\n            }, 500)\n            \n        }\n    });\n  };\n  render() {\n    if (this.state.loading) {\n      return (<Loading/>)\n    }\n\n    return (\n      <UserContext.Provider value={this.state}>\n        {this.props.children}\n      </UserContext.Provider>\n    );\n  }\n}\nexport default UserProvider;","import * as firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/storage'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAhADa1McBAdXoOmv4T32G7rSBQkATYJ3Q\",\n    authDomain: \"sumpixel-auth.firebaseapp.com\",\n    databaseURL: \"https://sumpixel-auth.firebaseio.com\",\n    projectId: \"sumpixel-auth\",\n    storageBucket: \"sumpixel-auth.appspot.com\",\n    messagingSenderId: \"7190255367\",\n    appId: \"1:7190255367:web:a39d3629fd5215cda2d7a2\",\n    measurementId: \"G-2P5W47Z3HN\"\n};\n\n// Initialize Firebase\nif (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n}\nexport const myFirebase = firebase;\nexport const storage_ref = firebase.storage().ref();","import { User, Employer, EmployerDecisionHire, DesignerDecisionTalk, CommForDesigner, Communication, CommForEmployer } from \"../model/model\";\nimport axios from 'axios';\n\nconst SERVER_BASE = 'https://server.sumpixel.com/'\n\nenum HTTP_Requests {\n    GET = 'GET',\n    POST = 'POST',\n    PUT = 'PUT'\n}\n\nconst request = async (url: string, params, method: HTTP_Requests = HTTP_Requests.GET) => {\n    var response;\n    switch (method) {\n        case HTTP_Requests.GET:\n            response = await axios.get(SERVER_BASE + url, {params: params});\n            break;\n        case HTTP_Requests.POST:\n            response = await axios.post(SERVER_BASE + url, params);\n            break;\n        case HTTP_Requests.PUT:\n            response = await axios.put(SERVER_BASE + url, params);\n            break;\n    }\n\n    if (response.status !== 200) {\n        return generateErrorResponse('The server responded with an unexpected status.');\n    }\n\n    const result = response.data;\n\n    return result;\n\n}\n\nconst generateErrorResponse = (message) => {\n    return {\n        status : 'error',\n        message\n    };\n}\n\nexport const getUser = async (id: string): Promise<User | {user_exists: boolean}> => {\n    return await request('get-user', {id: id})\n}\n\nexport const getEmployer = async (id: string): Promise<Employer | {user_exists: boolean}> => {\n    return await request('get-employer', {id: id})\n}\n\nexport const removeUser = async (id: string) => {\n    return await request('remove-user', {id: id})\n}\n\nexport const removeEmployer = async (id: string) => {\n    return await request('remove-employer', {id: id})\n}\n\nexport const createUser = async (user: User) => {\n    return await request('create-user', user, HTTP_Requests.POST)\n}\n\nexport const modifyUser = async (user: User) => {\n    return await request('modify-user', user, HTTP_Requests.POST)\n}\n\nexport const createEmployer = async (employer: Employer) => {\n    return await request('create-employer', employer, HTTP_Requests.POST)\n}\n\nexport const modifyEmployer = async (employer: Employer) => {\n    return await request('modify-employer', employer, HTTP_Requests.POST)\n}\n\nexport const createCommunication = async (designerId: string, employerId: string): Promise<Communication> => {\n    return await request('create-new-communication', {designerId: designerId, employerId: employerId }, HTTP_Requests.POST)\n}\n\nexport const updateDesignerDecision = async (commId: string, decision: DesignerDecisionTalk) => {\n    return await request('update-designer-decision', {id: commId, designerApprovedTalk: decision }, HTTP_Requests.POST)\n}\n\nexport const updateEmployerDecision = async (commId: string, decision: EmployerDecisionHire) => {\n    return await request('update-employer-decision', {id: commId, decision: decision }, HTTP_Requests.POST)\n}\n\nexport const getDesignCommunicationsList = async (id: string): Promise<CommForDesigner[]> => {\n    return await request('get-all-designer-communications', {id})\n}\n\nexport const getEmployerCommunicationsList = async (id: string): Promise<CommForEmployer[]> => {\n    return await request('get-all-employer-communications', {id})\n}\n\nexport const getGradedDesigners = async (id: string): Promise<User[]> => {\n    return await request('get-graded-designers', {id})\n}\n\nexport const getDesignerFromCommunication = async (id: string): Promise<User> => {\n    return await request('get-designer-from-communication', {id})\n}","export const UNIVERSAL_COLOR = '#5E0BEF'\nexport const UNIVERSAL_BACKGROUND = '#F7F9FB'\n\nexport interface User {\n    id: string;\n    email: string;\n    firstName: string;\n    lastName: string;\n    phoneNumber?: string;\n    portfolio?: string;\n    location?: string;\n    salary?: string;\n    visa?: VisaStatus;\n    preferredRole?: string;\n    linkedin?: string;\n    dribbble?: string;\n    resume?: string;\n    designType?: string;\n    completedQuiz?: boolean;\n    grade?: DesignerGrade;\n    graded?: boolean;\n    communications?: string[];\n}\n\nexport interface DesignerGrade {\n    response?: string;\n    score?: number\n}\n\nexport interface Employer {\n    id: string;\n    email: string;\n    firstName: string;\n    lastName: string;\n    companyName?: string\n    phoneNumber?: string;\n    location?: string;\n    communications?: string[];\n    isAnonymous?: boolean\n}\n\nexport interface Communication {\n    id: string;\n    designerId: string;\n    employerId: string;\n    designerApprovedTalk: DesignerDecisionTalk;\n    decision: EmployerDecisionHire\n}\n\nexport interface CommForDesigner {\n    communicationId: string\n    companyName: string\n    designerApprovedTalk: DesignerDecisionTalk\n    decision: EmployerDecisionHire\n}\n\nexport interface CommForEmployer {\n    communicationId: string\n    fullName: string\n    designerApprovedTalk: DesignerDecisionTalk\n    decision: EmployerDecisionHire\n}\n\nexport enum EmployerDecisionHire {\n    REJECT = \"REJECT\",\n    HIRE = \"HIRE\",\n    UNDECIDED = \"UNDECIDED\"\n}\n\nexport enum DesignerDecisionTalk {\n    WILL_TALK = \"WILL_TALK\",\n    WILL_NOT_TALK = \"WILL_NOT_TALK\",\n    UNDECIDED = \"UNDECIDED\"\n}\n\nexport enum VisaStatus {\n    US_CITIZEN = \"US Citizen/Green Card\",\n    VISA_HOLDER = \"US Visa Holder\",\n    ELIGIBLE = \"Eligible For US Visa\",\n    NOT_ELIGIBLE = \"Not Eligible for US Visa\"\n}\n\nexport enum NavBarStatus {\n    Undecided,\n    Employer,\n    Designer\n}\n","import React, {useEffect, useState, useContext} from 'react'\nimport {message} from 'antd'\nimport {PopupModal} from '../components/General/PopupModal';\nimport {myFirebase} from '../lib/firebase'\nimport {Onboard} from '../components/OnboardingFlow/Onboard'\nimport { UserContext } from '../lib/UserProvider';\nimport Head from 'next/head'\nimport LoginComponent from '../components/Login/LoginComponent'\n\nconst SignUp: React.FC = (props) => {\n    const {currentUser, changeUser} = useContext(UserContext)\n    const [isSignedIn, setIsSignedIn] = useState(false);\n    useEffect(() => {\n        if (currentUser !== undefined && currentUser !== null) {\n            setIsSignedIn(true)\n        }\n    }, [currentUser])\n\n    useEffect(() => {\n        window.analytics.page('Signup')\n    }, [])\n\n    const onFinish = (values) => {\n        myFirebase.auth().createUserWithEmailAndPassword(values.email, values.password).then(() => {\n            myFirebase.auth().currentUser.updateProfile({\n                displayName: `${values.firstName} ${values.lastName}`\n            }).then(() => {\n                window.analytics.track('Firebase Auth Signup');\n                setIsSignedIn(true)\n            })\n        }).catch((error) => {\n            message.error(error.message)\n        })\n    }\n\n    const deleteUser = async () => {\n        window.analytics.track('Go Back - Delete Firebase User');\n        setTimeout(async () => await myFirebase.auth().currentUser.delete(), 1000)\n        changeUser(undefined)\n        setIsSignedIn(false)\n    }\n\n    return (\n        <>\n            <Head>\n                <title>Sign Up</title>\n            </Head>\n            <PopupModal\n                visible={!isSignedIn}\n            >\n                <LoginComponent isSignUp={true} title=\"Sign Up\" onFinish={onFinish}/>\n            </PopupModal>\n            <Onboard deleteUser={deleteUser}/>\n        </>\n    );\n};\n\nexport default SignUp;","module.exports = require(\"@ant-design/icons\");","module.exports = require(\"antd\");","module.exports = require(\"axios\");","module.exports = require(\"firebase/app\");","module.exports = require(\"firebase/auth\");","module.exports = require(\"firebase/storage\");","module.exports = require(\"lodash\");","module.exports = require(\"next/head\");","module.exports = require(\"next/router\");","module.exports = require(\"react\");","module.exports = require(\"react-modal\");","module.exports = require(\"styled-components\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxFA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAJA;AAqBA;;;;;;;;;;;;AC3CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;ACheA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;AC/GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAWA;AAAA;AAEA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAOA;AACA;AAFA;AAIA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AAkCA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAKA;AACA;AAFA;AAIA;AAAA;AAAA;AAIA;AACA;AAFA;AAIA;AAAA;AAAA;AAKA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAEA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;;;;;;;;;;;;AClQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AASA;AACA;AAFA;AAMA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAOA;AACA;AAFA;AAIA;AAAA;AAAA;AAOA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAKA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAEA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;;;;;;;;;;;;ACrJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AACA;AAHA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AA1BA;AACA;AA4BA;AAEA;AAAA;AAAA;AAKA;;;;;;;;;;;;AC7EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AATA;AACA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AACA;AAEA;AACA;AAEA;AAOA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAHA;AACA;AANA;AAYA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AACA;AAxEA;AACA;AAwEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AApFA;AACA;AAoFA;;;;;;;;;;;;ACtGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAWA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AATA;AACA;AAWA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;ACpGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA8DA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AADA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACzDA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}