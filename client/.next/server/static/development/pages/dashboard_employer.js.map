{"version":3,"file":"static/development/pages/dashboard_employer.js","sources":["webpack:///webpack/bootstrap","webpack:///./assets/sumpixel-logo.png","webpack:///./components/Dashboard/Employer/DesignerInfoModal.tsx","webpack:///./components/Dashboard/Employer/DesignerList.tsx","webpack:///./components/Dashboard/Employer/EmployerCommList.tsx","webpack:///./components/Dashboard/Employer/FindDesigners.tsx","webpack:///./components/Dashboard/Employer/ManageCommunications.tsx","webpack:///./components/Dashboard/NavigationBar.tsx","webpack:///./components/General/BigBlackButton.tsx","webpack:///./components/General/Container.tsx","webpack:///./components/General/Loading.tsx","webpack:///./components/OnboardingFlow/Employers/FormBusinessData.tsx","webpack:///./lib/UserProvider.tsx","webpack:///./lib/firebase.tsx","webpack:///./lib/server.tsx","webpack:///./model/model.tsx","webpack:///./pages/dashboard_employer.tsx","webpack:///external \"antd\"","webpack:///external \"axios\"","webpack:///external \"firebase/app\"","webpack:///external \"firebase/auth\"","webpack:///external \"firebase/storage\"","webpack:///external \"lodash\"","webpack:///external \"next/head\"","webpack:///external \"next/router\"","webpack:///external \"react\"","webpack:///external \"styled-components\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = \"/_next/static/images/sumpixel-logo-a3c23479ee4c195d2c8c3492a1819eed.png\";","import React, {useContext} from 'react'\nimport { User, Employer } from '../../../model/model'\nimport {Modal, Button, Typography} from 'antd'\nimport {createCommunication} from '../../../lib/server'\nimport {storage_ref} from '../../../lib/firebase'\nimport {UserContext} from '../../../lib/UserProvider'\nimport _ from 'lodash'\nimport Router from 'next/router'\nimport {myFirebase} from '../../../lib/firebase'\n\ninterface DesignerInfoModalProps {\n    designer: User\n    visible: boolean\n    onConnect?: (designerId: string) => void\n    setInvisible: () => void\n}\n\nconst DesignerInfoModal: React.FC<DesignerInfoModalProps> = props => {\n    const {currentUser, changeUser} = useContext(UserContext)\n    const {designer, visible, onConnect, setInvisible} = props\n    const isAnonymous = (currentUser as Employer).isAnonymous\n\n    if (designer === undefined) {\n        return <></>\n    }\n\n    const {grade} = designer\n\n    const showInfo = {\n        \"Portfolio\": designer.portfolio,\n        \"Location\": designer.location,\n        \"Preferred Role\": designer.preferredRole,\n        \"Desired Salary\": designer.salary,\n        \"Phone Number\": designer.phoneNumber,\n        \"Email\": designer.email,\n    }\n\n    const onClick = () => {\n        if (isAnonymous) {\n            myFirebase.auth().signOut().then(() => {\n                changeUser(undefined)\n                Router.push('/signup')\n            })\n        } else {\n            onConnect(designer.id)\n        }\n    }\n\n    const downloadResume = () => {\n        storage_ref.child('resumes/' + designer.resume).getDownloadURL().then(url => {\n            console.log(url)\n            window.open(url, '_blank')\n        }).catch((error) => {\n            console.error(error)\n        })\n    }\n\n    return (\n        <Modal\n            onCancel={setInvisible}\n            title={designer.firstName + \" \" + designer.lastName}\n            visible={visible}\n            footer={[\n                <Button onClick={onClick} type=\"primary\">\n                    {isAnonymous ? `Create An Account to Connect With ${designer.firstName}` : `Connect To ${designer.firstName}`}\n                </Button>]}\n        >\n            <Typography.Title level={3} underline>Our Evaluation</Typography.Title>\n            <Typography.Title level={4}>Overall Score: {grade.score}</Typography.Title>\n            <Typography.Text>\n                This score is out of 10. \n                To learn more about our scoring system, <a target={'_blank'} href={'https://sumpixel.com/manifesto'}>click here.</a>\n            </Typography.Text>\n            <Typography.Title level={4}>Response From Evaluator:</Typography.Title>\n            <Typography.Text>\n                {grade.response}\n            </Typography.Text>\n            <Typography.Title level={3} underline>{designer.firstName}'s Info</Typography.Title>\n            <div style={{display: 'flex', flexDirection: 'column'}}>\n                {_.map(_.keys(showInfo), (key) => {\n                    return (<Typography.Text>{key}: {showInfo[key]}{'\\n'}</Typography.Text>)\n                })}\n            </div>\n            <Button style={{marginTop: 10}} onClick={downloadResume}>\n                Download Resume\n            </Button>\n        </Modal>)\n}\n\nexport default DesignerInfoModal","import React, {useEffect, useContext, useState} from 'react'\nimport { createCommunication } from '../../../lib/server'\nimport { User, Employer, UNIVERSAL_COLOR } from '../../../model/model'\nimport {UserContext} from '../../../lib/UserProvider'\nimport {Container} from '../../General/Container'\nimport Loading from '../../General/Loading'\nimport {Table, Button, Typography} from 'antd'\nimport DesignerInfoModal from './DesignerInfoModal'\nimport styled from 'styled-components'\nimport {BigBlackButton} from '../../General/BigBlackButton'\nconst {Column} = Table\n\nconst NameTitle = styled(Typography)`\n    color: #000000;\n    font-family: 'Mark Pro Bold';\n    font-size: 16px;\n`\n\nconst ResponseTitle = styled(Typography)`\n    color: #000000;\n    opacity: 0.5;\n    font-size; 14px;\n    font-family: 'Mark Pro';\n`\n\nexport interface FindDesignerListType {\n    name_feedback: string[],\n    score: number,\n    expiration: string,\n    primary_skill: string,\n    contact: User\n}\n\ninterface DesignerListProps {\n    designerList: FindDesignerListType[]\n}\n\nconst DesignerList: React.FC<DesignerListProps> = (props) => {\n    const {currentUser, changeUser}  = useContext(UserContext)\n    const {designerList} = props\n    const [showModal, setModalVisibility] = useState(false) \n    const [currentDesigner, setCurrentDesigner] = useState<User>(undefined) \n\n    const onMoreInfo = (user: User) => {\n        setCurrentDesigner(user)\n        setModalVisibility(true)\n    }\n\n    const onConnect = async (designerId: string) => {\n        window.analytics.track((currentUser as Employer).companyName + ' connects to designer');\n        const comm = await createCommunication(designerId, currentUser.id)\n        setModalVisibility(false)\n        const newUser = {...currentUser, communications: [...currentUser.communications, comm.id]}\n        changeUser(newUser)\n    }\n\n    return (\n        <>\n            <DesignerInfoModal setInvisible={() => setModalVisibility(false)}\n                                visible={showModal}\n                               designer={currentDesigner}\n                               onConnect={onConnect}/>\n            <Table\n                style={{paddingBottom: 10, width: '100%', fontFamily: 'Mark Pro', fontWeight: 'normal'}}\n                size={\"large\"}\n                dataSource={designerList}\n                bordered={false}\n                pagination={{defaultPageSize: 10}}\n            >\n                <Column onCell={(data, index) => ({style: {fontFamily: 'Mark Pro Bold'}})}  width={'35%'} title=\"Name\" dataIndex=\"name_feedback\" key=\"name_feedback\" render={(name_feedback) => (\n                    <>\n                        <NameTitle>{name_feedback[0]}</NameTitle>\n                        <ResponseTitle>{name_feedback[1]}</ResponseTitle>\n                    </>\n                )}/>\n                <Column align={'center'} title=\"Score\" dataIndex=\"score\" key=\"score\" render={(text) => (\n                    <Typography.Text style={{color: UNIVERSAL_COLOR}}><Typography.Text style={{color: UNIVERSAL_COLOR, fontFamily: 'Mark Pro Bold'}}>{text}</Typography.Text>/10</Typography.Text>\n                )} />\n                <Column align={'center'} title=\"Location\" dataIndex=\"location\" key=\"location\" />\n                <Column align={'center'} title=\"Primary Skill\" dataIndex=\"primary_skill\" key=\"primary_skill\" />\n                <Column align={'center'} title=\"More\" dataIndex=\"contact\" key=\"contact\" render={(contact) => (\n                    <BigBlackButton onClick={() => onMoreInfo(contact)}>\n                        More Info/Connect\n                    </BigBlackButton>\n                )} />\n            </Table>\n        </>)\n}\n\nexport default DesignerList","import React, {useState} from 'react'\nimport {UserContext} from '../../../lib/UserProvider'\nimport QuizScreen from '../../OnboardingFlow/Designers/QuizScreen'\nimport {getDesignerFromCommunication} from '../../../lib/server'\nimport {User, DesignerDecisionTalk, EmployerDecisionHire, CommForEmployer} from '../../../model/model'\nimport DesignerInfoModal from './DesignerInfoModal'\nimport {Typography, List, Radio, Popconfirm, Table} from 'antd'\nimport {BigBlackButton} from '../../General/BigBlackButton'\nconst {Column} = Table\n\ninterface CommunicationsListProps {\n    communicationList: CommForEmployer[]\n    updateDecision: (commId: string, update: EmployerDecisionHire) => void\n}\n\nconst EmployerCommList: React.FC<CommunicationsListProps> = (props) => {\n    const {communicationList, updateDecision} = props\n    const [showModal, setModalVisibility] = useState(false) \n    const [currentDesigner, setCurrentDesigner] = useState<User>(undefined) \n\n    const decisionToText = (dec: DesignerDecisionTalk): string => {\n        switch (dec) {\n            case DesignerDecisionTalk.UNDECIDED:\n                return 'Reviewing Your Request'\n            case DesignerDecisionTalk.WILL_TALK:\n                return `Willing to Talk`\n            case DesignerDecisionTalk.WILL_NOT_TALK:\n                return `Declines to Talk`\n        }\n    }\n\n    const onMoreInfo = async (commId: string) => {\n        const user = await getDesignerFromCommunication(commId)\n        setCurrentDesigner(user)\n        setModalVisibility(true)\n    }\n\n\n    return (\n        <>\n            <DesignerInfoModal setInvisible={() => setModalVisibility(false)}\n                                visible={showModal}\n                               designer={currentDesigner}/>\n            <Table\n                style={{paddingBottom: 10, width: '100%', fontFamily: 'Mark Pro Bold', fontWeight: 'normal'}}\n                size={\"large\"}\n                dataSource={communicationList}\n                bordered={false}\n                pagination={{defaultPageSize: 10}}\n            >\n                <Column width={'35%'} title=\"Name\" dataIndex=\"fullName\" key=\"fullName\" />\n                <Column title=\"Designer's Status\" dataIndex=\"designerApprovedTalk\" key=\"designerApprovedTalk\" render={(text) => (\n                    <Typography.Text style={{color: '#000'}}>{decisionToText(text)}</Typography.Text>\n                )}/>\n                <Column align={'center'} title=\"Decision\" dataIndex=\"decision\" key=\"decision\" render={(text, record, index) => (\n                    <Popconfirm title={\"Are you sure?\"}>\n                        <Radio.Group onChange={(e) => updateDecision(communicationList[index].communicationId, e.target.value)} value={text}>\n                            <Radio.Button value={EmployerDecisionHire.UNDECIDED}>Reviewing</Radio.Button>\n                            <Radio.Button value={EmployerDecisionHire.REJECT}>Reject</Radio.Button>\n                            <Radio.Button value={EmployerDecisionHire.HIRE}>Hire</Radio.Button>\n                        </Radio.Group>\n                    </Popconfirm> \n                )} />\n                <Column align={'center'} title=\"Info\" dataIndex=\"communicationId\" key=\"communicationId\" render={(communicationId) => (\n                    <BigBlackButton onClick={() => onMoreInfo(communicationId)}>\n                        More Info\n                    </BigBlackButton>\n                )} />\n                 />\n            </Table>\n        </>\n    )\n}\n\nexport default EmployerCommList","import React, {useEffect, useContext, useState} from 'react'\nimport { getGradedDesigners } from '../../../lib/server'\nimport { User } from '../../../model/model'\nimport {UserContext} from '../../../lib/UserProvider'\nimport Loading from '../../General/Loading'\nimport {Employer} from '../../../model/model'\nimport DesignerList, {FindDesignerListType} from './DesignerList'\nimport _ from 'lodash'\n\nconst FindDesigners: React.FC = (props) => {\n    const {currentUser, changeUser}  = useContext(UserContext)\n    const [designerList, setDesignerList] = useState<FindDesignerListType[] | undefined>(undefined)\n\n    useEffect(() => {\n        var id = currentUser.id\n        if ((currentUser as Employer).isAnonymous !== undefined) {\n            id = \"60fff552-280b-47ae-b632-25a744a7a910\"\n        }\n        getGradedDesigners(id).then((commList: User[]) => {\n            console.log(commList)\n            setDesignerList(_.map(commList, (user: User) => ({\n                name_feedback: [(user.firstName + \" \" + user.lastName), user.grade.response],\n                score: user.grade.score,\n                location: user.location,\n                experience: 4,\n                primary_skill: user.designType,\n                contact: user\n            })))\n        })\n    }, [currentUser])\n\n    if (designerList === undefined) {\n        return (<Loading />)\n    }\n    return (<DesignerList designerList={designerList}/>)\n}\n\nexport default FindDesigners","import React, {useContext, useState, useEffect} from 'react'\nimport {UserContext} from '../../../lib/UserProvider'\nimport { CommForEmployer, EmployerDecisionHire } from '../../../model/model'\nimport { updateEmployerDecision, getEmployerCommunicationsList } from '../../../lib/server'\nimport {message} from 'antd'\nimport {Employer} from '../../../model/model'\nimport EmployerCommList from './EmployerCommList'\n\nconst ManageCommunications: React.FC = (props) => {\n    const {currentUser}  = useContext(UserContext)\n    const [commList, setCommList] = useState<CommForEmployer[] | undefined>(undefined)\n\n    const updateDecision = async (commId: string, update: EmployerDecisionHire) => {\n        window.analytics.track((currentUser as Employer).companyName + ' updated Decision on Designer - ' + update);\n        await updateEmployerDecision(commId, update)\n        message.success(\"Updated Decision\")\n        setCommList(await getEmployerCommunicationsList(currentUser.id))\n    }\n\n    useEffect(() => {\n        getEmployerCommunicationsList(currentUser.id).then((commList: CommForEmployer[]) => {\n            setCommList(commList)\n        })\n    }, [])\n\n    return (<EmployerCommList communicationList={commList} updateDecision={updateDecision}/>)\n}\n\nexport default ManageCommunications","import React, {useState, useContext} from 'react'\nimport {PageHeader, Button, Tabs, message, Typography} from 'antd'\nimport {myFirebase} from '../../lib/firebase'\nimport Router from 'next/router'\nimport Loading from '../General/Loading'\nimport {Employer} from '../../model/model'\nimport { UserContext } from '../../lib/UserProvider'\nimport styled from 'styled-components'\n\nconst {TabPane} = Tabs\n\nconst SumpixelHeader = styled(PageHeader)`\n    background: #DAE2EF;\n    padding: 30px 8%;\n    min-height: 100vh;\n`\n\nconst LogoutButton = styled(Button)`\n    color: #000000;\n    padding-top: 10px;\n    font-family: 'Mark Pro Bold';\n`\nconst Line = styled.div`\n    border: 0.5px solid #000000;\n    margin-top: 10px;\n    margin-bottom: 10px;\n`\n\nconst SubTitle = styled(Typography.Title)`\n    font-family: 'Mark Pro Bold';\n    padding-top: 20px;\n    padding-bottom: 10px;\n`\n\ninterface NavigationBarProps {\n    subtitle: string\n    footer: React.ReactNode\n    isDesigner: boolean\n}\n\nconst NavigationBar: React.FC<NavigationBarProps> = (props) => {\n    const {subtitle, footer, isDesigner} = props\n    const {currentUser, changeUser} = useContext(UserContext)\n    const [loading, setLoading] = useState(false)\n\n    if (loading) {\n        return (<Loading/>)\n    }\n\n    return (\n        <SumpixelHeader \n                title={ <a href={isDesigner ? '/dashboard_user' : '/dashboard_employer'}>\n                            <img height={43} src={require('../../assets/sumpixel-logo.png')}/>\n                        </a>}\n                extra={[\n                    <LogoutButton type=\"link\" onClick={async () => {\n                        myFirebase.auth().signOut().then(() => {\n                            changeUser(undefined)\n                            setLoading(false)\n                            if ((currentUser as Employer).isAnonymous !== undefined) {\n                                Router.replace('/signup')\n                            } else {\n                                Router.replace('/')\n                            }\n                        }).catch((error) => {\n                            message.error(error.message)\n                        })\n                    }}>\n                        {(currentUser as Employer).isAnonymous === undefined ? 'Log Out' : 'Create Account To Start Connecting With Designers'}\n                    </LogoutButton>\n                ]}\n                footer={footer}>\n            <Line/>            \n            <SubTitle>{subtitle}</SubTitle>\n        </SumpixelHeader>\n    )\n}\n\nexport default NavigationBar","import styled from 'styled-components'\nimport {Button} from 'antd'\n\nexport const BigBlackButton = styled(Button)`\n    background: #000;\n    color: #fff;\n    border-radius: 2px;\n    border: none;\n    padding: 15px 24px;\n    height: auto;\n    font-family: 'Mark Pro';\n\n    &:hover {\n        background: #DAE2EF;\n        color: #000;\n    }\n\n    &:focus {\n        background: #000;\n        color: #fff;\n    }\n`","import React from 'react'\nimport {Row, Col} from 'antd'\nimport styled from 'styled-components';\n\nconst ColContainer = styled(Col)`\n    padding-top: 25px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n\ninterface ContainerProps {\n    children: React.ReactNode\n    isDashboard?: boolean\n    style?: any\n}\nexport const Container: React.FC<ContainerProps> = props => {\n    return (\n        <Row gutter={24}>\n            <Col className={'gutter-row'} span={props.isDashboard !== undefined ? 2 : 5}/>\n            <ColContainer style={props.style} className={'gutter-row'} span={props.isDashboard !== undefined ? 20 : 14}>\n                {props.children}\n            </ColContainer>\n            <Col className={'gutter-row'} span={props.isDashboard !== undefined ? 2 : 5}/>\n        </Row>\n    )\n}","import React from 'react'\nimport {Spin} from 'antd'\nimport styled from 'styled-components'\n\nconst Cont = styled.div`\n    position: fixed;\n    display: flex;\n    width: 100%;\n    height: 100%;\n    justify-content: center;\n    align-items: center;\n`\n\nconst Loading: React.FC = () => {\n    return (\n        <Cont>\n            <Spin size=\"large\" />\n        </Cont>\n    )\n}\n\nexport default Loading","import React, {useState, useContext} from 'react'\nimport { Form, Input, Button, Checkbox, Row, Col, Select, Upload, message, Spin } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport _ from 'lodash'\nimport {User, VisaStatus, NavBarStatus, Employer, UNIVERSAL_COLOR} from '../../../model/model'\nimport FormProps from '../FormProps'\nimport {UploadFile} from 'antd/lib/upload/interface'\nimport {storage_ref, myFirebase} from '../../../lib/firebase'\nimport {removeUser} from '../../../lib/server'\nimport {UserContext} from '../../../lib/UserProvider'\nimport Loading from '../../General/Loading'\nimport {BigBlackButton} from '../../General/BigBlackButton'\nconst {Option} = Select\n\ninterface FormBusinessDataProps extends FormProps {\n    modifyProfile?: boolean\n}\n\nconst FormBusinessData: React.FC<FormBusinessDataProps> = (props) => {\n    const {changeCurrentUser, changeStep, changeNavbarStatus, modifyProfile} = props\n    const {currentUser, changeUser} = useContext(UserContext)\n    const [checked, changeChecked] = useState(false)\n    const isModifyProfilePage = modifyProfile !== undefined\n\n    const goBack = async () => {\n        changeNavbarStatus(NavBarStatus.Undecided)\n        changeStep(-1)\n    }\n\n    if (currentUser == undefined) {\n        return (<Loading />)\n    }\n\n    const getRules = (name) => {\n        return [{ required: !isModifyProfilePage, message: !isModifyProfilePage ? `${name} is required` : '' }]\n    }\n\n    const onFinish = (values) => {\n        if (!isModifyProfilePage && !checked) {\n            message.error('Please agree to the Terms of Service')\n            return\n        }\n\n        const newEmployer = {\n            email: currentUser.email,\n            id: currentUser.id,\n            firstName: currentUser.firstName,\n            lastName: currentUser.lastName,\n            companyName: values.companyName,\n            phoneNumber: values.phoneNumber,\n            location: values.location\n        }\n\n        changeCurrentUser(_.pickBy(newEmployer, _.identity))\n        if (isModifyProfilePage) {\n            message.success(\"Your profile has been updated\")\n        } else {\n            changeStep(1)\n        }\n    }\n\n    const onFinishFailed = () => {\n        message.error('There was an error completing your account. Ensure every field is filled out.')\n    }\n\n    return (\n        <Form\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n        >\n            {!isModifyProfilePage ? \n            <>\n                <Form.Item\n                    label=\"Name\"\n                    name=\"firstName\"\n                >\n                    <Input.Group>\n                        <Row>\n                            <Col span={11}>\n                                <Input disabled defaultValue={currentUser.firstName}/>\n                            </Col>\n                            <Col span={2}/>\n                            <Col span={11}>\n                                <Input disabled defaultValue={currentUser.lastName}/>\n                            </Col>\n                        </Row>\n                    </Input.Group>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Email\"\n                    name=\"email\"\n                >\n                    <Input disabled defaultValue={currentUser.email}/>\n                </Form.Item>\n            </>\n            : null}\n            \n\n            <Form.Item\n                label=\"Company Name\"\n                name=\"companyName\"\n                rules={getRules(\"Company Name\")}\n            >\n                <Input defaultValue={modifyProfile ? '' : (currentUser as Employer).companyName || \"\"} placeholder=\"Company Name\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Phone Number\"\n                name=\"phoneNumber\"\n                rules={getRules(\"Phone Number\")}\n            >\n                <Input defaultValue={modifyProfile ? '' : (currentUser as Employer).phoneNumber || \"\"} placeholder=\"+1 (555) 555-5555\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Location\"\n                name=\"location\"\n                rules={getRules(\"Location\")}\n            >\n                <Input defaultValue={modifyProfile ? '' : (currentUser as Employer).location || \"\"} placeholder=\"New York City\"/>\n            </Form.Item>\n\n            {!isModifyProfilePage ? \n            <Form.Item \n                valuePropName={'checked'}\n                >\n                    <Checkbox style={{fontFamily: 'Mark Pro'}} checked={checked} onChange={(e) => changeChecked(e.target.checked)}>Agree to The <a style={{color: UNIVERSAL_COLOR}} target={'_blank'} href={'/terms'}>Terms of Service</a></Checkbox>\n            </Form.Item> \n            : null }\n\n            <Form.Item>\n                <Row justify=\"space-between\" align=\"middle\">\n                    {!isModifyProfilePage ? \n                        <BigBlackButton type=\"default\" onClick={goBack}>\n                            Back\n                        </BigBlackButton>\n                    : null}\n                    <BigBlackButton style={{marginTop: 10}} htmlType=\"submit\">\n                        {isModifyProfilePage ? \"Update Company Profile\" : \"Finish Setup\"}\n                    </BigBlackButton>\n                </Row>\n            </Form.Item>\n        </Form>\n    );\n}\n\nexport default FormBusinessData","import React, { Component, createContext } from \"react\";\nimport { myFirebase } from \"./firebase\";\nimport {User, Employer} from '../model/model'\nimport {getEmployer, getUser} from './server'\nimport Router from \"next/router\";\nimport {message} from 'antd'\nimport Loading from '../components/General/Loading'\n\ninterface ContextProps {\n    currentUser: User | Employer | null,\n    changeUser: (newUser: User | Employer | null) => void\n}\n\nexport const UserContext = createContext<Partial<ContextProps>>({\n    currentUser: null,\n    changeUser: () => {}\n});\nclass UserProvider extends Component {\n  changeUser = (newUser: User | Employer | null) => {\n      this.setState({currentUser: newUser, loading: false})\n  }\n\n  state = {\n    loading: false,\n    currentUser: null,\n    changeUser: this.changeUser\n  };\n\n  componentDidMount = () => {\n    myFirebase.auth().onAuthStateChanged(async (userAuth) => {\n        this.setState({loading: true})\n        if (userAuth === null) {\n            this.setState({loading: false})\n            return\n        }\n\n        if (userAuth.isAnonymous) {\n          console.log('userauth:' + userAuth)\n          this.changeUser({\n            firstName: '',\n            lastName: '',\n            email: '',\n            id: userAuth.uid,\n            isAnonymous: true\n          } as Employer)\n          return\n        }\n\n        // This is some of the worst code I've ever made\n        var current;\n        try {\n          current = await getUser(userAuth.uid)\n        } catch (error) {\n          try {\n            current = await getEmployer(userAuth.uid)\n            current[\"user_exists\"] = false\n          } catch (error) {\n            console.log(\"this better be a new user\")\n          }\n        }\n\n        if (current !== undefined && current['user_exists'] === undefined) {\n            this.changeUser(current as User)\n            window.analytics.identify(current.id, {\n              name: current.name,\n              email: current.email\n            });\n            Router.replace('/dashboard_user')\n        } else if (current !== undefined && current['employer_exists'] === undefined) {\n            window.analytics.identify(current.id, {\n              name: current.name,\n              email: current.email\n            });\n            this.changeUser(current as Employer)\n            Router.push('/dashboard_employer')\n        } else {\n            // TODO: Find alternate way to wait until names are updated\n            // Works for both\n            setTimeout(() => {\n                this.changeUser({\n                    email: userAuth.email,\n                    id: userAuth.uid,\n                    firstName: userAuth.displayName.substr(0, userAuth.displayName.indexOf(' ')),\n                    lastName: userAuth.displayName.substr(userAuth.displayName.indexOf(' ')+1),\n                })\n            }, 500)\n            \n        }\n    });\n  };\n  render() {\n    if (this.state.loading) {\n      return (<Loading/>)\n    }\n\n    return (\n      <UserContext.Provider value={this.state}>\n        {this.props.children}\n      </UserContext.Provider>\n    );\n  }\n}\nexport default UserProvider;","import * as firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/storage'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAhADa1McBAdXoOmv4T32G7rSBQkATYJ3Q\",\n    authDomain: \"sumpixel-auth.firebaseapp.com\",\n    databaseURL: \"https://sumpixel-auth.firebaseio.com\",\n    projectId: \"sumpixel-auth\",\n    storageBucket: \"sumpixel-auth.appspot.com\",\n    messagingSenderId: \"7190255367\",\n    appId: \"1:7190255367:web:a39d3629fd5215cda2d7a2\",\n    measurementId: \"G-2P5W47Z3HN\"\n};\n\n// Initialize Firebase\nif (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n}\nexport const myFirebase = firebase;\nexport const storage_ref = firebase.storage().ref();","import { User, Employer, EmployerDecisionHire, DesignerDecisionTalk, CommForDesigner, Communication, CommForEmployer } from \"../model/model\";\nimport axios from 'axios';\n\nconst SERVER_BASE = 'https://server.sumpixel.com/'\n\nenum HTTP_Requests {\n    GET = 'GET',\n    POST = 'POST',\n    PUT = 'PUT'\n}\n\nconst request = async (url: string, params, method: HTTP_Requests = HTTP_Requests.GET) => {\n    var response;\n    switch (method) {\n        case HTTP_Requests.GET:\n            response = await axios.get(SERVER_BASE + url, {params: params});\n            break;\n        case HTTP_Requests.POST:\n            response = await axios.post(SERVER_BASE + url, params);\n            break;\n        case HTTP_Requests.PUT:\n            response = await axios.put(SERVER_BASE + url, params);\n            break;\n    }\n\n    if (response.status !== 200) {\n        return generateErrorResponse('The server responded with an unexpected status.');\n    }\n\n    const result = response.data;\n\n    return result;\n\n}\n\nconst generateErrorResponse = (message) => {\n    return {\n        status : 'error',\n        message\n    };\n}\n\nexport const getUser = async (id: string): Promise<User | {user_exists: boolean}> => {\n    return await request('get-user', {id: id})\n}\n\nexport const getEmployer = async (id: string): Promise<Employer | {user_exists: boolean}> => {\n    return await request('get-employer', {id: id})\n}\n\nexport const removeUser = async (id: string) => {\n    return await request('remove-user', {id: id})\n}\n\nexport const removeEmployer = async (id: string) => {\n    return await request('remove-employer', {id: id})\n}\n\nexport const createUser = async (user: User) => {\n    return await request('create-user', user, HTTP_Requests.POST)\n}\n\nexport const modifyUser = async (user: User) => {\n    return await request('modify-user', user, HTTP_Requests.POST)\n}\n\nexport const createEmployer = async (employer: Employer) => {\n    return await request('create-employer', employer, HTTP_Requests.POST)\n}\n\nexport const modifyEmployer = async (employer: Employer) => {\n    return await request('modify-employer', employer, HTTP_Requests.POST)\n}\n\nexport const createCommunication = async (designerId: string, employerId: string): Promise<Communication> => {\n    return await request('create-new-communication', {designerId: designerId, employerId: employerId }, HTTP_Requests.POST)\n}\n\nexport const updateDesignerDecision = async (commId: string, decision: DesignerDecisionTalk) => {\n    return await request('update-designer-decision', {id: commId, designerApprovedTalk: decision }, HTTP_Requests.POST)\n}\n\nexport const updateEmployerDecision = async (commId: string, decision: EmployerDecisionHire) => {\n    return await request('update-employer-decision', {id: commId, decision: decision }, HTTP_Requests.POST)\n}\n\nexport const getDesignCommunicationsList = async (id: string): Promise<CommForDesigner[]> => {\n    return await request('get-all-designer-communications', {id})\n}\n\nexport const getEmployerCommunicationsList = async (id: string): Promise<CommForEmployer[]> => {\n    return await request('get-all-employer-communications', {id})\n}\n\nexport const getGradedDesigners = async (id: string): Promise<User[]> => {\n    return await request('get-graded-designers', {id})\n}\n\nexport const getDesignerFromCommunication = async (id: string): Promise<User> => {\n    return await request('get-designer-from-communication', {id})\n}","export const UNIVERSAL_COLOR = '#5E0BEF'\nexport const UNIVERSAL_BACKGROUND = '#F7F9FB'\n\nexport interface User {\n    id: string;\n    email: string;\n    firstName: string;\n    lastName: string;\n    phoneNumber?: string;\n    portfolio?: string;\n    location?: string;\n    salary?: string;\n    visa?: VisaStatus;\n    preferredRole?: string;\n    linkedin?: string;\n    dribbble?: string;\n    resume?: string;\n    designType?: string;\n    completedQuiz?: boolean;\n    grade?: DesignerGrade;\n    graded?: boolean;\n    communications?: string[];\n}\n\nexport interface DesignerGrade {\n    response?: string;\n    score?: number\n}\n\nexport interface Employer {\n    id: string;\n    email: string;\n    firstName: string;\n    lastName: string;\n    companyName?: string\n    phoneNumber?: string;\n    location?: string;\n    communications?: string[];\n    isAnonymous?: boolean\n}\n\nexport interface Communication {\n    id: string;\n    designerId: string;\n    employerId: string;\n    designerApprovedTalk: DesignerDecisionTalk;\n    decision: EmployerDecisionHire\n}\n\nexport interface CommForDesigner {\n    communicationId: string\n    companyName: string\n    designerApprovedTalk: DesignerDecisionTalk\n    decision: EmployerDecisionHire\n}\n\nexport interface CommForEmployer {\n    communicationId: string\n    fullName: string\n    designerApprovedTalk: DesignerDecisionTalk\n    decision: EmployerDecisionHire\n}\n\nexport enum EmployerDecisionHire {\n    REJECT = \"REJECT\",\n    HIRE = \"HIRE\",\n    UNDECIDED = \"UNDECIDED\"\n}\n\nexport enum DesignerDecisionTalk {\n    WILL_TALK = \"WILL_TALK\",\n    WILL_NOT_TALK = \"WILL_NOT_TALK\",\n    UNDECIDED = \"UNDECIDED\"\n}\n\nexport enum VisaStatus {\n    US_CITIZEN = \"US Citizen/Green Card\",\n    VISA_HOLDER = \"US Visa Holder\",\n    ELIGIBLE = \"Eligible For US Visa\",\n    NOT_ELIGIBLE = \"Not Eligible for US Visa\"\n}\n\nexport enum NavBarStatus {\n    Undecided,\n    Employer,\n    Designer\n}\n","import React, {useEffect, useState, useContext} from 'react'\nimport {Tabs} from 'antd'\nimport Loading from '../components/General/Loading'\nimport {Container} from '../components/General/Container'\nimport NavigationBar from '../components/Dashboard/NavigationBar'\nimport FormBusinessData from '../components/OnboardingFlow/Employers/FormBusinessData'\nimport FindDesigners from '../components/Dashboard/Employer/FindDesigners'\nimport ManageCommunications from '../components/Dashboard/Employer/ManageCommunications'\nimport {UserContext} from '../lib/UserProvider'\nimport {Employer, UNIVERSAL_BACKGROUND} from '../model/model'\nimport { modifyEmployer} from '../lib/server'\nimport Head from 'next/head'\nimport styled from 'styled-components'\nimport {useRouter} from 'next/router'\nimport {myFirebase} from '../lib/firebase'\nconst {TabPane} = Tabs\n\nconst TabObjs = [{name: \"Designers\", key: \"1\"}, \n                {name: \"Communications\", key: \"2\"}, \n                {name: \"Profile\", key: \"3\"}]\n\nexport const Background = styled.div`\n    background-color: ${UNIVERSAL_BACKGROUND};\n    width: 100%;\n    overflow: scroll;\n`\n\nconst DashboardEmployer: React.FC = (props) => {\n    const {currentUser, changeUser}  = useContext(UserContext)\n    const {asPath, query} = useRouter()\n    \n    if (query.id === \"60fff552-280b-47ae-b632-25a744a7a910\" && currentUser === null) {\n        console.log('gets here')\n        myFirebase.auth().signInAnonymously()\n    }\n\n    useEffect(() => {\n        window.analytics.page('Employer Dashboard')\n    }, [])\n\n    const updateEmployer = async (updatedUser: Employer) => {\n        window.analytics.track('Modify Employer');\n        changeUser(updatedUser)\n        await modifyEmployer(updatedUser)\n    }\n\n    if (currentUser === undefined || currentUser === null) {\n        return (<Loading />)\n    }\n\n    var footer: React.ReactNode\n    if ((currentUser as Employer).isAnonymous !== undefined) {\n        footer = <Tabs tabBarGutter={40} defaultActiveKey=\"1\">\n                    <TabPane tab={TabObjs[0].name} key={TabObjs[0].key}>\n                        <Background>\n                            <Container isDashboard={true}>\n                                <FindDesigners/>\n                            </Container>\n                        </Background>\n                    </TabPane>\n                </Tabs>\n    } else {\n        footer = <Tabs tabBarGutter={40} defaultActiveKey=\"1\">\n                    <TabPane tab={TabObjs[0].name} key={TabObjs[0].key}>\n                        <Background>\n                            <Container isDashboard={true}>\n                                <FindDesigners/>\n                            </Container>\n                        </Background>\n                    </TabPane>\n                    <TabPane tab={TabObjs[1].name} key={TabObjs[1].key}>\n                        <Background>\n                            <Container isDashboard={true}>\n                                <ManageCommunications/>\n                            </Container>\n                        </Background>\n                    </TabPane>\n                    <TabPane tab={TabObjs[2].name} key={TabObjs[2].key}>\n                        <Background>\n                            <div style={{display: 'flex', padding: 40, justifyContent: 'left'}}>\n                                <FormBusinessData changeCurrentUser={updateEmployer} modifyProfile={true} />\n                            </div>\n                        </Background>\n                    </TabPane>\n                </Tabs>\n    }\n\n    return (\n        <>\n            <Head>\n                <title>Employer Dashboard</title>\n            </Head>\n            <NavigationBar \n                isDesigner={false}\n                subtitle={(currentUser as Employer).isAnonymous === undefined ? `${currentUser.firstName}'s Dashboard` : 'Dashboard'}\n                footer={footer}\n            />\n        </>\n    );\n};\n\nexport default DashboardEmployer;","module.exports = require(\"antd\");","module.exports = require(\"axios\");","module.exports = require(\"firebase/app\");","module.exports = require(\"firebase/auth\");","module.exports = require(\"firebase/storage\");","module.exports = require(\"lodash\");","module.exports = require(\"next/head\");","module.exports = require(\"next/router\");","module.exports = require(\"react\");","module.exports = require(\"styled-components\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxFA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AASA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAEA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;ACzFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AAkBA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AAOA;AACA;AACA;;;;;;;;;;;;ACzFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AALA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AASA;AACA;AACA;;;;;;;;;;;;AC1EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAgBA;AArBA;AA0BA;AACA;AACA;;;;;;;;;;;;AC9EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AASA;AACA;AAFA;AAMA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAOA;AACA;AAFA;AAIA;AAAA;AAAA;AAOA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAKA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAEA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACrJA;AACA;AAEA;AACA;AAEA;AAOA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAHA;AACA;AANA;AAYA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AACA;AAxEA;AACA;AAwEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AApFA;AACA;AAoFA;;;;;;;;;;;;ACtGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAWA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AATA;AACA;AAWA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;ACpGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA8DA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAKA;AAAA;AAAA;AAEA;AAAA;AAKA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAKA;AACA;AACA;AAMA;AACA;AACA;AAHA;AAOA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACrGA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}